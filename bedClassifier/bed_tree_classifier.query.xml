<?xml version="1.0" encoding="UTF-8"?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0">
    <name>Помещения</name>
    <object-id>bed_tree_classifier</object-id>
    <execution xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
        <n2o:sql>
            <n2o:items-query>
                select :select
                from md_bed_resource r
                inner join md_bed AS b ON r.bed_id = b.id
                join md_room room on b.room_id = room.id
                join pim_room proom on room.id = proom.id
                join pim_department dep on proom.department_id = dep.id
                join pim_organization org on dep.org_id = org.id
                left outer join md_bed_profile bp on bp.id = b.bed_profile_id
                where :where
                order by :order
            </n2o:items-query>

            <n2o:count-query>
                select count(r)
                from md_bed_resource r
                inner join md_bed AS b ON r.bed_id = b.id
                join md_room room on b.room_id = room.id
                join pim_room proom on room.id = proom.id
                join pim_department dep on proom.department_id = dep.id
                join pim_organization org on dep.org_id = org.id
                left outer join md_bed_profile bp on bp.id = b.bed_profile_id
                where :where
            </n2o:count-query>

            <n2o:alias>r</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>

        <field>
            <id>id</id>
            <domain>integer</domain>
        </field>


        <field>
            <id>name</id>
            <domain>string</domain>
            <display>
                <![CDATA['Койка № '||b.number||coalesce(' - '||bp.name,'')||
                coalesce((case when
                     not exists(
                        select 1 from sr_res_group_relationship rgrel join mc_step on mc_step.res_group_id = rgrel.group_id where rgrel.resource_id = r.id and
                            (not(:beginDate::timestamp > rgrel.edatetime or :endDate::timestamp is not null and :endDate::timestamp < rgrel.bdatetime)
                             AND (:endDate::timestamp is null or :endDate::timestamp > rgrel.bdatetime) and rgrel.edatetime is null
                             )and 
(mc_step.outcome_date is NULL or (mc_step.outcome_date + COALESCE( mc_step.outcome_time, '00:00:00'::TIME)) >=:beginDate::timestamp ))
                       then
                    '(свободна)'
                   else
                    (select '(' ||  coalesce(i.surname, '') || ' '
                            || case coalesce(substring(i.name for 1), '') when '' then '' else substring(i.name for 1) || '.' end || ' ' || case coalesce(substring(i.patr_name for 1), '') when '' then '' else substring(i.patr_name for 1) || '.' end
                            || ', ' || mc_case.uid  || ')'
                    from sr_res_group_relationship rgrel
					join mc_step on mc_step.res_group_id = rgrel.group_id
					join mc_case on mc_case.id = mc_step.case_id
                    join pci_patient on pci_patient.id = mc_case.patient_id
                    join pim_individual i on i.id = pci_patient.id
                    where mc_case.clinic_id = :clinicId and rgrel.resource_id = r.id and
                                      (not(:beginDate::timestamp > rgrel.edatetime or :endDate::timestamp is not null and :endDate::timestamp < rgrel.bdatetime)
                                      AND (:endDate::timestamp is null or :endDate::timestamp > rgrel.bdatetime) and rgrel.edatetime is null) order by rgrel.bdatetime desc limit 1)
                   end), 'свободна')]]>
            </display>
        </field>


        <field>
            <id>fullname</id>
            <domain>string</domain>
            <expression>proom.name || '; ' || b.number</expression>
        </field>

        <field>
            <id>clinicId</id>
            <domain>integer</domain>
            <expression>org.id</expression>
            <search>org.id = :clinicId</search>
        </field>

        <field>
            <id>departmentId</id>
            <domain>integer</domain>
            <expression>dep.id</expression>
            <search>dep.id=:departmentId</search>
        </field>

        <field>
            <id>room.id</id>
            <domain>integer</domain>
            <expression>proom.id</expression>
        </field>

        <field>
            <id>room.name</id>
            <domain>string</domain>
            <expression>
                <![CDATA[
                proom.name || ' (' || (select count(1) from md_bed where room_id = room.id) || '/'  ||
                (select count(1) from md_bed bb
                 join md_bed_resource r on r.bed_id = bb.id
                 where bb.room_id = room.id and not exists
                (select 1 from sr_res_group_relationship rgrel
                join mc_step on mc_step.res_group_id = rgrel.group_id
                where mc_step._clinic_id = :clinicId and rgrel.resource_id = r.id and
                (not(:beginDate::timestamp > rgrel.edatetime or :endDate::timestamp is not null and :endDate::timestamp < rgrel.bdatetime)
                AND (:endDate::timestamp is null or :endDate::timestamp > rgrel.bdatetime) and rgrel.edatetime is null) and 
(mc_step.outcome_date is NULL or (mc_step.outcome_date + COALESCE( mc_step.outcome_time, '00:00:00'::TIME)) >=:beginDate::timestamp ))) || ')'
                ]]>
            </expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>beginDate</id>
            <domain>date</domain>
            <display unavailable="true"/>
            <search value="null" unavailable="true"/>
        </field>

        <field>
            <id>endDate</id>
            <domain>date</domain>
            <display unavailable="true"/>
            <search value="null" unavailable="true"/>
        </field>

    </fields>
</query>