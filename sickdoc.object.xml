<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns:wf="http://n2oapp.net/framework/config/schema/action-workflow-1.0"
        xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-1.0">

    <name>Документ нетрудоспособности</name>

    <fields>
        <!--common-->
        <field id="curClinicId" domain="integer"/>

        <!--sickdoc-->
        <field id="id" domain="integer"/>
        <field id="clinicId" domain="integer"/>
        <field id="days" domain="integer"/>
        <field id="finalDiagnosis.id" domain="integer"/>
        <field id="hospitalDt.begin" domain="date"/>
        <field id="hospitalDt.end" domain="date"/>
        <field id="individual.id" domain="integer"/>
        <field id="initialDiagnosis.id" domain="integer"/>
        <field id="issueDt" domain="date"/>
        <field id="journal.id" domain="integer"/>
        <field id="kindId" domain="integer"/>
        <field id="mcase.id" domain="integer"/>
        <field id="parentId" domain="integer"/>
        <field id="period.begin" domain="date"/>
        <field id="period.end" domain="date"/>
        <field id="registratorId" domain="integer"/>
        <field id="readyToWorkDt" domain="date"/>
        <field id="readyToWorkOther.id" domain="integer"/>
        <field id="readyToWorkOtherDt" domain="date"/>
        <field id="stateId" domain="integer"/>
        <field id="sicksheet_number" domain="string"/>
        <field id="transferToOtherClinic" domain="boolean"/>
        <field id="transferFromOtherClinic" domain="boolean"/>
        <field id="wasInHospital" domain="boolean"/>
        <field id="workplace.id" domain="integer"/>
        <field id="workplacePrint" domain="string"/>
        <field id="workplaceTypeId" domain="integer"/>
        <field id="registeredClinicId" domain="integer"/>

        <!--sickdoc_extended-->
        <field id="disabilityPeriod.begin" domain="date"/>
        <field id="disabilityPeriod.end" domain="date"/>
        <field id="disabilityReasonEdited.id" domain="integer"/>
        <field id="disabilityReasonExt.id" domain="integer"/>
        <field id="disabilityReason.id" domain="integer"/>
        <field id="familyMemberId1" domain="integer"/>
        <field id="familyMemberId2" domain="integer"/>
        <field id="isDisabilityGroupChanged" domain="boolean"/>
        <field id="isEarlyPregnancyRegister" domain="boolean"/>
        <field id="isRegimenViolation" domain="boolean"/>
        <field id="isMse" domain="boolean"/>
        <field id="mseExaminationDt" domain="date"/>
        <field id="mseReferralDt" domain="date"/>
        <field id="mseRegisterDt" domain="date"/>
        <field id="onPlacementService" domain="boolean"/>
        <field id="regimenViolation.id" domain="integer"/>
        <field id="regimenViolationDt" domain="date"/>
        <field id="regimenViolationDoctor.id" domain="integer"/>
        <field id="sanatorium.id" domain="integer"/>
        <field id="sanatoriumOGRN" domain="string"/>
        <field id="voucherCode" domain="string"/>

        <!--family_member-->
        <field id="careForPatient1.id" domain="integer"/>
        <field id="careForPatient2.id" domain="integer"/>
        <field id="familyRelation1.id" domain="integer"/>
        <field id="familyRelation2.id" domain="integer"/>

        <!--period-->
        <field id="isOtherClinicForPeriod" domain="boolean"/>
        <field id="issuedEmployee.id" domain="integer"/>
        <field id="issuedEmployeePosition" domain="string"/>
        <field id="otherClinicForPeriod.id" domain="integer"/>
        <field id="witnessEmployee.id" domain="integer"/>
        <field id="witnessEmployeePosition" domain="string"/>

        <!-- Мигрированные с ЛСД поля -->
        <field id="family_member_1_relation_id_lsd.id" domain="integer"/>
        <field id="family_member_1_age_lsd" domain="integer"/>
        <field id="family_member_1_age_month_lsd" domain="integer"/>
        <field id="family_member_1_name_lsd" domain="string"/>
        <field id="family_member_2_relation_id_lsd.id" domain="integer"/>
        <field id="family_member_2_age_lsd" domain="integer"/>
        <field id="family_member_2_age_month_lsd" domain="integer"/>
        <field id="family_member_2_name_lsd" domain="string"/>
    </fields>

    <actions>
        <action id="read">
            <invocation/>
        </action>

        <action id="createOrUpdateSickSheet">
            <invocation>
                <wf:workflow start-task-id="1">
                    <wf:tasks>
                        <wf:service-task id="1" in-parameters-context-type="ACTION" out-parameters-context-type="TASK" next-task-id="2">
                            <wf:note>Создание или обновление ЛН</wf:note>
                            <wf:invocation>
                                <sql:sql>
                                select sickdoc.sickdoc_create_or_update(
                                <!--sickdoc-->
                                :id::integer
                                ,:begin_dt::date
                                ,:case_id::integer
                                ,:cur_clinic_id::integer
                                ,:end_dt::date
                                ,:final_diagnosis_id::integer
                                ,:hospital_from_dt::date
                                ,:hospital_to_dt::date
                                ,:individual_id::integer
                                ,:initial_diagnosis_id::integer
                                ,:journal_id::integer
                                ,:number::varchar
                                ,:parent_id::integer
                                ,:ready_to_work_dt::date
                                ,:ready_to_work_other_dt::date
                                ,:ready_to_work_other_id::integer
                                ,:registrator_id::integer
                                ,:workplace_id::integer
                                ,:workplace_print::varchar
                                ,(case when :was_in_hospital::boolean isnull then false else :was_in_hospital::boolean end)
                                ,:registeredClinicId::integer

                                    <!--sickdoc_extended-->
                                ,:disability_from_dt::date
                                ,:disability_to_dt::date
                                ,:disability_reason_edited_id::integer
                                ,:disability_reason_ext_id::integer
                                ,:disability_reason_id::integer
                                ,(case when :is_disability_group_changed::boolean isnull then false else :is_disability_group_changed::boolean end)
                                ,(case when :is_early_pregnancy_register::boolean isnull then false else :is_early_pregnancy_register::boolean end)
                                ,(case when :is_regimen_violation::boolean isnull then false else :is_regimen_violation::boolean end)
                                ,(case when :is_mse::boolean isnull then false else :is_mse::boolean end)
                                ,:mse_examination_dt::date
                                ,:mse_org_id::integer
                                ,:mse_referral_dt::date
                                ,:mse_register_dt::date
                                ,(case when :on_placement_service::boolean isnull then false else :on_placement_service::boolean end)
                                ,:regimen_violation_doctor_id::integer
                                ,:regimen_violation_dt::date
                                ,:regimen_violation_id::integer
                                ,:sanatorium_id::integer
                                ,:sanatorium_ogrn_code::varchar
                                ,:voucher_code::varchar

                                <!--family_member-->
                                ,:care_for_patient_id1::integer
                                ,:care_for_patient_id2::integer
                                ,:family_relation_id1::integer
                                ,:family_relation_id2::integer

                                <!--period-->
                                ,(case when :is_other_clinic_for_period::boolean isnull then false else :is_other_clinic_for_period::boolean isnull end)
                                ,:issued_employee_id::integer
                                ,:issued_employee_position::varchar
                                ,:other_clinic_id_for_period::integer
                                ,:witness_employee_id::integer
                                ,:witness_employee_position::varchar

                                ,:workplace_type_id::integer
                                ,:transfer_from_clinic::boolean
                                );
                                </sql:sql>
                            </wf:invocation>
                            <wf:out-parameters>
                                <param name="id" mapping="[0][0][0]" domain="integer"/>
                            </wf:out-parameters>
                        </wf:service-task>

                        <wf:service-task id="2" in-parameters-context-type="ACTION"
                                         out-parameters-context-type="TASK" next-task-id="3">
                            <wf:note>Обновить мигрированные с ЛСД поля</wf:note>
                            <wf:invocation>
                                <sql:sql>
                                    update sickdoc.sickdoc_extended set
                                        family_member_1_relation_id_lsd = :family_member_1_relation_id_lsd::integer,
                                        family_member_1_age_lsd = :family_member_1_age_lsd::integer,
                                        family_member_1_age_month_lsd = :family_member_1_age_month_lsd::integer,
                                        family_member_1_name_lsd = :family_member_1_name_lsd::varchar,
                                        family_member_2_relation_id_lsd = :family_member_2_relation_id_lsd::integer,
                                        family_member_2_age_lsd = :family_member_2_age_lsd::integer,
                                        family_member_2_age_month_lsd = :family_member_2_age_month_lsd::integer,
                                        family_member_2_name_lsd = :family_member_2_name_lsd::varchar
                                    where id=:id::integer;
                                    select 1;
                                </sql:sql>
                            </wf:invocation>
                            <wf:out-parameters>
                                <param name="wf_result" mapping="[0][0]"/>
                            </wf:out-parameters>

                        </wf:service-task>

                        <wf:service-task id="3" in-parameters-context-type="ACTION"
                                         out-parameters-context-type="TASK">
                            <wf:note>Нужен ли переход на продолжение? Переходим на форму продолжения ЛН, если у текущего ЛН задан код иное 31 или если регистрируем ЛН, выданный в другом МО </wf:note>
                            <wf:invocation>
                                <sql:sql>
                                    select
                                      case
                                        when (select code from md_sl_readytowork_other where id=:ready_to_work_other_id::integer) = '31' OR :transfer_from_clinic=true
                                        then true
                                        else false
                                      end
                                </sql:sql>
                            </wf:invocation>
                            <wf:out-parameters>
                                <param name="wf_result" mapping="[0][0][0]"/>
                            </wf:out-parameters>
                            <wf:results>
                                <wf:result value="true" next-task-id="4"/>
                            </wf:results>
                        </wf:service-task>

                        <wf:service-task id="4" in-parameters-context-type="TASK"
                                         out-parameters-context-type="TASK">
                            <wf:note>Переход на форму создания продолжения ЛН</wf:note>
                            <wf:invocation>
                                <rest:rest method="GET" date-format="dd.MM.yyyy">
                                    ${n2o.backend.path}/sicklists/sicklists/get-continue-sicksheet-page
                                </rest:rest>
                            </wf:invocation>
                            <wf:in-parameters>
                                <param name="id" mapping="['id']"/>
                                <param name="sicksheet_number" mapping="['number']"/>
                            </wf:in-parameters>
                            <wf:out-parameters>
                                <param name="url" mapping="['data']" domain="string"/>
                            </wf:out-parameters>
                        </wf:service-task>

                    </wf:tasks>
                </wf:workflow>
            </invocation>
            <in-parameters>
                <!--sickdoc-->
                <param name="id" mapping="['id']"/>
                <param name="curClinicId" mapping="['cur_clinic_id']"/>
                <param name="finalDiagnosis.id" mapping="['final_diagnosis_id']"/>
                <param name="hospitalDt.begin" mapping="['hospital_from_dt']" domain="date"/>
                <param name="hospitalDt.end" mapping="['hospital_to_dt']"/>
                <param name="initialDiagnosis.id" mapping="['initial_diagnosis_id']"/>
                <param name="individual.id" mapping="['individual_id']"/>
                <param name="journal.id" mapping="['journal_id']"/>
                <param name="mcase.id" mapping="['case_id']"/>
                <param name="parentId" mapping="['parent_id']"/>
                <param name="period.begin" mapping="['begin_dt']"/>
                <param name="period.end" mapping="['end_dt']"/>
                <param name="readyToWorkDt" mapping="['ready_to_work_dt']"/>
                <param name="readyToWorkOther.id" mapping="['ready_to_work_other_id']"/>
                <param name="readyToWorkOtherDt" mapping="['ready_to_work_other_dt']"/>
                <param name="registratorId" mapping="['registrator_id']" value="#{emplPos.id}"/>
                <param name="sicksheet_number" mapping="['number']"/>
                <param name="workplace.id" mapping="['workplace_id']"/>
                <param name="workplacePrint" mapping="['workplace_print']"/>
                <param name="wasInHospital" mapping="['was_in_hospital']"/>
                <param name="registeredClinicId" mapping="['registeredClinicId']"/>

                <!--sickdoc_extended-->
                <param name="disabilityPeriod.begin" mapping="['disability_from_dt']"/>
                <param name="disabilityPeriod.end" mapping="['disability_to_dt']"/>
                <param name="disabilityReasonEdited.id" mapping="['disability_reason_edited_id']"/>
                <param name="disabilityReasonExt.id" mapping="['disability_reason_ext_id']"/>
                <param name="disabilityReason.id" mapping="['disability_reason_id']"/>
                <param name="isDisabilityGroupChanged" mapping="['is_disability_group_changed']"/>
                <param name="isEarlyPregnancyRegister" mapping="['is_early_pregnancy_register']"/>
                <param name="isRegimenViolation" mapping="['is_regimen_violation']"/>
                <param name="isMse" mapping="['is_mse']"/>
                <param name="mseExaminationDt" mapping="['mse_examination_dt']"/>
                <param name="mseReferralDt" mapping="['mse_referral_dt']"/>
                <param name="mseRegisterDt" mapping="['mse_register_dt']"/>
                <param name="onPlacementService" mapping="['on_placement_service']"/>
                <param name="regimenViolation.id" mapping="['regimen_violation_id']"/>
                <param name="regimenViolationDt" mapping="['regimen_violation_dt']"/>
                <param name="regimenViolationDoctor.id" mapping="['regimen_violation_doctor_id']"/>
                <param name="sanatorium.id" mapping="['sanatorium_id']"/>
                <param name="sanatoriumOGRN" mapping="['sanatorium_ogrn_code']"/>
                <param name="voucherCode" mapping="['voucher_code']"/>

                <!--family_member-->
                <param name="careForPatient1.id" mapping="['care_for_patient_id1']"/>
                <param name="careForPatient2.id" mapping="['care_for_patient_id2']"/>
                <param name="familyRelation1.id" mapping="['family_relation_id1']"/>
                <param name="familyRelation2.id" mapping="['family_relation_id2']"/>

                <!--period-->
                <param name="isOtherClinicForPeriod" mapping="['is_other_clinic_for_period']"/>
                <param name="issuedEmployee.id" mapping="['issued_employee_id']"/>
                <param name="issuedEmployeePosition" mapping="['issued_employee_position']"/>
                <param name="otherClinicForPeriod.id" mapping="['other_clinic_id_for_period']"/>
                <param name="witnessEmployee.id" mapping="['witness_employee_id']"/>
                <param name="witnessEmployeePosition" mapping="['witness_employee_position']"/>
                <param name="workplaceTypeId" mapping="['workplace_type_id']"/>
                <param name="transferFromOtherClinic" mapping="['transfer_from_clinic']"/>

                <!-- Мигрированные с ЛСД поля -->
                <param name="family_member_1_relation_id_lsd.id" mapping="['family_member_1_relation_id_lsd']"/>
                <param name="family_member_1_age_lsd" mapping="['family_member_1_age_lsd']"/>
                <param name="family_member_1_age_month_lsd" mapping="['family_member_1_age_month_lsd']"/>
                <param name="family_member_1_name_lsd" mapping="['family_member_1_name_lsd']"/>
                <param name="family_member_2_relation_id_lsd.id" mapping="['family_member_2_relation_id_lsd']"/>
                <param name="family_member_2_age_lsd" mapping="['family_member_2_age_lsd']"/>
                <param name="family_member_2_age_month_lsd" mapping="['family_member_2_age_month_lsd']"/>
                <param name="family_member_2_name_lsd" mapping="['family_member_2_name_lsd']"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="checkCreatePossible"/>
                <validation ref-id="isSickdocNumberExists"/>
            </validations>
        </action>
        <action id="deleteSickSheet">
            <invocation>
                <sql:sql>
                    select sickdoc.sickdoc_delete(:id::integer);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
        </action>
        <action id="closeSickSheet">
            <invocation>
                <sql:sql>
                    select sickdoc.sickdoc_close(
                    :id::integer,
                    :ready_to_work_dt::date,
                    :ready_to_work_other_id::integer,
                    :ready_to_work_other_dt::date,
                    (case when :was_in_hospital::boolean isnull then false else :was_in_hospital::boolean end),
                    :hospital_from_dt::date,
                    :hospital_to_dt::date);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="readyToWorkDt" mapping="['ready_to_work_dt']"/>
                <param name="readyToWorkOther.id" mapping="['ready_to_work_other_id']"/>
                <param name="readyToWorkOtherDt" mapping="['ready_to_work_other_dt']"/>
                <param name="wasInHospital" mapping="['was_in_hospital']"/>
                <param name="hospitalDt.begin" mapping="['hospital_from_dt']" domain="date"/>
                <param name="hospitalDt.end" mapping="['hospital_to_dt']"/>
            </in-parameters>
        </action>
        <action id="issueOffHourJobSickSheet">
            <invocation>
                <sql:sql>
                    select sickdoc.issue_off_hour_job_sicksheet(
                    :parent_id::integer,
                    :number::varchar,
                    :journal_id::integer,
                    :workplace_id::integer,
                    :workplace_print::varchar,
                    :registrator_id::integer,
                    :clinic_id::integer);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['parent_id']" domain="integer"/>
                <param name="sicksheet_number" mapping="['number']" domain="string"/>
                <param name="journal.id" mapping="['journal_id']" domain="integer"/>
                <param name="workplace.id" mapping="['workplace_id']" domain="integer"/>
                <param name="workplacePrint" mapping="['workplace_print']" domain="string"/>
                <param name="registratorId" mapping="['registrator_id']" domain="integer" value="#{emplPos.id}"/>
                <param name="curClinicId" mapping="['clinic_id']" domain="integer" value="#{org.id}"/>
            </in-parameters>
        </action>
        <action id="duplicateSickSheet">
            <invocation>
                <sql:sql>
                    select sickdoc.sickdoc_duplicate(
                    :p_parent_id::INTEGER,
                    :p_annual_reason_id::INTEGER,
                    :p_number::VARCHAR,
                    :p_journal_id::INTEGER,
                    :p_registrator_id::INTEGER
                    );
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['p_parent_id']" domain="integer"/>
                <param name="annual_reason.id" mapping="['p_annual_reason_id']" domain="integer"/>
                <param name="sicksheet_duplicate_number" mapping="['p_number']" domain="string"/>
                <param name="journal.id" mapping="['p_journal_id']"/>
                <param name="registratorId" mapping="['p_registrator_id']" domain="integer" value="#{emplPos.id}"/>
            </in-parameters>
        </action>

    </actions>
    <validations>
        <condition id="checkDateInterval" level="error">
            <expression>((period.begin != null) &amp;&amp; (period.end != null))</expression>
            <message>Оба поля интервала дат должны быть заполнены</message>
        </condition>
        <constraint id="checkCreatePossible" level="error">
            <message>У пациента есть незакрытый документ №{s_number}</message>
            <invocation>
                <sql:sql>
                    SELECT CASE
                      WHEN :id NOTNULL THEN null
                      WHEN :parent_id NOTNULL THEN null
                      ELSE ( SELECT sickdoc.get_blocking_sicksheet(:individual_id,:disability_reason_id) )
                    END;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="parentId" mapping="['parent_id']"/>
                <param name="individual.id" mapping="['individual_id']"/>
                <param name="disabilityReason.id" mapping="['disability_reason_id']"/>
            </in-parameters>
            <out-parameters>
                <param name="s_number" mapping="[0][0][0]" domain="string"/>
            </out-parameters>
            <result expression="[0][0][0] == null"/>
        </constraint>
        <constraint id="checkParentDate" level="error">
            <message>Указанный интервал дат пересекается с интервалом дат предыдущего листа нетрудоспособности: {period}.</message>
            <invocation>
                <sql:sql>
                    SELECT CASE
                        WHEN :parent_id ISNULL THEN null
                        ELSE (SELECT (to_char(begin_dt, 'DD.MM.YYYY') || ' - ' || to_char(end_dt, 'DD.MM.YYYY')) as period
                        FROM sickdoc.sickdoc WHERE id=:parent_id and begin_dt is not null and end_dt is not null and end_dt >= :begin_dt)
                    END;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="parentId" mapping="['parent_id']"/>
                <param name="period.begin" mapping="['begin_dt']"/>
            </in-parameters>
            <out-parameters>
                <param name="period" mapping="[0][0][0]" domain="string"/>
            </out-parameters>
            <result expression="[0][0][0] == null"/>
        </constraint>
        <constraint id="isSickdocWithWorkplaceAlreadyExistsForCombineJob" level="error">
            <message>Документ с указанной организацией уже существует</message>
            <invocation>
                <sql:sql>
                    select exists(
                      select id
                      from sickdoc.sickdoc
                      where parent_id = :parent_id and workplace_id = :workplace_id and workplace_type_id =2
                    )
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['parent_id']" domain="integer"/>
                <param name="workplace.id" mapping="['workplace_id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == false"/>
        </constraint>

        <constraint id="isSickdocNumberExists" level="error">
            <message>Документ с данным номером уже существует</message>
            <invocation>
                <sql:sql>
                    select exists(
                      select id
                      from sickdoc.sickdoc
                      where (:id is null or id != :id) and number = :number
                    )
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="sicksheet_number" mapping="['number']"/>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <result expression="[0][0][0] == false"/>
        </constraint>



    </validations>
</object>
