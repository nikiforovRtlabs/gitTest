<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-2.0">
    <name>Услуги</name>

    <actions>

        <!--Создание оказанного осмотра -->
        <action id="createPhysicalService" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/physical-service
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="caseId" mapping="['caseId']"/>
                <param name="patientId" mapping="['patientId']"/>
                <param name="bdate" mapping="['bdate']"/>
                <param name="stepId" mapping="['stepId']"/>
                <param name="resGroupId" mapping="['resourceGroupId']"/>
                <param name="doctor.id" mapping="['doctorId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="financialTypeId" mapping="['financialTypeId']"/>
                <param name="clinicId" mapping="['clinicId']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="all"/>
        </action>

        <!--Изменение оказанного осмотра-->
        <!--сейчас не используется-->
        <action id="updatePhysicalService" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/physical-service
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="caseId" mapping="['caseId']"/>
                <param name="patientId" mapping="['patientId']"/>
                <param name="bdate" mapping="['bdate']"/>
                <param name="stepId" mapping="['stepId']"/>
                <param name="resGroupId" mapping="['resourceGroupId']"/>
                <param name="doctor.id" mapping="['doctorId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="financialTypeId" mapping="['financialTypeId']"/>
                <param name="clinicId" mapping="['clinicId']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="all"/>
        </action>

        <action id="copyPhysicalService" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/physical-service/copy
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="caseId" mapping="['caseId']"/>
                <param name="patientId" mapping="['patientId']"/>
                <param name="bdate" mapping="['bdate']"/>
                <param name="stepId" mapping="['stepId']"/>
                <param name="doctor.id" mapping="['doctorId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="financialTypeId" mapping="['financialTypeId']"/>
                <param name="clinicId" mapping="['clinicId']"/>
                <param name="copyFrom" mapping="['copyFrom']"/>

            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="all"/>
        </action>

        <!--Запланированные услуги-->
        <!--Создание/Изменение запланированной услуги-->
        <action id="savePlannedService" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/medical-service/planned
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="case.id" mapping="['caseId']"/>
                <param name="plannedDate" mapping="['plannedDate']"/>
                <param name="hospitalRecord.id" mapping="['stepId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="financialType.id" mapping="['financialTypeId']"/>
                <param name="patientId" mapping="['patientId']"/>
                <param name="clinicId" mapping="['clinicId']"/>
                <param name="byStandard" mapping="['byStandard']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="whiteList">
                <validation ref-id="isServiceProtocolExist"/>
            </validations>
        </action>

        <!-- Удаление запланированной услуги-->
        <action id="deletePlannedService" form-submit-label="Удалить" name="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/medical-service?id={id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
            <confirmation-text>Вы уверены, что хотите удалить запланированную услугу ?</confirmation-text>
        </action>


        <!--Оказанные услуги-->
        <!--Создание оказанной услуги-->
        <action id="createRenderedService" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/medical-service/rendered
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="caseId" mapping="['caseId']"/>
                <param name="renderedDate" mapping="['bdate']"/>
                <param name="hospitalRecord.id" mapping="['stepId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="financialType.id" mapping="['financialTypeId']"/>
                <param name="doctor.id" mapping="['doctorId']"/>
                <param name="resourceGroupId" mapping="['resourceGroupId']"/>
                <param name="complicationType.id" mapping="['complicationTypeId']"/>
                <param name="anesthesiaType.id" mapping="['anesthesiaTypeId']"/>
                <param name="patientId" mapping="['patientId']"/>
                <param name="clinicId" mapping="['clinicId']"/>
                <param name="service.pregnantOutcomeId" mapping="['pregnantOutcomeId']"/>
                <param name="byStandard" mapping="['byStandard']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="whiteList">
                <validation ref-id="isServiceProtocolExist"/>
            </validations>
        </action>

        <!--Обновление оказанной услуги-->
        <action id="updateRenderedService" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/medical-service/rendered
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="caseId" mapping="['caseId']"/>
                <param name="renderedDate" mapping="['bdate']"/>
                <param name="hospitalRecord.id" mapping="['stepId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="financialType.id" mapping="['financialTypeId']"/>
                <param name="doctor.id" mapping="['doctorId']"/>
                <param name="resourceGroupId" mapping="['resourceGroupId']"/>
                <param name="complicationType.id" mapping="['complicationTypeId']"/>
                <param name="anesthesiaType.id" mapping="['anesthesiaTypeId']"/>
                <param name="patientId" mapping="['patientId']"/>
                <param name="clinicId" mapping="['clinicId']"/>
                <param name="service.pregnantOutcomeId" mapping="['pregnantOutcomeId']"/>
                <param name="byStandard" mapping="['byStandard']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="whiteList">
                <validation ref-id="isServiceProtocolExist"/>
            </validations>
        </action>

        <!--Удаление оказанной услуги-->
        <action id="delete" form-submit-label="Удалить" name="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/medical-service?id={id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
            <confirmation-text>Вы уверены, что хотите удалить оказанную услугу ?</confirmation-text>
        </action>

        <!--Отменить оказание-->
        <action id="cancelRendered" form-submit-label="Отменить результат" name="Отменить результат">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/medical-service/cancelRendered?id={id}&amp;employeePositionUserId={employeePositionUserId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="employeePositionUserId" mapping="['employeePositionUserId']" value="#{emplPos.id?}"/>
            </in-parameters>
            <validations activate="nothing"/>
            <confirmation-text>Вы уверены, что хотите отменить результат ?</confirmation-text>
        </action>

        <action id="render" form-submit-label="Выполнить" name="Выполнить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/medical-service/render?msrId={id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="refusal" form-submit-label="Сохранить" name="Отменить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/medical-service/refusal?msrId={id}&amp;comment={comment}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="comment" mapping="['comment']" domain="string"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

    </actions>

    <validations>
        <constraint id="isServiceProtocolExist" level="warning">
            <message>Для редактируемой услуги есть заполненный протокол. При сохранении протокол будет удален.</message>
            <invocation>
                <sql:sql>
                    select count(msp.*), (case when :mainServiceId = (select service_id from sr_srv_rendered where id = :serviceRenderedId) then 0 else 1 end)
                    from  md_srv_protocol msp
                    join sr_srv_rendered ssr on ssr.id = msp.srv_rendered_id
                    where ssr.id = :serviceRenderedId
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['serviceRenderedId']" domain="integer"/>
                <param name="service.id" mapping="['mainServiceId']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0 || [0][0][1] == 0"/>
        </constraint>

        <constraint id="checkBeginDateAndHospitalPeriod" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[select admission_date + coalesce(admission_time, '00:00:00') <= :bdate
                     and (outcome_date is null or outcome_date + coalesce(outcome_time, '23:59:59') >= :bdate)
                     from mc_step where id=:stepId]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="stepId" mapping="['stepId']"/>
                <param name="bdate" mapping="['bdate']"/>
            </in-parameters>
            <result expression="[0].length == 0 or [0][0][0] == true"/>
            <message>Дата оказания услуги должна соответствовать датам пребывания в отделении.</message>
        </constraint>

        <condition id="checkBeginDateAndCurrentDate" level="error" check-before-submit="false">
            <expression on="bdate">
                moment(bdate, 'DD.MM.YYYY HH:mm').isBefore(new Date(), 'DD.MM.YYYY HH:mm') ||
                moment(bdate, 'DD.MM.YYYY HH:mm').isSame(new Date(), 'DD.MM.YYYY HH:mm')
            </expression>
            <message>Дата/время оказания не может быть больше текущей даты/времени.</message>
        </condition>

        <constraint id="checkServiceDate" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[select :plannedDate >= admission_date and (outcome_date is null or :plannedDate <= outcome_date ) from mc_step where id=:stepId]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="hospitalRecord.id" mapping="['stepId']"/>
                <param name="plannedDate" mapping="['plannedDate']" domain="date"/>
            </in-parameters>
            <result expression="[0].length == 0 or [0][0][0] == true"/>
            <message>Дата направления на услугу должна соответствовать датам пребывания в отделении.</message>
        </constraint>

    </validations>

</object>