<?xml version='1.0' encoding='UTF-8'?>
<object xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-2.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns="http://n2oapp.net/framework/config/schema/object-1.0">
    <name>Хирургическая операция</name>

    <actions>
        <action id="saveWaitConfirmationOperation" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/operation-service/waitConfirmationOperation
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="caseId" mapping="['caseId']"/>
                <param name="patientId" mapping="['patientId']"/>
                <param name="plannedDate" mapping="['plannedDate']"/>
                <param name="hospitalRecord.id" mapping="['stepId']"/>
                <param name="resourceGroupId" mapping="['resourceGroupId']"/>
                <param name="surgeon.id" mapping="['surgeonId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="operationRoom.id" mapping="['operationRoomId']"/>
                <param name="urgent" mapping="['urgent']"/>
                <param name="financialType.id" mapping="['financialTypeId']"/>
                <param name="clinicId" mapping="['clinicId']"/>
                <param name="srvRenderedOperId" mapping="['srvRenderedOperId']"/>
                <param name="anesthesiaType.id" mapping="['anesthesiaTypeId']"/>
                <param name="resultServiceType.id" mapping="['complicationTypeId']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="all"/>
        </action>

        <action id="renderOperation" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/operation-service/rendered
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="caseId" mapping="['caseId']"/>
                <param name="patientId" mapping="['patientId']"/>
                <param name="renderedDate" mapping="['renderedDate']"/>
                <param name="hospitalRecord.id" mapping="['stepId']"/>
                <param name="resourceGroupId" mapping="['resourceGroupId']"/>
                <param name="surgeon.id" mapping="['surgeonId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="operationRoom.id" mapping="['operationRoomId']"/>
                <param name="urgent" mapping="['urgent']"/>
                <param name="financialType.id" mapping="['financialTypeId']"/>
                <param name="clinicId" mapping="['clinicId']"/>
                <param name="anesthesiaType.id" mapping="['anesthesiaTypeId']"/>
                <param name="complicationType.id" mapping="['complicationTypeId']"/>
                <param name="srvRenderedOperId" mapping="['srvRenderedOperId']"/>
                <param name="complicatedValue" mapping="['complicatedValue']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="all"/>
        </action>

        <action id="savePlannedOrWaitConfirmationOperation" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/operation-service/plannedOrWaitConfirmationOperation
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="srvRenderedId" mapping="['id']"/>
                <param name="medicalCase.id" mapping="['caseId']"/>
                <param name="medicalCase.patient.id" mapping="['patientId']"/>
                <param name="medicalCase.step.id" mapping="['stepId']"/>
                <param name="plannedDate" mapping="['plannedDate']"/>
                <param name="resourceGroupId" mapping="['resourceGroupId']"/>
                <param name="surgeon.id" mapping="['surgeonId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="plan.operationRoom.id" mapping="['operationRoomId']"/>
                <param name="urgent" mapping="['urgent']"/>
                <param name="financialType.id" mapping="['financialTypeId']"/>
                <param name="medicalCase.clinic.id" mapping="['clinicId']"/>
                <param name="urgent" mapping="['urgent']"/>
                <param name="plan.queue.id" mapping="['queue']"/>
                <param name="id" mapping="['srvRenderedOperId']"/>

            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="all"/>
        </action>

        <action id="delete" form-submit-label="Удалить" name="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/medical-service?id={msrId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="msrId" mapping="['msrId']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
            <confirmation-text>Вы уверены, что хотите удалить операцию ?</confirmation-text>
        </action>

        <action id="return" form-submit-label="Вернуть" name="Вернуть">
            <invocation>
                <sql:sql>
                    update hospital.md_srv_rendered_oper set state_id = 1 where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="cancel" form-submit-label="Отменить" name="Отменить">
            <invocation>
                <sql:sql>
                    update hospital.md_srv_rendered_oper set state_id = 4 where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="saveQueueFromSchedule" form-submit-label="Сохранить" name="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/operation-service/saveQueueFromSchedule
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="srvRenderedId" mapping="['srvRenderedId']" domain="integer"/>
                <param name="srvRenderedOperId" mapping="['srvRenderedOperId']" domain="integer"/>
                <param name="resGroupId" mapping="['resGroupId']" domain="integer"/>
                <param name="queue" mapping="['queue']" domain="integer"/>
                <param name="resourceId" mapping="['operationRoomId']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="saveQueueFromScheduleList" form-submit-label="Сохранить" name="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/operation-service/saveQueueFromSchedule
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="srvRenderedId" mapping="['srvRenderedId']" domain="integer"/>
                <param name="srvRenderedOperId" mapping="['srvRenderedOperId']" domain="integer"/>
                <param name="resGroupId" mapping="['resGroupId']" domain="integer"/>
                <param name="queue" mapping="['queue']" domain="integer"/>
                <param name="resourceId" mapping="['operationRoomId']" domain="integer"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="checkQueueIsBusyList"/>
            </validations>
        </action>

        <action id="render" form-submit-label="Выполнить" name="Выполнить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/operation-service/render?msrId={msrId}&amp;msroId={msroId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="msrId" mapping="['msrId']" domain="integer"/>
                <param name="msroId" mapping="['msroId']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="cancelRender" form-submit-label="Отменить выполнение" name="Отменить выполнение">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/operation-service/cancelRender?msrId={msrId}&amp;msroId={msroId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="msrId" mapping="['msrId']" domain="integer"/>
                <param name="msroId" mapping="['msroId']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
            <confirmation-text>Вы уверены, что хотите отменить выполнение ?</confirmation-text>
        </action>

        <action id="saveSurgicalTeam" form-submit-label="Сохранить" name="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/operation-service/surgical-team
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="mdSrvRendered.id" mapping="['srvRenderedId']" domain="integer"/>
                <param name="mdSrvRendered.resGroupId" mapping="['resGroupId']" domain="integer"/>
                <param name="employee.id" mapping="['employeeResourceId']" domain="integer"/>
                <param name="role.id" mapping="['roleId']" domain="integer"/>
                <param name="id" mapping="['resourceGroupRelationshipId']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="deleteEmployeeFromTeam" form-submit-label="Отменить" name="Отменить">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/operation-service/surgical-team/{id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <confirmation-text>Вы уверены, что хотите удалить сотрудника из команды ?</confirmation-text>
            <validations activate="nothing"/>
        </action>


        <action id="deleteAnestheticMap" form-submit-label="Удалить наркозную карту">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/anesthetic-map/{id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="isWriteOffCheckAnesthetic"/>
                <validation ref-id="isWriteOffCheckPremedication"/>
                <validation ref-id="isWriteOffCheckPrescription"/>
                <validation ref-id="checkIsMcClosing"/>
            </validations>
            <confirmation-text>Вместе с наркозной картой будет удалено и описание течения операции. Продолжить?
            </confirmation-text>
        </action>

        <action id="deleteDuringOperation" form-submit-label="Удалить течение операции">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/anesthetic-map/during-operation/{id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="isWriteOffCheckPrescription"/>
                <validation ref-id="checkIsMcClosing"/>
            </validations>
            <confirmation-text>Удалить течение операции по данной операции?</confirmation-text>
        </action>

    </actions>

    <validations>
        <constraint id="checkPlannedDateDate" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[select :plannedDate >= admission_date + coalesce(admission_time, '00:00') and (outcome_date is null or :plannedDate <= outcome_date + coalesce(outcome_time, '23:59'))
                    from mc_step where id=:stepId]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="hospitalRecord.id" mapping="['stepId']"/>
                <param name="plannedDate" mapping="['plannedDate']" domain="date"/>
            </in-parameters>
            <result expression="[0].length == 0 or [0][0][0] == true"/>
            <message>Дата планирования должна соответствовать датам пребывания в отделении.</message>
        </constraint>

        <constraint id="checkPlannedDate2" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[select :plannedDate >= admission_date + coalesce(admission_time, '00:00') and (outcome_date is null or :plannedDate <= outcome_date + coalesce(outcome_time, '23:59'))
                    from mc_step where id=:stepId]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="medicalCase.step.id" mapping="['stepId']"/>
                <param name="plannedDate" mapping="['plannedDate']" domain="date"/>
            </in-parameters>
            <result expression="[0].length == 0 or [0][0][0] == true"/>
            <message>Дата планирования должна соответствовать датам пребывания в отделении.</message>
        </constraint>

        <constraint id="checkRenderedDate" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[select :renderedDate >= admission_date + coalesce(admission_time, '00:00') and (outcome_date is null or :renderedDate <= outcome_date + coalesce(outcome_time, '23:59'))
                    from mc_step where id=:stepId]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="hospitalRecord.id" mapping="['stepId']"/>
                <param name="renderedDate" mapping="['renderedDate']" domain="date"/>
            </in-parameters>
            <result expression="[0].length == 0 or [0][0][0] == true"/>
            <message>Дата оказания должна соответствовать датам пребывания в отделении.</message>
        </constraint>

        <constraint id="checkQueueIsBusyList" level="error">
            <message>Очередь уже занята, выберите другую.</message>
            <invocation>
                <sql:sql>
                    SELECT count(rgr.*)
                    from sr_res_group_relationship rgr
                    join sr_res_group rg on rg.id = rgr.group_id
                    join sr_srv_rendered ssr on ssr.res_group_id = rg.id
                    join md_srv_rendered msr on msr.id = ssr.id
                    join hospital.md_srv_rendered_oper msro on msro.service_id = ssr.id
                    join mc_case cs on cs.id = msr.case_id
                    where msro.queue = :queue and
                    msro.id != :srvRenderedOperId
                    and rgr.resource_id = :resourceId and cs.case_type_id = 2 and ssr.planned_date =
                    ( SELECT ssr.planned_date
                    from sr_srv_rendered ssr
                    join md_srv_rendered msr on msr.id = ssr.id
                    join hospital.md_srv_rendered_oper msro on msro.service_id = ssr.id
                    join mc_case cs on cs.id = msr.case_id
                    where msro.id = :srvRenderedOperId
                    and cs.case_type_id = 2)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="queue" mapping="['queue']"/>
                <param name="resourceId" mapping="['resourceId']"/>
                <param name="srvRenderedOperId" mapping="['srvRenderedOperId']"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>

        <constraint id="checkQueueIsBusy" level="error">
            <message>Очередь уже занята, выберите другую.</message>
            <invocation>
                <sql:sql>
                    SELECT count(rgr.*)
                    from sr_res_group_relationship rgr
                    join sr_res_group rg on rg.id = rgr.group_id
                    join sr_srv_rendered ssr on ssr.res_group_id = rg.id
                    join md_srv_rendered msr on msr.id = ssr.id
                    join hospital.md_srv_rendered_oper msro on msro.service_id = ssr.id
                    join mc_case cs on cs.id = msr.case_id
                    where msro.queue = :queue and
                    case when :id is not null then msro.id != :id else 1=1 end
                    and rgr.resource_id = :resourceId and cs.case_type_id = 2 and ssr.planned_date = :plannedDate
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="plan.queue.id" mapping="['queue']"/>
                <param name="plan.operationRoom.id" mapping="['resourceId']"/>
                <param name="plannedDate" mapping="['plannedDate']"/>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>

        <constraint id="isWriteOffCheckAnesthetic" level="error">
            <invocation>
                <sql:sql>
                    select count(ps.id)
                    from hospital.patient_before_procedure pbp
                    left join hospital.basic_data_anesthetic_map bdam on bdam.id=pbp.id
                    left join hospital.md_srv_rendered_oper msro on bdam.md_srv_rendered_oper_id = msro.id
                    inner join hospital.prescription p on p.service_id=msro.service_id
                    left join hospital.prescription_schedule ps on p.id=ps.prescription_id
                    where msro.id = :id and p.id=pbp.anesthetic_id
                    and ps.store_opr_id is not null

                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="result" mapping="[0][0][0]"/>
            </out-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Удаление невозможно. Необходимо отменить списания</message>
        </constraint>

        <constraint id="isWriteOffCheckPremedication" level="error">
            <invocation>
                <sql:sql>
                    select count(ps.id)
                    from hospital.patient_before_procedure pbp
                    left join hospital.basic_data_anesthetic_map bdam on bdam.id=pbp.id
                    left join hospital.md_srv_rendered_oper msro on bdam.md_srv_rendered_oper_id = msro.id
                    inner join hospital.prescription p on p.service_id=msro.service_id
                    left join hospital.prescription_schedule ps on p.id=ps.prescription_id
                    where msro.id = :id and p.id=pbp.premedication_id
                    and ps.store_opr_id is not null

                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="result" mapping="[0][0][0]"/>
            </out-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Удаление невозможно. Необходимо отменить списания</message>
        </constraint>
        <constraint id="isWriteOffCheckPrescription" level="error">
            <invocation>
                <sql:sql>
                    select count(ps.id)
                    from hospital.patient_before_procedure pbp
                    left join hospital.basic_data_anesthetic_map bdam on bdam.id=pbp.id
                    left join hospital.md_srv_rendered_oper msro on bdam.md_srv_rendered_oper_id = msro.id
                    inner join hospital.prescription p on p.service_id=msro.service_id
                    left join hospital.prescription_schedule ps on p.id=ps.prescription_id
                    where msro.id = :id and p.used_type_id in (1,2,3)
                    and ps.store_opr_id is not null

                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="result" mapping="[0][0][0]"/>
            </out-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Удаление невозможно. Необходимо отменить списания</message>
        </constraint>

        <constraint id="checkIsMcClosing" level="error">
            <message>Случай закрыт.</message>
            <invocation>
                <sql:sql><![CDATA[
                    select count(c.closing_step_id)
                    from hospital.md_srv_rendered_oper msro
                    join md_srv_rendered msr on msr.id = msro.service_id
                    join sr_srv_rendered ssr on ssr.id = msr.id
                    join sr_service s on s.id = ssr.service_id
                    join mc_case c on c.id = msr.case_id
                    where msro.id = :id
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>

        <constraint id="isServiceProtocolExist" level="warning">
            <message>Для редактируемой услуги есть заполненный протокол. При сохранении протокол будет удален.</message>
            <invocation>
                <sql:sql>
                    select count(msp.*), (case when :mainServiceId = (select service_id from sr_srv_rendered where id = :serviceRenderedId) then 0 else 1 end)
                    from  md_srv_protocol msp
                    join sr_srv_rendered ssr on ssr.id = msp.srv_rendered_id
                    where ssr.id = :serviceRenderedId
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['serviceRenderedId']" domain="integer"/>
                <param name="service.id" mapping="['mainServiceId']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0 || [0][0][1] == 0"/>
        </constraint>

    </validations>

</object>
