<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <object-id>medicalServiceRendered</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from mc_step s
                join mc_case c on c.id = s.case_id
                join pci_patient p on p.id = c.patient_id
                join pim_individual i on i.id = p.id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(s)
                from mc_step s
                join mc_case c on c.id = s.case_id
                join pci_patient p on p.id = c.patient_id
                join pim_individual i on i.id = p.id
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>stepId</id>
            <domain>integer</domain>
            <expression>s.id</expression>
            <search>:expression = :stepId</search>
        </field>
        <field>
            <id>caseId</id>
            <domain>integer</domain>
            <expression>c.id</expression>
        </field>
        <field>
            <id>financialTypeId</id>
            <domain>integer</domain>
            <expression>c.funding_id</expression>
        </field>
        <field>
            <id>patientId</id>
            <domain>integer</domain>
            <expression>c.patient_id</expression>
        </field>
        <field>
            <id>clinicId</id>
            <domain>integer</domain>
            <expression>c.clinic_id</expression>
        </field>
        <field>
            <id>patient</id>
            <domain>string</domain>
            <expression>coalesce(i.surname, '') || ' ' || coalesce(i.name, '') || ' ' || coalesce(i.patr_name, '') ||
                coalesce(' (' || to_char(i.birth_dt, 'DD.MM.YYYY') || ')', '') </expression>
        </field>

        <field>
            <id>case.step.id</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search>s.id = :case.step.id</search>
        </field>

        <field>
            <id>bdate</id>
            <domain>date</domain>
            <expression>(case when ((select previous_id from hsp_record where id = s.id) is null)
                then (s.admission_date + coalesce(s.admission_time, '00:00'))
                else (current_date + current_time) end)
             </expression>
        </field>

        <field>
            <id>selectServices.id</id>
            <domain>integer</domain>
            <expression>
                (case (exists(select 1 from sr_service s
                join sr_srv_type st on st.id = s.type_id
                where st.is_physical is true and
                exists(select 1 from sr_resource_service rs where rs.service_id = s.id and rs.resource_id = :employeePositionResourceId)))
                when true then 2
                when false then 1
                end)
            </expression>
        </field>
        <field>
            <id>employeePositionResourceId</id>
            <domain>integer</domain>
            <expression>:employeePositionResourceId</expression>
            <search value="#{emplPosRes.id}">:expression = :employeePositionResourceId</search>
        </field>
    </fields>
</query>