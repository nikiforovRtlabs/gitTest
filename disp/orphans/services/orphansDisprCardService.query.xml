<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xsi:schemaLocation="http://n2oapp.net/framework/config/schema/query-1.0 http://localhost:8080/n2o/config/schema/query/query-1.0.xsd">
    <name>Услуга десткой дисп</name>
    <object-id>orphansDisprCardService</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from disp.md_event_patient mep
                left join disp.md_event_service_patient mesp on mesp.event_patient_id = mep.id
                left join disp.md_event_service mes on mes.id = mesp.service_id
                left join sr_service ss on ss.id=mes.service_id

                left join disp.md_event me on me.id=mep.event_id
                left join md_standard ms on ms.id = me.standard_id
                left join md_norm_document_service mnds on mnds.id = mes.doc_service_id

                left join SR_RES_GROUP msrg on msrg.id = mes.resource_id
                left join (select ssr.id, msr.case_id, ssr.service_id, ssr.res_group_id, ssr.bdate, ssr.comment from MD_SRV_RENDERED msr
                left join SR_SRV_RENDERED ssr on ssr.id = msr.id) as ssr on ssr.case_id = mep.case_id and ssr.service_id = mes.service_id
                left join SR_RES_GROUP srg on srg.id = ssr.res_group_id
                left join disp.md_event_service_patient_agreement mespa on mespa.service_id = mesp.id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(1)
            </n2o:count-query>
            <n2o:alias>mep</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>Integer</domain>
            <expression>mesp.id</expression>
        </field>
        <field>
            <id>idmesp</id>
            <domain>Integer</domain>
            <expression>mesp.id</expression>
            <display>mesp.id</display>
            <search>mesp.id = :idmesp</search>
        </field>
        <field>
            <id>idi</id>
            <domain>Integer</domain>
            <expression>mep.id</expression>
            <display>NULL</display>
            <search>mep.id = :idi</search>
        </field>
        <field>
            <id>event_patient_id</id>
            <domain>Integer</domain>
            <expression>mep.id</expression>
            <display>mep.id</display>
            <search>mep.id = :event_patient_id</search>
        </field>
        <field>
            <id>case_id</id>
            <domain>Integer</domain>
            <expression>mep.case_id</expression>
            <display>mep.case_id</display>
            <search>mep.case_id = :case_id</search>
        </field>
        <field>
            <id>ssr_id</id>
            <domain>Integer</domain>
            <expression>ssr.id</expression>
            <display>ssr.id</display>
            <search>ssr.id = :ssr_id</search>
        </field>
        <field>
            <id>is_inherit_protocol</id>
            <domain>boolean</domain>
            <expression>(select true where
                exists (select 1 from sr_srv_ehr_opt sseo
                left join  sr_srv_rendered s on s.service_id=sseo.service_id
                where s.id=ssr.id and sseo.template is not null))</expression>
            <display>(select true where
                exists (select 1 from sr_srv_ehr_opt sseo
                left join  sr_srv_rendered s on s.service_id=sseo.service_id
                where s.id=ssr.id and sseo.template is not null))</display>
        </field>
        <field>
            <id>org_id</id>
            <domain>Integer</domain>
            <expression>me.org_id</expression>
            <display>me.org_id</display>
        </field>
        <field>
            <id>service_type_id</id>
            <domain>Integer</domain>
            <expression>mes.service_id</expression>
            <display>mes.service_id</display>
        </field>
        <field>
            <id>service_code</id>
            <domain>string</domain>
            <expression>mnds.code</expression>
            <display>mnds.code</display>
            <search>mnds.code = :service_code</search>
        </field>
        <field>
            <id>resource.id</id>
            <domain>Integer</domain>
            <expression>
                CASE WHEN mes.district_check=TRUE and srg.id IS NULL THEN COALESCE((select dsrg.id from pci_patient_reg dppr
                left join SR_RES_GROUP_DISTRICT dsrgd on dsrgd.district_id = dppr.district_id
                inner join SR_RES_GROUP_SERVICE dsrgs on dsrgs.group_id = dsrgd.group_id and dsrgs.srv_type_id = mes.service_id
                left join SR_RES_GROUP dsrg on dsrg.id = dsrgs.group_id
                where dppr.patient_id = mep.indiv_id), msrg.id, NULL)
                WHEN mes.district_check=FALSE or srg.id IS NOT NULL THEN COALESCE(srg.id, msrg.id, NULL)
                ELSE COALESCE(srg.id, msrg.id, NULL)
                END
            </expression>
            <display>
                CASE WHEN mes.district_check=TRUE and srg.id IS NULL THEN COALESCE((select dsrg.id from pci_patient_reg dppr
                left join SR_RES_GROUP_DISTRICT dsrgd on dsrgd.district_id = dppr.district_id
                inner join SR_RES_GROUP_SERVICE dsrgs on dsrgs.group_id = dsrgd.group_id and dsrgs.srv_type_id = mes.service_id
                left join SR_RES_GROUP dsrg on dsrg.id = dsrgs.group_id
                where dppr.patient_id = mep.indiv_id), msrg.id, NULL)
                WHEN mes.district_check=FALSE or srg.id IS NOT NULL THEN COALESCE(srg.id, msrg.id, NULL)
                ELSE COALESCE(srg.id, msrg.id, NULL)
                END
            </display>
        </field>
        <field>
            <id>resource.srg_id</id>
            <domain>Integer</domain>
            <expression>
                CASE WHEN mes.district_check=TRUE and srg.id IS NULL THEN COALESCE((select dsrg.id from pci_patient_reg dppr
                left join SR_RES_GROUP_DISTRICT dsrgd on dsrgd.district_id = dppr.district_id
                inner join SR_RES_GROUP_SERVICE dsrgs on dsrgs.group_id = dsrgd.group_id and dsrgs.srv_type_id = mes.service_id
                left join SR_RES_GROUP dsrg on dsrg.id = dsrgs.group_id
                where dppr.patient_id = mep.indiv_id), msrg.id, NULL)
                WHEN mes.district_check=FALSE or srg.id IS NOT NULL THEN COALESCE(srg.id, msrg.id, NULL)
                ELSE COALESCE(srg.id, msrg.id, NULL)
                END
            </expression>
            <display>
                CASE WHEN mes.district_check=TRUE and srg.id IS NULL THEN COALESCE((select dsrg.id from pci_patient_reg dppr
                left join SR_RES_GROUP_DISTRICT dsrgd on dsrgd.district_id = dppr.district_id
                inner join SR_RES_GROUP_SERVICE dsrgs on dsrgs.group_id = dsrgd.group_id and dsrgs.srv_type_id = mes.service_id
                left join SR_RES_GROUP dsrg on dsrg.id = dsrgs.group_id
                where dppr.patient_id = mep.indiv_id), msrg.id, NULL)
                WHEN mes.district_check=FALSE or srg.id IS NOT NULL THEN COALESCE(srg.id, msrg.id, NULL)
                ELSE COALESCE(srg.id, msrg.id, NULL)
                END
            </display>
        </field>
        <field>
            <id>resource.name</id>
            <domain>Integer</domain>
            <expression>
                CASE WHEN mes.district_check=TRUE and srg.name IS NULL THEN COALESCE((select dsrg.name from pci_patient_reg dppr
                left join SR_RES_GROUP_DISTRICT dsrgd on dsrgd.district_id = dppr.district_id
                inner join SR_RES_GROUP_SERVICE dsrgs on dsrgs.group_id = dsrgd.group_id and dsrgs.srv_type_id = mes.service_id
                left join SR_RES_GROUP dsrg on dsrg.id = dsrgs.group_id
                where dppr.patient_id = mep.indiv_id), msrg.name, NULL)
                WHEN mes.district_check=FALSE or srg.name IS NOT NULL THEN COALESCE(srg.name, msrg.name, NULL)
                ELSE COALESCE(srg.name, msrg.name, NULL)
                END
            </expression>
            <display>
                CASE WHEN mes.district_check=TRUE and srg.name IS NULL THEN COALESCE((select dsrg.name from pci_patient_reg dppr
                left join SR_RES_GROUP_DISTRICT dsrgd on dsrgd.district_id = dppr.district_id
                inner join SR_RES_GROUP_SERVICE dsrgs on dsrgs.group_id = dsrgd.group_id and dsrgs.srv_type_id = mes.service_id
                left join SR_RES_GROUP dsrg on dsrg.id = dsrgs.group_id
                where dppr.patient_id = mep.indiv_id), msrg.name, NULL)
                WHEN mes.district_check=FALSE or srg.name IS NOT NULL THEN COALESCE(srg.name, msrg.name, NULL)
                ELSE COALESCE(srg.name, msrg.name, NULL)
                END
            </display>
        </field>
        <field>
            <id>date</id>
            <domain>date</domain>
            <expression>COALESCE(ssr.bdate, current_date)</expression>
            <display>COALESCE(ssr.bdate, current_date)</display>
        </field>
        <field>
            <id>result</id>
            <domain>string</domain>
            <display>ssr.comment</display>
        </field>
        <field>
            <id>agreeService</id>
            <domain>boolean</domain>
            <expression>mespa.agree</expression>
            <display>mespa.agree</display>
        </field>
    </fields>
</query>