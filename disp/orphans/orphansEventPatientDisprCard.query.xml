<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xsi:schemaLocation="http://n2oapp.net/framework/config/schema/query-1.0 http://localhost:8080/n2o/config/schema/query/query-1.0.xsd">
    <name>orphansEventPatientDisprCard</name>
    <object-id>orphansEventPatientDisprCard</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from disp.md_event_patient mep
                left join disp.md_event me on me.id = mep.event_id
                left join disp.md_event_type met on met.id=me.event_type
                left join pim_individual i on i.id = mep.indiv_id
                left join pci_patient pci on pci.id = i.id
                left join pci_patient_reg ppr on ppr.patient_id = i.id and ppr.type_id = 1 and ppr.clinic_id = me.org_id and ppr.unreg_dt IS NULL and ppr.state_id = 1
                left join pim_organization po on po.id = ppr.clinic_id
                left join md_clinic_district mcd on mcd.id = ppr.district_id or mcd.id = ppr.district_by_addr_id
                left join (
                select ppa.party_id, ae.id from pim_party_address ppa
                left join pim_party_addr_to_addr_type ppatat on ppatat.party_address_id = ppa.id
                left join PIM_ADDRESS_TYPE pat on pat.id = ppatat.address_type_id
                left join address_element ae on ae.id = ppa.addr_id
                where pat.code = 'ACTUAL') as ae on ae.party_id = i.id
                left join pim_gender g on g.id = i.gender_id
                left join md_ethnic_group eg on eg.id = pci.ethnic_group_id
                left join md_soc_group sg on sg.id = pci.social_group_id
                left join pim_nationality n on n.id = i.nationality_id

                left join disp.md_disp_orphans_patient_card mdopc on mdopc.id = mep.id

                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(mep)
                from disp.md_event_patient mep
                left join disp.md_event me on me.id = mep.event_id
                left join pim_individual i on i.id = mep.indiv_id
                left join pci_patient pci on pci.id = i.id
                left join pci_patient_reg ppr on ppr.patient_id = i.id and ppr.type_id = 1 and ppr.clinic_id = me.org_id and ppr.unreg_dt IS NULL and ppr.state_id = 1
                left join pim_organization po on po.id = ppr.clinic_id
                left join md_clinic_district mcd on mcd.id = ppr.district_id or mcd.id = ppr.district_by_addr_id
                left join (
                select ppa.party_id, ae.id from pim_party_address ppa
                left join pim_party_addr_to_addr_type ppatat on ppatat.party_address_id = ppa.id
                left join PIM_ADDRESS_TYPE pat on pat.id = ppatat.address_type_id
                left join address_element ae on ae.id = ppa.addr_id
                where pat.code = 'ACTUAL') as ae on ae.party_id = i.id
                left join pim_gender g on g.id = i.gender_id
                left join md_ethnic_group eg on eg.id = pci.ethnic_group_id
                left join md_soc_group sg on sg.id = pci.social_group_id
                left join pim_nationality n on n.id = i.nationality_id

                left join disp.md_disp_orphans_patient_card mdopc on mdopc.id = mep.id

                where :where
            </n2o:count-query>
            <n2o:alias>mep</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>Integer</domain>
            <display>mep.id</display>
            <search>mep.id = :id</search>
        </field>
        <field>
            <id>eventId</id>
            <domain>Integer</domain>
            <display>mep.event_id</display>
            <search>mep.event_id = :eventId</search>
        </field>
        <field>
            <id>indivId</id>
            <domain>Integer</domain>
            <display>mep.indiv_id</display>
            <search>mep.indiv_id = :indivId</search>
        </field>
        <field>
            <id>caseId</id>
            <domain>Integer</domain>
            <display>mep.case_id</display>
            <search>mep.case_id = :caseId</search>
        </field>
        <field>
            <id>fio</id>
            <domain>String</domain>
            <expression>CONCAT(i.surname,' ',i.name,' ',i.patr_name)</expression>
            <display>CONCAT(i.surname,' ',i.name,' ',i.patr_name)</display>
            <name>ФИО</name>
        </field>
        <field>
            <id>surname</id>
            <domain>String</domain>
            <expression>i.surname</expression>
            <display>i.surname</display>
            <search>upper(i.surname) like '%'||upper(:surname)||'%'</search>
            <name>Фамилия</name>
            <sorting>i.surname</sorting>
        </field>
        <field>
            <id>name</id>
            <domain>String</domain>
            <expression>i.name</expression>
            <display>i.name</display>
            <search>upper(i.name) like '%'||upper(:name)||'%'</search>
            <name>Имя</name>
            <sorting>i.name</sorting>
        </field>
        <field>
            <id>patrName</id>
            <domain>String</domain>
            <expression>i.patr_name</expression>
            <display>i.patr_name</display>
            <search>upper(i.patr_name) like '%'||upper(:patrName)||'%'</search>
            <name>Отчество</name>
            <sorting>i.patr_name</sorting>
        </field>
        <field>
            <id>birthday</id>
            <domain>Date</domain>
            <display>i.birth_dt</display>
            <search>i.birth_dt = :birthday</search>
            <name>Дата рождения</name>
            <sorting>i.birth_dt</sorting>
        </field>
        <field>
            <id>gender.name</id>
            <name>Пол</name>
            <domain>String</domain>
            <expression>g.name</expression>
        </field>
        <field>
            <id>gender.id</id>
            <domain>Integer</domain>
            <expression>g.id</expression>
        </field>
        <field>
            <id>vip</id>
            <name>VIP</name>
            <domain>Boolean</domain>
            <expression>pci.vip</expression>
        </field>
        <field>
            <id>ethnicGroupName</id>
            <name>Этническая группа</name>
            <domain>String</domain>
            <expression>eg.name</expression>
        </field>
        <field>
            <id>socialGroupName</id>
            <name>Социальная группа</name>
            <domain>String</domain>
            <expression>sg.name</expression>
        </field>
        <field>
            <id>nationality.name</id>
            <name>Национальность</name>
            <domain>String</domain>
            <expression>n.name</expression>
        </field>
        <field>
            <id>nationality.id</id>
            <domain>Integer</domain>
            <expression>n.id</expression>
        </field>
        <field>
            <id>age</id>
            <domain>Integer</domain>
            <expression>extract(year from current_timestamp) - extract(year from i.birth_dt)</expression>
        </field>
        <field>
            <id>medOrg</id>
            <domain>String</domain>
            <expression>po.short_name</expression>
            <display>po.short_name</display>
            <name>МО</name>
        </field>
        <field>
            <id>district</id>
            <domain>String</domain>
            <expression>mcd.name</expression>
            <display>mcd.name</display>
            <name>Участок</name>
        </field>
        <field>
            <id>ambCard</id>
            <domain>String</domain>
            <expression>ppr.number_attach</expression>
            <display>ppr.number_attach</display>
            <name>Амб.карта</name>
        </field>
        <field>
            <id>actualAddress_id</id>
            <domain>integer</domain>
            <expression>ae.id</expression>
            <display>ae.id</display>
        </field>
        <field>
            <id>actualAddress</id>
            <domain>String</domain>
            <expression>adr__get_search_name(ae.id)</expression>
            <display>adr__get_search_name(ae.id)</display>
            <name>Адрес фактического проживания</name>
        </field>
        <field>
            <id>registerAddress</id>
            <domain>String</domain>
            <expression>
                adr__get_search_name((select distinct(ae2.id)
                from disp.md_event_patient mep
                left join pim_individual i2 on i2.id = mep.indiv_id
                left join pci_patient pci2 on pci2.id = i2.id
                left join pim_party_address ppa2 on ppa2.party_id = i2.id
                left join pim_party_addr_to_addr_type ppatat2 on ppatat2.party_address_id = ppa2.id
                left join PIM_ADDRESS_TYPE pat2 on pat2.id = ppatat2.address_type_id
                inner join address_element ae2 on ae2.id = ppa.addr_id and pat2.code = 'REGISTER'
                where i2.id = i2.id limit 1
                ))
            </expression>
            <display>
                adr__get_search_name((select distinct(ae2.id)
                from disp.md_event_patient mep
                left join pim_individual i2 on i2.id = mep.indiv_id
                left join pci_patient pci2 on pci2.id = i2.id
                left join pim_party_address ppa2 on ppa2.party_id = i2.id
                left join pim_party_addr_to_addr_type ppatat2 on ppatat2.party_address_id = ppa2.id
                left join PIM_ADDRESS_TYPE pat2 on pat2.id = ppatat2.address_type_id
                inner join address_element ae2 on ae2.id = ppa2.addr_id and pat2.code = 'REGISTER'
                where i2.id = i.id limit 1
                ))
            </display>
            <name>Адрес регистрации</name>
        </field>
        <field>
            <id>check_thera</id>
            <domain>boolean</domain>
            <display>
                (select CASE WHEN ssr.is_rendered THEN TRUE ELSE FALSE END
                from disp.md_event_patient mep1
                left join disp.md_event_service_patient mesp on mesp.event_patient_id = mep1.id
                left join disp.md_event_service mes on mes.id = mesp.service_id

                left join disp.md_event me on me.id=mep.event_id
                left join md_standard ms on ms.id = me.standard_id
                left join md_norm_document_service mnds on mnds.id = mes.doc_service_id

                left join (select ssr.id, msr.case_id, ssr.service_id, ssr.res_group_id, ssr.bdate, ssr.is_rendered from MD_SRV_RENDERED msr
                left join SR_SRV_RENDERED ssr on ssr.id = msr.id) as ssr on ssr.case_id = mep1.case_id and ssr.service_id = mes.service_id
                where mep1.id = mep.id and mnds.code = 'Д1.18') as check_thera
            </display>
        </field>

        <field>
            <id>category_accounting_child.id</id>
            <domain>integer</domain>
            <display>(case when mdopc.category_accounting_child_id is null and met.code like 'ДС%'
                then (select id from disp.md_category_accounting_child where code='3' limit 1)
                else   case when mdopc.category_accounting_child_id is null and met.code like 'ОН%'
                    then (select id from disp.md_category_accounting_child where code='4' limit 1)
                    else  mdopc.category_accounting_child_id
                    end
                end )  </display>
        </field>
        <field>
            <id>location.id</id>
            <domain>integer</domain>
            <display>mdopc.location_id</display>
        </field>
        <field>
            <id>reason.id</id>
            <domain>integer</domain>
            <display>mdopc.reason_id</display>
        </field>
        <field>
            <id>miss_reason</id>
            <domain>string</domain>
            <display>mdopc.miss_reason</display>
        </field>
        <field>
            <id>bdate</id>
            <domain>date</domain>
            <display>mdopc.bdate</display>
        </field>
        <field>
            <id>edate</id>
            <domain>date</domain>
            <display>mdopc.edate</display>
        </field>
        <field>
            <id>birth_doc</id>
            <domain>string</domain>
            <display>(select pid.series || ' ' || pid.number
                from pim_individual_doc pid
                join pim_doc_type pdt on pdt.id = pid.type_id
                where pdt.code = 'BIRTH'
                and pid.is_active = true
                and pid.indiv_id = mep.indiv_id
                limit 1)</display>
        </field>
        <field>
            <id>passport</id>
            <domain>string</domain>
            <display>(select pid.series || ' ' || pid.number
                from pim_individual_doc pid
                join pim_doc_type pdt on pdt.id = pid.type_id
                where pdt.code = 'PASSPORT_RUSSIAN_FEDERATION'
                and pid.is_active = true
                and pid.indiv_id = mep.indiv_id
                limit 1)</display>
        </field>
        <field>
            <id>oms</id>
            <domain>string</domain>
            <display>coalesce((select concat_ws(' ', pid.series, pid.number)
                from pim_individual_doc pid
                join pim_doc_type pdt on pdt.id = pid.type_id
                where pdt.code = 'MHI_UNIFORM'
                and pid.is_active = true
                and ((pid.issue_dt is null or pid.issue_dt &lt;= current_date) and (pid.expire_dt is null or pid.expire_dt &gt;= current_date))
                and pid.indiv_id = mep.indiv_id
                limit 1),
                (select concat_ws(' ', pid.series, pid.number)
                from pim_individual_doc pid
                join pim_doc_type pdt on pdt.id = pid.type_id
                where pdt.code = 'MHI_OLDER'
                and pid.is_active = true
                and ((pid.issue_dt is null or pid.issue_dt &lt;= current_date) and (pid.expire_dt is null or pid.expire_dt &gt;= current_date))
                and pid.indiv_id = mep.indiv_id
                limit 1))</display>
            <name>ОМС</name>
        </field>
        <field>
            <id>oms_issuer</id>
            <domain>string</domain>
            <display>coalesce((select coalesce((select short_name from pim_organization where id = pid.issuer_id), pid.issuer_text)
                from pim_individual_doc pid
                join pim_doc_type pdt on pdt.id = pid.type_id
                where pdt.code = 'MHI_UNIFORM'
                and pid.is_active = true
                and ((pid.issue_dt is null or pid.issue_dt &lt;= current_date) and (pid.expire_dt is null or pid.expire_dt &gt;= current_date))
                and pid.indiv_id = mep.indiv_id
                limit 1),
                (select coalesce((select short_name from pim_organization where id = pid.issuer_id), pid.issuer_text)
                from pim_individual_doc pid
                join pim_doc_type pdt on pdt.id = pid.type_id
                where pdt.code = 'MHI_OLDER'
                and pid.is_active = true
                and ((pid.issue_dt is null or pid.issue_dt &lt;= current_date) and (pid.expire_dt is null or pid.expire_dt &gt;= current_date))
                and pid.indiv_id = mep.indiv_id
                limit 1))</display>
        </field>
        <field>
            <id>education_org.id</id>
            <domain>integer</domain>
            <display>mdopc.education_org_id</display>
        </field>
        <field>
            <id>stac_org.id</id>
            <domain>integer</domain>
            <display>mdopc.stac_org_id</display>
        </field>
        <field>
            <id>validation_result</id>
            <domain>string</domain>
            <display unavailable="true"/>
        </field>
        <field>
            <id>org_id</id>
            <domain>integer</domain>
            <expression>(select me.org_id from disp.md_event me where me.id = mep.event_id)</expression>
            <display>:expression</display>
            <search>:expression = :org_id</search>
        </field>
        <field>
            <id>character</id>
            <domain>Integer</domain>
            <display>(select id from mc_disease_type where code='40' limit 1)</display>
            <expression>(select id from mc_disease_type where code='40' limit 1)</expression>
        </field>
    </fields>
</query>