<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xsi:schemaLocation="http://n2oapp.net/framework/config/schema/query-1.0 http://localhost:8080/n2o/config/schema/query/query-1.0.xsd">
    <id>eventPatients</id>
    <name>eventPatientsList</name>
    <object-id>eventPatientsFind</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from disp.md_event me
                left join disp.md_event_type met on met.id = me.event_type
                left join  disp.md_event_patient mep on me.id = mep.event_id
                left join disp.md_disp_orphans_absence mdoa on mdoa.event_patient_id=mep.id
                left join disp.md_absence_reason mar on mar.id=mdoa.reason_id
                left join disp.md_event_agreement mea on mea.event_patient_id = mep.id
                left join pim_individual i on i.id = mep.indiv_id
                left join pci_patient pci on pci.id = i.id
                left join pim_gender g on g.id = i.gender_id
                left join pci_patient_reg ppr on ppr.patient_id = i.id and ppr.id=(select max(ppr.id) from pci_patient_reg ppr where ppr.patient_id=i.id and  ppr.type_id = 1 and ppr.clinic_id = me.org_id and ppr.unreg_dt IS NULL and ppr.state_id = 1)
                left join md_clinic_district mcd on mcd.id = ppr.district_id
                left join disp.md_event_planning meplan on meplan.indiv_id = mep.indiv_id and meplan.event_id = mep.event_id
                left join mc_case mc on mc.id = mep.case_id
                left join disp.md_dispr md on md.id = mep.id
                left join mc_health_group mhg on mhg.id = md.health_group_id
                left join (select ae.id as id, ppa.party_id as party_id  from pim_party_address ppa
                left join pim_party_addr_to_addr_type ppatat on ppatat.party_address_id = ppa.id
                left join PIM_ADDRESS_TYPE pat on pat.id = ppatat.address_type_id
                left join address_element ae on ae.id = ppa.addr_id
                where pat.code = 'ACTUAL' limit 1) as addr on addr.party_id = i.id
                where mep.is_deleted is not true and :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(mep)
                from disp.md_event_patient mep
                left join disp.md_disp_orphans_absence mar on mar.event_patient_id=mep.id
                left join disp.md_event me on me.id = mep.event_id
                left join disp.md_event_agreement mea on mea.event_patient_id = mep.id
                left join pim_individual i on i.id = mep.indiv_id
                left join pci_patient pci on pci.id = i.id
                left join pim_gender g on g.id = i.gender_id
                left join pci_patient_reg ppr on ppr.patient_id = i.id and ppr.id=(select max(ppr.id) from pci_patient_reg ppr where ppr.patient_id=i.id and  ppr.type_id = 1 and ppr.clinic_id = me.org_id and ppr.unreg_dt IS NULL and ppr.state_id = 1)
                left join md_clinic_district mcd on mcd.id = ppr.district_id
                left join disp.md_event_planning meplan on meplan.indiv_id = mep.indiv_id and meplan.event_id = mep.event_id
                left join mc_case mc on mc.id = mep.case_id
                left join disp.md_dispr md on md.id = mep.id
                left join mc_health_group mhg on mhg.id = md.health_group_id
                left join (select ae.id as id, ppa.party_id as party_id  from pim_party_address ppa
                left join pim_party_addr_to_addr_type ppatat on ppatat.party_address_id = ppa.id
                left join PIM_ADDRESS_TYPE pat on pat.id = ppatat.address_type_id
                left join address_element ae on ae.id = ppa.addr_id
                where pat.code = 'ACTUAL' limit 1) as addr on addr.party_id = i.id
                where mep.is_deleted is not true and :where
            </n2o:count-query>
            <n2o:alias>mep</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>Integer</domain>
            <display>mep.id</display>
            <search>mep.id = :id</search>
        </field>
        <field>
            <id>event.id</id>
            <domain>Integer</domain>
            <display>mep.event_id</display>
            <search>mep.event_id = :event.id</search>
        </field>
        <field>
            <id>event_type_code</id>
            <domain>string</domain>
            <display>met.code</display>
            <expression>met.code</expression>
            <search>met.code = :event_type_code</search>
        </field>

        <field>
            <id>fio</id>
            <domain>String</domain>
            <expression>concat_ws(' ', i.surname, i.name, i.patr_name)</expression>
            <display>concat_ws(' ', i.surname, i.name, i.patr_name)</display>
            <search>upper(concat_ws(' ', i.surname, i.name, i.patr_name)) like '%'||upper(:fio)||'%'</search>
            <name>ФИО</name>
            <sorting>concat_ws(' ', i.surname, i.name, i.patr_name)</sorting>
        </field>
        <field>
            <id>birthday</id>
            <domain>Date</domain>
            <display>i.birth_dt</display>
            <search>i.birth_dt = :birthday</search>
            <name>Дата рождения</name>
            <sorting>i.birth_dt</sorting>
        </field>

    </fields>
</query>