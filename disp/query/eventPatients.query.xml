<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
        >
    <id>eventPatients</id>
    <name>eventPatients</name>
    <object-id>eventPatients</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from disp.md_event me
                left join disp.md_event_type met on met.id = me.event_type
                left join  disp.md_event_patient mep on me.id = mep.event_id
                left join disp.md_disp_orphans_absence mdoa on mdoa.event_patient_id=mep.id
                left join disp.md_absence_reason mar on mar.id=mdoa.reason_id
                left join disp.md_event_agreement mea on mea.event_patient_id = mep.id
                left join pim_individual i on i.id = mep.indiv_id
                left join pci_patient pci on pci.id = i.id
                left join pim_gender g on g.id = i.gender_id
                left join pci_patient_reg ppr on ppr.patient_id = i.id and ppr.id=(select max(ppr.id) from pci_patient_reg ppr where ppr.patient_id=i.id and  ppr.type_id = 1 and ppr.clinic_id = me.org_id and ppr.unreg_dt IS NULL and ppr.state_id = 1)
                left join md_clinic_district mcd on mcd.id = ppr.district_id
                left join disp.md_event_planning meplan on meplan.indiv_id = mep.indiv_id and meplan.event_id = mep.event_id
                left join mc_case mc on mc.id = mep.case_id
                left join disp.md_dispr md on md.id = mep.id
                left join mc_health_group mhg on mhg.id = md.health_group_id
                left join (select ae.id as id, ppa.party_id as party_id  from pim_party_address ppa
                left join pim_party_addr_to_addr_type ppatat on ppatat.party_address_id = ppa.id
                left join PIM_ADDRESS_TYPE pat on pat.id = ppatat.address_type_id
                left join address_element ae on ae.id = ppa.addr_id
                where pat.code = 'ACTUAL' limit 1) as addr on addr.party_id = i.id
                where mep.is_deleted is not true and :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(mep)
                from disp.md_event me
                left join disp.md_event_type met on met.id = me.event_type
                left join  disp.md_event_patient mep on me.id = mep.event_id
                left join disp.md_disp_orphans_absence mdoa on mdoa.event_patient_id=mep.id
                left join disp.md_absence_reason mar on mar.id=mdoa.reason_id
                left join disp.md_event_agreement mea on mea.event_patient_id = mep.id
                left join pim_individual i on i.id = mep.indiv_id
                left join pci_patient pci on pci.id = i.id
                left join pim_gender g on g.id = i.gender_id
                left join pci_patient_reg ppr on ppr.patient_id = i.id and ppr.id=(select max(ppr.id) from pci_patient_reg ppr where ppr.patient_id=i.id and  ppr.type_id = 1 and ppr.clinic_id = me.org_id and ppr.unreg_dt IS NULL and ppr.state_id = 1)
                left join md_clinic_district mcd on mcd.id = ppr.district_id
                left join disp.md_event_planning meplan on meplan.indiv_id = mep.indiv_id and meplan.event_id = mep.event_id
                left join mc_case mc on mc.id = mep.case_id
                left join disp.md_dispr md on md.id = mep.id
                left join mc_health_group mhg on mhg.id = md.health_group_id
                left join (select ae.id as id, ppa.party_id as party_id  from pim_party_address ppa
                left join pim_party_addr_to_addr_type ppatat on ppatat.party_address_id = ppa.id
                left join PIM_ADDRESS_TYPE pat on pat.id = ppatat.address_type_id
                left join address_element ae on ae.id = ppa.addr_id
                where pat.code = 'ACTUAL' limit 1) as addr on addr.party_id = i.id
                where mep.is_deleted is not true and :where
            </n2o:count-query>
            <n2o:alias>mep</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>Integer</domain>
            <display>mep.id</display>
            <search>mep.id = :id</search>
        </field>
        <field>
            <id>countRenderedService</id>
            <domain>Integer</domain>
            <display>(select 1  from disp.md_event_service mes
                right join sr_service ss on ss.id = mes.service_id
                left join disp.md_event_service_patient mesp on mesp.service_id= mes.id
                left join disp.md_event_service_status mess on mess.id=mesp.status  where mesp.event_patient_id=mep.id and (mess.code=4 or mess.code=3) limit 1)</display>
        </field>
        <field>
            <id>numberMDK</id>
            <domain>Integer</domain>
            <name>Пациент в МДК</name>
            <display unavailable="true"/>
            <sorting unavailable="true"/>
            <search unavailable="true"/>
        </field>
        <field>
            <id>event.id</id>
            <domain>Integer</domain>
            <display>mep.event_id</display>
            <search>mep.event_id = :event.id</search>
        </field>
        <field>
            <id>event_type_code</id>
            <domain>string</domain>
            <display>met.code</display>
            <expression>met.code</expression>
            <search>met.code = :event_type_code</search>
        </field>
        <field>
            <id>eventPatientCode</id>
            <domain>String</domain>
            <display>mep.id</display>
            <name>Код пациента</name>
            <search>mep.id=(:eventPatientCode::bigint)</search>
            <sorting>mep.id</sorting>
        </field>
        <field>
            <id>colorButton</id>
            <domain>Integer</domain>
            <display>(select count (mespa.id) from disp.md_event_service_patient_agreement mespa
                left join disp.md_event_service_patient mesp on  mespa.service_id=mesp.id where mespa.denial=true and mesp.event_patient_id=mep.id )</display>
        </field>
        <field>
            <id>statusPatientInEvent</id>
            <domain>boolean</domain>
            <expression>mep.not_actual_patient</expression>
            <display>mep.not_actual_patient</display>
            <search>mep.not_actual_patient = :statusPatientInEvent</search>
            <name>Не подходит под критерии отбора</name>
        </field>
        <field>
            <id>indivId</id>
            <domain>Integer</domain>
            <display>mep.indiv_id</display>
            <search>mep.indiv_id = :indivId</search>
        </field>
        <field>
            <id>patient.id</id>
            <domain>Integer</domain>
            <display>mep.indiv_id</display>
            <search>mep.indiv_id = :patient.id</search>
        </field>
        <field>
            <id>statusMDK.id</id>
            <domain>integer</domain>
            <name>Статус</name>
            <expression>(case when (select ml.status from disp.mdk_log ml where ml.event_patient_id = mep.id and ml.status in (1,3) limit 1) in (1,3) then 1 else 2 end)</expression>
            <search type="in" filter-field="statusMDK*.id">
                (1 in (:statusMDK*.id) and :expression=1

                or 2 in (:statusMDK*.id) and  :expression=2)
            </search>
        </field>
        <field>
            <id>statusMDK.name</id>
            <domain>String</domain>
            <name>МДК</name>
            <expression>(case when (select ml.status from disp.mdk_log ml where ml.event_patient_id = mep.id and ml.status in (1,3) limit 1) in (1,3) then 'Загружен' else 'Не загружен' end)</expression>
            <sorting>:expression</sorting>
            <display>:expression</display>
        </field>

        <field>
            <id>caseId</id>
            <domain>Integer</domain>
            <display>mc.id</display>
            <search>mc.id= :caseId</search>
        </field>
        <field>
            <id>fio</id>
            <domain>String</domain>
            <expression>concat_ws(' ', i.surname, i.name, i.patr_name)</expression>
            <display>concat_ws(' ', i.surname, i.name, i.patr_name)</display>
            <search>upper(concat_ws(' ', i.surname, i.name, i.patr_name)) like '%'||upper(:fio)||'%'</search>
            <name>ФИО</name>
            <sorting>concat_ws(' ', i.surname, i.name, i.patr_name)</sorting>
        </field>
        <field>
            <id>birthday</id>
            <domain>Date</domain>
            <display>i.birth_dt</display>
            <search>i.birth_dt = :birthday</search>
            <name>Дата рождения</name>
            <sorting>i.birth_dt</sorting>
        </field>
        <field>
            <id>ambCard</id>
            <domain>String</domain>
            <expression>ppr.number_attach</expression>
            <display>ppr.number_attach</display>
            <name>Амб.карта</name>
        </field>
        <field>
            <id>target_date.name</id>
            <domain>date</domain>
            <expression>meplan.target_date</expression>
            <display>meplan.target_date</display>
            <name>Плановая дата</name>
        </field>
        <field>
            <id>target_date.begin</id>
            <domain>date</domain>
            <expression>meplan.target_date</expression>
            <display>meplan.target_date</display>
            <name>Плановая дата</name>
            <search><![CDATA[meplan.target_date >= :target_date.begin]]></search>
        </field>
        <field>
            <id>target_date.end</id>
            <domain>date</domain>
            <expression>meplan.target_date</expression>
            <display>meplan.target_date</display>
            <name>Плановая дата</name>
            <search><![CDATA[meplan.target_date <= :target_date.end]]></search>
        </field>
        <field>
            <id>open_date_1.name</id>
            <domain>date</domain>
            <expression>(select ssr.bdate from disp.md_event_patient mep1
                left join disp.md_event_service_patient mesp on mesp.event_patient_id = mep1.id
                left join disp.md_event_service mes on mes.id = mesp.service_id

                left join disp.md_event me on me.id=mep1.event_id
                left join md_standard ms on ms.id = me.standard_id
                left join md_norm_document_service mnds on mnds.id = mes.doc_service_id

                left join (select ssr.id, msr.case_id, ssr.service_id, ssr.res_group_id, ssr.bdate from MD_SRV_RENDERED msr
                left join SR_SRV_RENDERED ssr on ssr.id = msr.id) as ssr on ssr.case_id = mep1.case_id and ssr.service_id = mes.service_id
                where mep1.id = mep.id and mnds.code = 'Д1.02' limit 1)
            </expression>
            <display>:expression</display>
            <name>Дата начала</name>
            <sorting>:expression</sorting>
        </field>
        <field>
            <id>retryAgree</id>
            <domain>boolean</domain>
            <expression>(select true from disp.md_event_service_patient mesp
                left join disp.md_event_service_status mess on mess.code = mesp.status
                where mesp.event_patient_id=mep.id and  (mess.code='3' or mess.code='4')
                limit  1)</expression>
        </field>
        <field>
            <id>end_date_1.name</id>
            <domain>date</domain>
            <expression>(select ms.outcome_date from mc_case mc
                left join mc_step ms on ms.id = mc.closing_step_id
                where mc.id = mep.case_id)</expression>
            <display>:expression</display>
            <name>Дата окончания</name>
        </field>
        <field>
            <id>open_date_1.begin</id>
            <domain>date</domain>
            <expression>(select ssr.bdate from disp.md_event_patient mep1
                left join disp.md_event_service_patient mesp on mesp.event_patient_id = mep1.id
                left join disp.md_event_service mes on mes.id = mesp.service_id

                left join disp.md_event me on me.id=mep1.event_id
                left join md_standard ms on ms.id = me.standard_id
                left join md_norm_document_service mnds on mnds.id = mes.doc_service_id

                left join (select ssr.id, msr.case_id, ssr.service_id, ssr.res_group_id, ssr.bdate from MD_SRV_RENDERED msr
                left join SR_SRV_RENDERED ssr on ssr.id = msr.id) as ssr on ssr.case_id = mep1.case_id and ssr.service_id = mes.service_id
                where mep1.id = mep.id and mnds.code = 'Д1.02' limit 1)</expression>
            <name>Дата начала</name>
            <search><![CDATA[(select ssr.bdate from disp.md_event_patient mep1
                left join disp.md_event_service_patient mesp on mesp.event_patient_id = mep1.id
                left join disp.md_event_service mes on mes.id = mesp.service_id

                left join disp.md_event me on me.id=mep1.event_id
                left join md_standard ms on ms.id = me.standard_id
                left join md_norm_document_service mnds on mnds.id = mes.doc_service_id

                left join (select ssr.id, msr.case_id, ssr.service_id, ssr.res_group_id, ssr.bdate from MD_SRV_RENDERED msr
                left join SR_SRV_RENDERED ssr on ssr.id = msr.id) as ssr on ssr.case_id = mep1.case_id and ssr.service_id = mes.service_id
                where mep1.id = mep.id and mnds.code = 'Д1.02' limit 1) >= :open_date_1.begin ]]></search>
        </field>
        <field>
            <id>open_date_1.end</id>
            <domain>date</domain>
            <expression>(select ssr.bdate from disp.md_event_patient mep1
                left join disp.md_event_service_patient mesp on mesp.event_patient_id = mep1.id
                left join disp.md_event_service mes on mes.id = mesp.service_id

                left join disp.md_event me on me.id=mep1.event_id
                left join md_standard ms on ms.id = me.standard_id
                left join md_norm_document_service mnds on mnds.id = mes.doc_service_id

                left join (select ssr.id, msr.case_id, ssr.service_id, ssr.res_group_id, ssr.bdate from MD_SRV_RENDERED msr
                left join SR_SRV_RENDERED ssr on ssr.id = msr.id) as ssr on ssr.case_id = mep1.case_id and ssr.service_id = mes.service_id
                where mep1.id = mep.id and mnds.code = 'Д1.02' limit 1)</expression>
            <display>:expression</display>
            <search><![CDATA[:expression <= :open_date_1.end]]></search>
        </field>
        <field>
            <id>open_date_orphans.begin</id>
            <name>Дата начала</name>
            <domain>date</domain>
            <expression>mc.open_date</expression>
            <display>mc.open_date</display>
            <sorting>mc.open_date</sorting>
            <search>:expression >= :open_date_orphans.begin</search>
        </field>
        <field>
            <id>open_date_orphans.end</id>
            <name>Дата начала</name>
            <domain>date</domain>
            <expression>mc.open_date</expression>
            <display>mc.open_date</display>
            <sorting>mc.open_date</sorting>
            <search>  :open_date_orphans.end >= :expression</search>
        </field>
        <field>
            <id>close_date_orphans</id>
            <name>Дата окончания</name>
            <domain>date</domain>
            <expression>
                (select ms.outcome_date from mc_step ms where ms.id = mc.closing_step_id)
            </expression>
            <display>:expression</display>
            <sorting>:expression</sorting>
        </field>
        <field>
            <id>health_group_orphans</id>
            <name>Группа здоровья</name>
            <domain>string</domain>
            <expression>(select mhg.name from disp.md_disp_orphans_result mdor
                left join mc_health_group mhg on mhg.id = mdor.health_group_id
                where mdor.event_patient_id = mep.id and mdor.is_before = false limit 1)</expression>
            <display>:expression</display>
            <sorting>:expression</sorting>
        </field>
        <field>
            <id>is_2_stage</id>
            <domain>boolean</domain>
            <expression>md.is_2_stage</expression>
            <display>md.is_2_stage</display>
            <name>Направлен на 2 этап</name>
        </field>
        <field>
            <id>is_d</id>
            <domain>boolean</domain>
            <expression>md.is_d</expression>
            <display>md.is_d</display>
            <name>Взят на Д-учет</name>
        </field>
        <field>
            <id>health_group.id</id>
            <domain>integer</domain>
            <expression>mhg.id</expression>
            <display>mhg.id</display>
        </field>
        <field>
            <id>health_group.name</id>
            <domain>string</domain>
            <expression>mhg.name</expression>
            <display>mhg.name</display>
            <name>Группа здоровья</name>
        </field>
        <field>
            <id>overview</id>
            <domain>string</domain>
            <expression>case when mdoa.reason_id>0 then (mar.name)
                when (mea.denial) then ('отказ')
                else (CAST(mep._overview as text)||'%') end</expression>
            <display>case when mdoa.reason_id>0 then (mar.name)
                when (mea.denial) then ('отказ')
                else (CAST(mep._overview as text)||'%') end </display>
            <name>Результат</name>
        </field>
        <field>
            <id>overview_color</id>
            <domain>string</domain>
            <expression>
                <![CDATA[
                CASE WHEN CAST(mep._overview as integer)>=85 THEN 3
                WHEN CAST(mep._overview as integer)<85 THEN 1
                ELSE 1
                END
                ]]>
            </expression>
            <display>
                <![CDATA[
                CASE WHEN CAST(mep._overview as integer)>=85 THEN 3
                WHEN CAST(mep._overview as integer)<85 THEN 1
                ELSE 1
                END
                ]]>
            </display>
        </field>
        <field>
            <id>overview_search.id</id>
            <domain>integer</domain>
            <search><![CDATA[
                case when mdoa.reason_id>0 then false
                when(mea.denial) then :overview_search.id = 5
                else (case when :overview_search.id = 1 then mep._overview <= 85
                           when :overview_search.id = 2 then mep._overview > 85
                           when :overview_search.id = 3 then mep._overview < 100
                           when :overview_search.id = 4 then mep._overview = 100
                           else false end)
                end
            ]]></search>
            <display unavailable="true"/>
            <name>Результат</name>
        </field>
        <field>
            <id>gender.name</id>
            <name>Пол</name>
            <domain>String</domain>
            <expression>g.name</expression>
        </field>
        <field>
            <id>gender.id</id>
            <name>Пол</name>
            <domain>Integer</domain>
            <expression>g.id</expression>
        </field>
        <field>
            <id>o_number</id>
            <name>Номер участка</name>
            <domain>String</domain>
            <expression>mcd.order_number</expression>
            <search>mcd.order_number=(:o_number::bigint)</search>
        </field>
        <field>
            <id>address.search_name</id>
            <domain>String</domain>
            <expression>adr__get_search_name(addr.id)</expression>
            <display>adr__get_search_name(addr.id)</display>
            <name>Адрес</name>
            <search unavailable="true" />
        </field>
        <field>
            <id>address.id</id>
            <name>Адрес</name>
            <domain>Integer</domain>
            <expression>addr.id</expression>
            <search>upper(CAST((select adr__get_path(addr.id)) as text)) like '%'||upper(CAST((select adr__get_path(:address.id)) as text))||'%'</search>
        </field>
        <field>
            <id>hasServices</id>
            <domain>boolean</domain>
            <display>
                (select true from disp.md_event_patient mep1
                inner join disp.md_event_service_patient mesp on mesp.event_patient_id = mep.id
                where mep1.id = mep.id  limit 1)
            </display>
        </field>

        <field>
            <id>check_pres_group</id>
            <domain>boolean</domain>
            <name>Назначено?</name>
            <display>
                (select disp.check_pres_services_validate(mep.id,mep.event_age,met.code))
            </display>
        </field>
        <field>
            <id>agreeAnketa</id>
            <domain>boolean</domain>
            <display>
                (select mespa.agree from disp.md_event_patient mep1
                inner join disp.md_event_service_patient mesp on mesp.event_patient_id = mep.id
                inner join disp.md_event_service mes on mes.id = mesp.service_id

                left join disp.md_event me on me.id=mep1.event_id
                left join md_standard ms on ms.id = me.standard_id
                left join md_norm_document_service mnds on mnds.id = mes.doc_service_id

                left join disp.md_event_service_patient_agreement mespa on mespa.service_id = mesp.id
                where mep1.id = mep.id and mnds.code = 'Д1.02' limit 1) as agree_anketa
            </display>
        </field>
        <field>
            <id>renderedAnketa</id>
            <domain>boolean</domain>
            <display>
                (select mesp.status = 4 from disp.md_event_patient mep1
                inner join disp.md_event_service_patient mesp on mesp.event_patient_id = mep.id
                inner join disp.md_event_service mes on mes.id = mesp.service_id

                left join disp.md_event me on me.id=mep1.event_id
                left join md_standard ms on ms.id = me.standard_id
                left join md_norm_document_service mnds on mnds.id = mes.doc_service_id

                where mep1.id = mep.id and mnds.code = 'Д1.02' limit 1) as rendered_anketa
            </display>
        </field>
        <field>
            <id>agreeAntro</id>
            <domain>boolean</domain>
            <display>
                (select mespa.agree from disp.md_event_patient mep1
                inner join disp.md_event_service_patient mesp on mesp.event_patient_id = mep.id
                inner join disp.md_event_service mes on mes.id = mesp.service_id

                left join disp.md_event me on me.id=mep1.event_id
                left join md_standard ms on ms.id = me.standard_id
                left join md_norm_document_service mnds on mnds.id = mes.doc_service_id

                left join disp.md_event_service_patient_agreement mespa on mespa.service_id = mesp.id
                where mep1.id = mep.id and mnds.code = 'Д1.04' limit 1) as agree_antro
            </display>
        </field>
        <field>
            <id>checkDC</id>
            <domain>integer</domain>
            <display>
                (select sum(count) FROM (select count(ssr.id)
                from disp.md_event_patient mep4
                left join disp.md_event_service_patient mesp on mesp.event_patient_id = mep4.id
                left join disp.md_event_service mes on mes.id = mesp.service_id

                left join disp.md_event me on me.id=mep4.event_id
                left join md_standard ms on ms.id = me.standard_id
                left join md_norm_document_service mnds on mnds.id = mes.doc_service_id

                left join (select ssr.id, msr.case_id, ssr.service_id, ssr.res_group_id, ssr.bdate from MD_SRV_RENDERED msr
                left join SR_SRV_RENDERED ssr on ssr.id = msr.id) as ssr on ssr.case_id = mep4.case_id and ssr.service_id = mes.service_id
                where mep4.id = mep.id and mnds.code = 'Д1.02'
                UNION ALL
                select count(ssr.id)
                from disp.md_event_patient mep5
                left join disp.md_event_service_patient mesp on mesp.event_patient_id = mep5.id
                left join disp.md_event_service mes on mes.id = mesp.service_id

                left join disp.md_event me on me.id=mep5.event_id
                left join md_standard ms on ms.id = me.standard_id
                left join md_norm_document_service mnds on mnds.id = mes.doc_service_id

                left join (select ssr.id, msr.case_id, ssr.service_id, ssr.res_group_id, ssr.bdate from MD_SRV_RENDERED msr
                left join SR_SRV_RENDERED ssr on ssr.id = msr.id) as ssr on ssr.case_id = mep5.case_id and ssr.service_id = mes.service_id
                where mep5.id = mep.id and mnds.code = 'Д1.04') as tab) as checkDC
            </display>
        </field>
        <field>
            <id>checkPres</id>
            <domain>boolean</domain>
            <display>
                CASE WHEN (select count(mespa.id) from disp.md_event_patient mep1
                inner join disp.md_event_service_patient mesp on mesp.event_patient_id = mep1.id
                left join disp.md_event_service mes on mes.id = mesp.service_id
                left join disp.md_event_service_patient_agreement mespa on mespa.service_id = mesp.id
                where mep1.id = mep.id) > 0 THEN TRUE ELSE FALSE END
            </display>
        </field>
        <field>
            <id>status</id>
            <domain>boolean</domain>
            <name>Только активные</name>
            <display>FALSE</display>
            <search>(:status = false or mc.closing_step_id is null)</search>
        </field>

        <field>
            <id>status_orphans</id>
            <name>Только активные</name>
            <domain>boolean</domain>
            <display>False</display>
            <search>(:status_orphans = false or mc.closing_step_id is null)</search>
        </field>

        <field>
            <id>status_orphans2</id>
            <name>Только неактивные</name>
            <domain>boolean</domain>
            <display>FALSE</display>
            <search>(:status_orphans2 = false or mc.closing_step_id is not null)</search>
        </field>


        <field>
            <id>status2</id>
            <domain>boolean</domain>
            <name>Только неактивные</name>
            <display>FALSE</display>
            <search>(:status2 = false or mc.closing_step_id is not null)</search>
        </field>
        <field>
            <id>isStarted</id>
            <domain>boolean</domain>
            <display>
                (select CASE WHEN count(mep3.id) > 0 THEN TRUE
                ELSE FALSE
                END from disp.md_event_patient mep3
                inner join disp.md_event_service_patient mesp3 on mesp3.event_patient_id = mep3.id
                where mep3.id = mep.id and mesp3.status = 4) as is_started
            </display>
        </field>
        <field>
            <id>check_agree_event</id>
            <domain>boolean</domain>
            <display>mea.agree</display>
        </field>


        <field>
            <id>full_age</id>
            <domain>String</domain>
            <expression>CAST(date_part('year', age((select adate from disp.md_event_agreement where event_patient_id = mep.id limit 1), i.birth_dt)) as text)
                || (case when (CAST(date_part('year', age((select adate from disp.md_event_agreement where event_patient_id = mep.id limit 1), i.birth_dt)) as integer)) >4
                then  'л. ' else  'г. ' end)||
                CAST(date_part('month', age((select adate from disp.md_event_agreement where event_patient_id = mep.id limit 1), i.birth_dt)) as text)
                || 'мес. ' ||
                CAST(date_part('day', age((select adate from disp.md_event_agreement where event_patient_id = mep.id limit 1), i.birth_dt)) as text) || 'дн.'</expression>
            <display>CAST(date_part('year', age((select adate from disp.md_event_agreement where event_patient_id = mep.id limit 1), i.birth_dt)) as text)
                || (case when (CAST(date_part('year', age((select adate from disp.md_event_agreement where event_patient_id = mep.id limit 1), i.birth_dt)) as integer)) >4
                then  'л. ' else  'г. ' end)||
                CAST(date_part('month', age((select adate from disp.md_event_agreement where event_patient_id = mep.id limit 1), i.birth_dt)) as text)
                || 'мес. ' ||
                CAST(date_part('day', age((select adate from disp.md_event_agreement where event_patient_id = mep.id limit 1), i.birth_dt)) as text) || 'дн.'</display>
            <name>Возраст на момент согласия</name>
        </field>
        <field>
            <id>organization.id</id>
            <domain>integer</domain>
            <display>me.org_id</display>
            <search>me.org_id = :organization.id</search>
        </field>
        <field>
            <id>absence_reason.id</id>
            <domain>integer</domain>
            <display>mar.id</display>
            <expression>mar.id</expression>
        </field>
        <field>
            <id>invalidPatientData</id>
            <domain>string</domain>
            <display>(select 'Расхождение данных: ' || string_agg(name, ', ') from disp.mdk_invalid_data mid join disp.mdk_invalid_data_event_patient midep on mid.id = midep.invalid_data_id
                where midep.event_patient_id = mep.id)</display>
            <sorting unavailable="true"/>
            <search unavailable="true"/>
        </field>
        <field>
            <id>invalidPatientDataExist</id>
            <domain>boolean</domain>
            <display>(select exists(select 1 from disp.mdk_invalid_data_event_patient midep where midep.event_patient_id = mep.id))</display>
            <sorting unavailable="true"/>
            <search unavailable="true"/>
        </field>
        <field>
            <id>event_age_before_75</id>
            <domain>integer</domain>
            <display><![CDATA[
                    (case when (mep.event_age::real < 75) then 1
                    when (mep.event_age::real >= 75) then 2 else null end)
            ]]></display>
        </field>
        <field>
            <id>hasBill</id>
            <domain>integer</domain>
            <display>(select count(fbsi.id) from fin_bill_spec_item fbsi
                left join md_srv_rendered msr on msr.id = fbsi.service_id
                where mc.id=msr.case_id )
            </display>
        </field>
    </fields>
</query>