<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xsi:schemaLocation="http://n2oapp.net/framework/config/schema/query-1.0 http://localhost:8080/n2o/config/schema/query/query-1.0.xsd">
    <id>modelPatientBenefit</id>
    <name>Люди</name>
    <object-id>modelPatientBenefit</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from disp.md_model_patient_benefit mmpb
                left join PCI_BENEFIT_DEFINITION pbd on pbd.id = mmpb.benefit_id
                left join PCI_BENEFIT_TYPE pbt on pbt.id = mmpb.benefit_type_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(mmpb)
                from disp.md_model_patient_benefit mmpb
                left join PCI_BENEFIT_DEFINITION pbd on pbd.id = mmpb.benefit_id
                left join PCI_BENEFIT_TYPE pbt on pbt.id = mmpb.benefit_type_id
                where :where
            </n2o:count-query>
            <n2o:alias>mmpb</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>Integer</domain>
            <display>mmpb.id</display>
            <search>mmpb.id = :id</search>
        </field>
        <field>
            <id>modelId</id>
            <domain>Integer</domain>
            <display>mmpb.model_id</display>
            <search>mmpb.model_id = :modelId</search>
        </field>
        <field>
            <id>benefitType.id</id>
            <domain>Integer</domain>
            <display>pbt.id</display>
            <search>pbt.id = :benefitType.id</search>
        </field>
        <field>
            <id>benefitType.name</id>
            <domain>String</domain>
            <expression>pbt.name</expression>
            <display>pbt.name</display>
            <search>upper(pbt.name) like '%'||upper(:benefitType.name)||'%'</search>
            <name>Тип льготы</name>
            <sorting>pbt.name</sorting>
        </field>
        <field>
            <id>benefitDef.id</id>
            <domain>Integer</domain>
            <display>pbd.id</display>
            <search>pbd.id = :benefitDef.id</search>
        </field>
        <field>
            <id>benefitDef.name</id>
            <domain>String</domain>
            <expression>pbd.name</expression>
            <display>pbd.name</display>
            <search>upper(pbd.name) like '%'||upper(:benefitDef.name)||'%'</search>
            <name>Льгота</name>
            <sorting>pbd.name</sorting>
        </field>
        <field>
            <id>startTime</id>
            <domain>String</domain>
            <expression>mmpb.start_date</expression>
            <display>mmpb.start_date</display>
        </field>
        <field>
            <id>endTime</id>
            <domain>String</domain>
            <expression>mmpb.end_date</expression>
            <display>mmpb.end_date</display>
        </field>
        <field>
            <id>date</id>
            <domain>String</domain>
            <expression>concat('c ',to_char(mmpb.start_date, 'DD.MM.YYYY'),' по ',to_char(mmpb.end_date, 'DD.MM.YYYY'))</expression>
            <display>concat('c ',to_char(mmpb.start_date, 'DD.MM.YYYY'),' по ',to_char(mmpb.end_date, 'DD.MM.YYYY'))</display>
            <name>Дата</name>
            <sorting>concat('c ',to_char(mmpb.start_date, 'DD.MM.YYYY'),' по ',to_char(mmpb.end_date, 'DD.MM.YYYY'))</sorting>
        </field>
        <field>
            <id>benefitSwitch.id</id>
            <domain>integer</domain>
            <display>
                CASE WHEN mmpb.start_date is null THEN 1
                ELSE 2
                END
            </display>
            <name>Вид</name>
        </field>
        <field>
            <id>base_model.id</id>
            <domain>integer</domain>
            <expression>(select case base when true then 1 else 2 end from disp.md_model_patient mmp where mmp.id = mmpb.model_id)</expression>
        </field>
        <field>
            <id>model_org.id</id>
            <domain>integer</domain>
            <expression>(select org_id from disp.md_model_patient mmp where mmp.id = mmpb.model_id)</expression>
        </field>
    </fields>
</query>