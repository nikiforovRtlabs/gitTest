<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:sp="http://n2oapp.net/framework/config/schema/action-stored-procedure-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xsi:schemaLocation="http://n2oapp.net/framework/config/schema/object-1.0 http://localhost:8080/n2o/config/schema/object/object-1.0.xsd">
    <name>driverCardInspec</name>

    <actions>
        <action id="update" name="Изменить">
            <invocation>
                <sp:stored-procedure name="gibdd.saveGibddInspec_5" data-source="jdbc/lsd"/>
            </invocation>
            <in-parameters>
                <param name="event_patient_id" mapping="[0]"/>
                <param name="ssr_id" mapping="[1]"/>
                <param name="case_id" mapping="[2]"/>
                <param name="date" mapping="[3]" domain="string"/>
                <param name="resource.srg_id" mapping="[4]"/>
                <param name="main_diagnosis.id" mapping="[5]"/>
                <param name="disease.id" mapping="[6]"/>
                <param name="service_type_id" mapping="[7]"/>
                <param name="is_suspicion" mapping="[8]"/>
                <param name="is_validA.id" mapping="[9]" domain="integer"/>
                <param name="is_validA1.id" mapping="[10]" domain="integer"/>
                <param name="is_validB.id" mapping="[11]" domain="integer"/>
                <param name="is_validB1.id" mapping="[12]" domain="integer"/>
                <param name="is_validBE.id" mapping="[13]" domain="integer"/>
                <param name="is_validC.id" mapping="[14]" domain="integer"/>
                <param name="is_validC1.id" mapping="[15]" domain="integer"/>
                <param name="is_validCE.id" mapping="[16]" domain="integer"/>
                <param name="is_validC1E.id" mapping="[17]" domain="integer"/>
                <param name="is_validD.id" mapping="[18]" domain="integer"/>
                <param name="is_validD1.id" mapping="[19]" domain="integer"/>
                <param name="is_validDE.id" mapping="[20]" domain="integer"/>
                <param name="is_validD1E.id" mapping="[21]" domain="integer"/>
                <param name="is_validM.id" mapping="[22]" domain="integer"/>
                <param name="is_validTm.id" mapping="[23]" domain="integer"/>
                <param name="is_validTb.id" mapping="[24]" domain="integer"/>
                <param name="visibleA" mapping="[25]" domain="boolean"/>
                <param name="visibleA1" mapping="[26]" domain="boolean"/>
                <param name="visibleB" mapping="[27]" domain="boolean"/>
                <param name="visibleB1" mapping="[28]" domain="boolean"/>
                <param name="visibleBE" mapping="[29]" domain="boolean"/>
                <param name="visibleC" mapping="[30]" domain="boolean"/>
                <param name="visibleC1" mapping="[31]" domain="boolean"/>
                <param name="visibleCE" mapping="[32]" domain="boolean"/>
                <param name="visibleC1E" mapping="[33]" domain="boolean"/>
                <param name="visibleD" mapping="[34]" domain="boolean"/>
                <param name="visibleD1" mapping="[35]" domain="boolean"/>
                <param name="visibleDE" mapping="[36]" domain="boolean"/>
                <param name="visibleD1E" mapping="[37]" domain="boolean"/>
                <param name="visibleM" mapping="[38]" domain="boolean"/>
                <param name="visibleTm" mapping="[39]" domain="boolean"/>
                <param name="visibleTb" mapping="[40]" domain="boolean"/>
                <param name="special_notes" mapping="[41]" domain="string"/>
                <!--<param name="org_id" mapping="['org_id']"/>-->
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['savegibddinspec']"/>
            </out-parameters>
            <validations activate="whiteList"><!--
                <validation ref-id="diseaseTypeRequired"/>-->
                <!-- <validation ref-id="checkDateBeforeEvent"/> -->
                <validation ref-id="checkDateBeforeBlankCreateEvent" />
            </validations>
        </action>

        <action id="clearService" name="Удалить">
            <invocation>
                <sql:sql data-source="jdbc/lsd">
                    select gibdd.clear_service(
                                                :id,
                                                :mespid,
                                                 coalesce(:event_patient_id,:eventPatientId),
                                                :case_id,
                                                :ssr_type_id
                                              );
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="ssr_id" mapping="['id']" domain="integer"/>
                <param name="mespId" mapping="['mespid']" domain="integer"/>
                <param name="org_id" mapping="['org_id']"/>
                <param name="mainId" mapping="['event_patient_id']" domain="integer"/>
                <param name="event_patient_id" mapping="['eventPatientId']" domain="integer"/>
                <param name="case_id" mapping="['case_id']" domain="integer"/>
                <param name="service_type_id" mapping="['ssr_type_id']" domain="integer"/>
            </in-parameters>
        </action>
        
        <action id="valid">
            <invocation>
                <sp:stored-procedure name="gibdd.savegibddinspec_valid" data-source="jdbc/lsd"/>
            </invocation>
            <in-parameters>
                <param name="mainId" mapping="[0]"/>
                <param name="caseId" mapping="[1]"/>
                <param name="service.id" mapping="[2]"/>
                <param name="emplPosId" mapping="[3]"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="resourceDefinedConstraint"/>
                <validation ref-id="serviceIsRenderedConstraint"/>
            </validations>
        </action>
    </actions>

    <validations>
        <!--<condition id="diseaseTypeRequired" level="error">
            <message>Характер заболевания обязателен, для диагноза отличного от Z</message>
            <expression on="main_diagnosis,disease"><![CDATA[
                    (main_diagnosis.code == null) || (/Z.*/.test(main_diagnosis.code)) || (!(/Z.*/.test(main_diagnosis.code)) && (disease.id != null))
            ]]></expression>
        </condition>-->
        
        <constraint id="resourceDefinedConstraint" level="error">
            <message>Сохранение невозможно, т.к. ресурсов, оказывающих услугу более одного. Воспользуйтесь формой редактирования.
            </message>
            <invocation>
                <sp:stored-procedure name="gibdd.savegibddinspec_validation" data-source="jdbc/lsd"/>
            </invocation>
            <in-parameters>
                <param name="mainId" mapping="[0]"/>
                <param name="service.id" mapping="[1]"/>
                <param name="emplPosId" mapping="[2]"/>
            </in-parameters>
            <result expression="['savegibddinspec_validation'] == true"/>
        </constraint>
        <constraint id="serviceIsRenderedConstraint" level="error">
            <message>Услуга уже оказана.
            </message>
            <invocation>
                <sql:sql>
                    select exists(select 1 from sr_srv_rendered ssr
                    join md_srv_rendered msr on msr.id = ssr.id
                    join disp.md_event_patient mep on mep.case_id = msr.case_id
                    where mep.id = :xepid and ssr.service_id = :xservice)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="mainId" mapping="['xepid']"/>
                <param name="service.id" mapping="['xservice']"/>
            </in-parameters>
            <result expression="[0][0][0] == false"/>
        </constraint>
            <constraint id="checkDateBeforeEvent" level="error">
                <invocation>
                    <sql:sql> <![CDATA[
                        select count(*) from gibdd.md_gibdd_reference ref
                        left join gibdd.md_gibdd_reference_reference rr on ref.id = rr.card_id
                            where rr.id = (select max(id) from gibdd.md_gibdd_reference_reference xr where xr.card_id = :event_patient_id)
                             and ref.id = :event_patient_id
                            and (ref.blank_date > to_date(:date, 'DD.MM.YYYY')
                                or coalesce(rr.issued_date, date_trunc('day', now())) < to_date(:date, 'DD.MM.YYYY'))
                    ]]>
                    </sql:sql>
                </invocation>
                <in-parameters>
                    <param name="case_id" mapping="['case_id']"/>
                    <param name="date" mapping="['date']" domain="string"/>
                    <param name="event_patient_id" mapping="['event_patient_id']" domain="integer"/>
                </in-parameters>
                <result expression="[0][0][0] == 0"/>
                <message>Указана дата вне рамок случая диспансеризации.</message>
            </constraint>
        <constraint id="checkDateBeforeBlankCreateEvent" level="error">
            <invocation>
                <sql:sql> <![CDATA[
                    select count(*) from gibdd.md_gibdd_reference ref
                        left join gibdd.md_gibdd_reference_reference rr on ref.id = rr.card_id and rr.id = (select max(id) from gibdd.md_gibdd_reference_reference xr where xr.card_id = ref.id)
                            where  ref.id = :event_patient_id
                        and (ref.blank_date > to_date(:date, 'DD.MM.YYYY')
                            or coalesce(rr.issued_date, date_trunc('day', now())) < to_date(:date, 'DD.MM.YYYY'))
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="event_patient_id" mapping="['event_patient_id']" domain="integer"/>
                <param name="date" mapping="['date']" domain="string"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Указана дата вне рамок случая освидетельствования.</message>
        </constraint>
    </validations>

</object>