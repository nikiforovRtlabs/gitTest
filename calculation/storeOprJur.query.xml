<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <object-id>storeOprJur</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from (select jur.id id,jur.org_id orgId,substr(doctype.short_name,1,4)||'.'||doc.int_doc_number docnumber,
                jur.date oprDate,opr.id oprId, opr.name oprName, type.id oprTypeId, type.name oprTypeName,
                send.id sendStoreId, rec.id recStoreId,send.name sendStoreName, rec.name recStoreName,
                recfund.name recfundName ,  sendfund.name sendfundName,
                (select hold_modif_id from inventory.batch batch where  batch.id=coalesce(sendss.batch_id,recss.batch_id)) holdModifId,
                jur.mnei_quantity mneiQuantity,jur.quantity quantity, jur.case_id caseId, jur.patient_id patientId

                from inventory.store_opr_jur jur
                left outer join inventory.document doc on doc.id=jur.doc_id
                left outer join inventory.document_type doctype on doctype.id=doc.int_doc_type_id
                left outer join inventory.store_opr opr on opr.id = jur.store_opr_id
                left outer join inventory.store_opr_type type on type.id = opr.opr_type_id
                left outer join inventory.store rec on rec.id = jur.store_rec_id
                left outer join inventory.store send on send.id = jur.store_send_id
                left outer join inventory.store_supply sendss on sendss.id= jur.send_store_sup_id
                left outer join inventory.store_supply recss on recss.id= jur.rec_store_sup_id
                left outer join inventory.funding_source sendfund on sendfund.id = sendss.funding_source_id
                left outer join inventory.funding_source recfund on recfund.id = recss.funding_source_id) journal
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(journal)
                from (select jur.id id,jur.org_id orgId,substr(doctype.short_name,1,4)||'.'||doc.int_doc_number docnumber,
                jur.date oprDate,opr.id oprId, opr.name oprName, type.id oprTypeId, type.name oprTypeName,
                send.id sendStoreId, rec.id recStoreId,send.name sendStoreName, rec.name recStoreName,
                recfund.name recfundName ,  sendfund.name sendfundName,
                (select hold_modif_id from inventory.batch batch where  batch.id=coalesce(sendss.batch_id,recss.batch_id)) holdModifId,
                jur.mnei_quantity mneiQuantity,jur.quantity quantity, jur.case_id caseId, jur.patient_id patientId

                from inventory.store_opr_jur jur
                left outer join inventory.document doc on doc.id=jur.doc_id
                left outer join inventory.document_type doctype on doctype.id=doc.int_doc_type_id
                left outer join inventory.store_opr opr on opr.id = jur.store_opr_id
                left outer join inventory.store_opr_type type on type.id = opr.opr_type_id
                left outer join inventory.store rec on rec.id = jur.store_rec_id
                left outer join inventory.store send on send.id = jur.store_send_id
                left outer join inventory.store_supply sendss on sendss.id= jur.send_store_sup_id
                left outer join inventory.store_supply recss on recss.id= jur.rec_store_sup_id
                left outer join inventory.funding_source sendfund on sendfund.id = sendss.funding_source_id
                left outer join inventory.funding_source recfund on recfund.id = recss.funding_source_id) journal
                where :where
            </n2o:count-query>
            <n2o:alias>journal</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <expression>orgId</expression>
            <search value="#{org.id?}">(:expression = :org.id or :org.id is null)</search>
        </field>
        <field>
            <id>docNumber</id>
            <domain>string</domain>
            <name>Документ</name>
            <expression>docnumber</expression>
        </field>
        <field>
            <id>oprDate</id>
            <domain>date</domain>
            <name>Дата операции</name>
            <expression>oprDate</expression>
            <search type="between">
                <![CDATA[(:oprDate.begin::date is null or oprDate >= :oprDate.begin) and
                        (:oprDate.end::date is null or oprDate <= :oprDate.end) ]]></search>
        </field>
        <field>
            <id>oprDate.end</id>
            <domain>date</domain>
            <search unavailable="true"/>
            <display unavailable="true"/>
        </field>
        <field>
            <id>oprDate.begin</id>
            <domain>date</domain>
            <search unavailable="true"/>
            <display unavailable="true"/>
        </field>
        <field>
            <id>storeOpr.id</id>
            <domain>integer</domain>
            <expression>oprId</expression>
            <search>:expression = :storeOpr.id</search>
        </field>
        <field>
            <id>storeOpr.name</id>
            <name>Операция</name>
            <domain>string</domain>
            <expression>oprName</expression>
        </field>
        <field>
            <id>storeOprType.id</id>
            <domain>integer</domain>
            <expression>oprTypeId</expression>
            <search>:expression = :storeOprType.id</search>
        </field>
        <field>
            <id>storeOprType.name</id>
            <name>Тип операции</name>
            <domain>string</domain>
            <expression>oprTypeName</expression>
        </field>
        <field>
            <id>sendStore.id</id>
            <domain>integer</domain>
            <expression>sendStoreId</expression>
            <search>:expression = :sendStore.id</search>
        </field>
        <field>
            <id>sendStore.name</id>
            <name>Отправитель</name>
            <domain>string</domain>
            <expression>sendStoreName</expression>
        </field>
        <field>
            <id>recStore.id</id>
            <domain>integer</domain>
            <expression>recStoreId</expression>
            <search>:expression = :recStore.id</search>
        </field>
        <field>
            <id>recStore.name</id>
            <name>Получатель</name>
            <domain>string</domain>
            <expression>recStoreName</expression>
        </field>
        <field>
            <id>fundSource.name</id>
            <name>Ист. фин-я</name>
            <domain>string</domain>
            <expression>coalesce(recfundName, sendfundName)</expression>
        </field>
        <field>
            <id>holdModif.id</id>
            <domain>integer</domain>
            <expression>holdModifId</expression>
            <search>:expression = :holdModif.id</search>
        </field>
        <field>
            <id>holdModif.name</id>
            <name>Наименование ЛС и ИМН</name>
            <domain>string</domain>
            <expression>(select name from inventory.hold_modif where id=holdModifId)</expression>
        </field>
        <field>
            <id>mneiQuantity</id>
            <name>Количество МНЕИ</name>
            <domain>string</domain>
            <expression>trim(to_char(mneiQuantity, 'FM9999990.999999'), '.')||' '||(select mnemocode from cmn_measure where id=(select mnei_id from inventory.hold_modif where id= holdModifId))</expression>
            <sorting>mneiQuantity</sorting>
        </field>
        <field>
            <id>quantity</id>
            <name>Количество</name>
            <domain>string</domain>
            <expression>trim(to_char(quantity, 'FM9999990.999999'), '.')||' '||(select inventory.get_unit_name_by_flag_of_modif((select price_unit_flag from inventory.hold_modif where id=holdModifId),holdModifId))</expression>
            <sorting>quantity</sorting>
        </field>
        <field>
            <id>case.name</id>
            <name>Случай</name>
            <domain>string</domain>
            <expression>(select uid from mc_case where id=caseId)</expression>
        </field>
        <field>
            <id>patient.name</id>
            <name>Пациент</name>
            <domain>string</domain>
            <expression>(select ind.surname||' '||lpad(ind.name,1)||'.'||lpad(ind.patr_name,1)||'.' from pim_individual ind where ind.id= patientId)</expression>
        </field>
    </fields>
</query>