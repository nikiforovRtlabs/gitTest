<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns:sp="http://n2oapp.net/framework/config/schema/action-stored-procedure-1.0">
    <!--<id>birth_certificate</id>-->
    <name>Свидетельство о рождении</name>
    <actions>
        <action id="create">
            <invocation>
                <sql:sql>
                    INSERT INTO
                    certificates.birth_certificate
                    (code,number,issue_dt,is_duplicate,is_mothers_words,is_faulty,org_id,org_name
                    ,birth_dt
                    ,indiv_id,fio,mathers_bdt,address_id,region,district,city,street,home,apartment,citizenship_type_id
                    ,gender_id,birth_place_id
                    ,recipient_id,recipient_fio,recipient_relation,recipient_doc,proxy_doc
                    ,marital_status_id,education_id,busyness_id,presence,general_order
                    ,child_surname,birth_address_id,birth_region,birth_district,birth_city,birth_citizenship_type_id,weight,height,is_singleton,birth_order,sum
                    ,took_birth_id,parent_birth_certificate_id
                    ,receptionist_id,position,receptionist
                    ,writer_id,writer_position,writer_fio
                    ,head_physician_id,head_physician_fio,head_physician_position
                    )
                    VALUES
                    (:code,:number,:issue_date,:duplicate,:mamwords,:faulty,:org,:org_name
                    ,:birth_date
                    ,:indiv,:fio,:mbdate,:maddr,:region,:district,:city,:street,:home,:apartment,:mcitiship
                    ,:gender,:bplace
                    ,:recipient,:recipient_fio,:recipient_relation,:recipient_doc,:proxy_doc
                    ,:marital_status,:education,:busyness,:presence,:general_order
                    ,:child_surname,:birth_address,:birth_region,:birth_district,:birth_city,:bcitiship,:weight,:height,:singleton,:border,:sum
                    ,:took_birth,:parent_id
                    ,:receptionist_id,:position,:receptionist
                    ,:writer_id,:writer_position,:writer_fio
                    ,:head_physician_id,:head_physician_fio,:head_physician_position
                    );
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="number" mapping="['number']" domain="string"/>
                <param name="issue_date" mapping="['issue_date']" domain="date"/>
                <param name="is_duplicate" mapping="['duplicate']" domain="boolean"/>
                <param name="is_mamwords" mapping="['mamwords']" domain="boolean"/>
                <param name="is_faulty" mapping="['faulty']" domain="boolean"/>
                <param name="org.id" mapping="['org']" domain="integer"/>
                <param name="org_name" mapping="['org_name']" domain="string"/>
                <param name="birth_date" mapping="['birth_date']" domain="date"/>
                <param name="indiv.id" mapping="['indiv']" domain="integer"/>
                <param name="fio" mapping="['fio']" domain="string"/>
                <param name="mathers_bdt" mapping="['mbdate']" domain="date"/>
                <param name="maddr.id" mapping="['maddr']" domain="integer"/>
                <param name="region" mapping="['region']" domain="string"/>
                <param name="district" mapping="['district']" domain="string"/>
                <param name="city" mapping="['city']" domain="string"/>
                <param name="street" mapping="['street']" domain="string"/>
                <param name="home" mapping="['home']" domain="string"/>
                <param name="apartment" mapping="['apartment']" domain="string"/>
                <param name="mcitiship.id" mapping="['mcitiship']" domain="integer"/>
                <param name="gender.id" mapping="['gender']" domain="integer"/>
                <param name="birth_place.id" mapping="['bplace']" domain="integer"/>
                <param name="receptionist.id" mapping="['receptionist_id']" domain="integer"/>
                <param name="receptionist_fio" mapping="['receptionist']" domain="string"/>
                <param name="position" mapping="['position']" domain="string"/>
                <param name="recipient.id" mapping="['recipient']" domain="integer"/>
                <param name="recipient_fio" mapping="['recipient_fio']" domain="string"/>
                <param name="recipient_relation" mapping="['recipient_relation']" domain="string"/>
                <param name="recipient_doc" mapping="['recipient_doc']" domain="string"/>
                <param name="proxy_doc" mapping="['proxy_doc']" domain="string"/>
                <param name="marital_status.id" mapping="['marital_status']" domain="integer"/>
                <param name="education.id" mapping="['education']" domain="integer"/>
                <param name="busyness.id" mapping="['busyness']" domain="integer"/>
                <param name="presence" mapping="['presence']" domain="integer"/>
                <param name="general_order" mapping="['general_order']" domain="integer"/>
                <param name="child_surname" mapping="['child_surname']" domain="string"/>
                <param name="birth_address.id" mapping="['birth_address']" domain="integer"/>
                <param name="birth_region" mapping="['birth_region']" domain="string"/>
                <param name="birth_district" mapping="['birth_district']" domain="string"/>
                <param name="birth_city" mapping="['birth_city']" domain="string"/>
                <param name="bcitiship.id" mapping="['bcitiship']" domain="integer"/>
                <param name="weight" mapping="['weight']" domain="integer"/>
                <param name="height" mapping="['height']" domain="integer"/>
                <param name="is_singleton" mapping="['singleton']" domain="boolean"/>
                <param name="birth_order" mapping="['border']" domain="integer"/>
                <param name="sum" mapping="['sum']" domain="integer"/>
                <param name="took_birth.id" mapping="['took_birth']" domain="integer"/>
                <param name="parent.id" mapping="['parent.id']" domain="integer"/>

                <param name="writer.id" mapping="['writer_id']" domain="integer"/>
                <param name="writer_fio" mapping="['writer_fio']" domain="string"/>
                <param name="writer_position" mapping="['writer_position']" domain="string"/>
                <param name="head_physician.id" mapping="['head_physician_id']" domain="integer"/>
                <param name="head_physician_fio" mapping="['head_physician_fio']" domain="string"/>
                <param name="head_physician_position" mapping="['head_physician_position']" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]" domain="integer"/>
            </out-parameters>
            <success-text>
                Свидетельство сохранено в системе успешно
            </success-text>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    UPDATE certificates.birth_certificate set
                        <!--code = :code,-->
                        <!--number = :number,-->
                        issue_dt = :issue_date,
                        is_duplicate = :duplicate,
                        is_mothers_words = :mamwords,
                        is_faulty = :faulty,
                        birth_dt = :birth_date,
                        indiv_id = :indiv,
                        fio = :fio,
                        mathers_bdt = :mbdate,
                        address_id = :maddr,
                        region = :region,
                        district = :district,
                        city = :city,
                        street = :street,
                        home = :home,
                        apartment = :apartment,
                        citizenship_type_id = :mcitiship,
                        gender_id = :gender,
                        birth_place_id = :bplace,
                        <!--receptionist_id = :receptionist_id,-->
                        <!--"position" = :position,-->
                        <!--receptionist = :receptionist_fio,-->
                        recipient_id = :recipient,
                        recipient_fio = :recipient_fio,
                        recipient_relation = :recipient_relation,
                        recipient_doc = :recipient_doc,
                        proxy_doc = :proxy_doc,
                        marital_status_id = :marital_status,
                        education_id = :education,
                        busyness_id = :busyness,
                        presence = :presence,
                        general_order = :general_order,
                        child_surname = :child_surname,
                        birth_address_id = :birth_address,
                        birth_region = :birth_region,
                        birth_district = :birth_district,
                        birth_city = :birth_city,
                        birth_citizenship_type_id = :bcitiship,
                        weight = :weight,
                        height = :height,
                        is_singleton = :singleton,
                        birth_order = :border,
                        sum = :sum,
                        took_birth_id = :took_birth,
                        parent_birth_certificate_id = :parent_id ,

                        receptionist_id = :receptionist_id,
                        position = :position,
                        receptionist = :receptionist,
                        writer_id = :writer_id,
                        writer_position = :writer_position,
                        writer_fio = :writer_fio,
                        head_physician_id = :head_physician_id,
                        head_physician_fio = :head_physician_fio,
                        head_physician_position = :head_physician_position
                    where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <!--<param name="code" mapping="['code']" domain="string"/>-->
                <!--<param name="number" mapping="['number']" domain="string"/>-->
                <param name="issue_date" mapping="['issue_date']" domain="date"/>
                <param name="is_duplicate" mapping="['duplicate']" domain="boolean"/>
                <param name="is_mamwords" mapping="['mamwords']" domain="boolean"/>
                <param name="is_faulty" mapping="['faulty']" domain="boolean"/>
                <param name="birth_date" mapping="['birth_date']" domain="date"/>
                <param name="indiv.id" mapping="['indiv']" domain="integer"/>
                <param name="fio" mapping="['fio']" domain="string"/>
                <param name="mathers_bdt" mapping="['mbdate']" domain="date"/>
                <param name="maddr.id" mapping="['maddr']" domain="integer"/>
                <param name="region" mapping="['region']" domain="string"/>
                <param name="district" mapping="['district']" domain="string"/>
                <param name="city" mapping="['city']" domain="string"/>
                <param name="street" mapping="['street']" domain="string"/>
                <param name="home" mapping="['home']" domain="string"/>
                <param name="apartment" mapping="['apartment']" domain="string"/>
                <param name="mcitiship.id" mapping="['mcitiship']" domain="integer"/>
                <param name="gender.id" mapping="['gender']" domain="integer"/>
                <param name="birth_place.id" mapping="['bplace']" domain="integer"/>
                <param name="receptionist.id" mapping="['receptionist_id']" domain="integer"/>
                <param name="receptionist_fio" mapping="['receptionist']" domain="string"/>
                <param name="position" mapping="['position']" domain="string"/>
                <param name="recipient.id" mapping="['recipient']" domain="integer"/>
                <param name="recipient_fio" mapping="['recipient_fio']" domain="string"/>
                <param name="recipient_relation" mapping="['recipient_relation']" domain="string"/>
                <param name="recipient_doc" mapping="['recipient_doc']" domain="string"/>
                <param name="proxy_doc" mapping="['proxy_doc']" domain="string"/>
                <param name="marital_status.id" mapping="['marital_status']" domain="integer"/>
                <param name="education.id" mapping="['education']" domain="integer"/>
                <param name="busyness.id" mapping="['busyness']" domain="integer"/>
                <param name="presence" mapping="['presence']" domain="integer"/>
                <param name="general_order" mapping="['general_order']" domain="integer"/>
                <param name="child_surname" mapping="['child_surname']" domain="string"/>
                <param name="birth_address.id" mapping="['birth_address']" domain="integer"/>
                <param name="birth_region" mapping="['birth_region']" domain="string"/>
                <param name="birth_district" mapping="['birth_district']" domain="string"/>
                <param name="birth_city" mapping="['birth_city']" domain="string"/>
                <param name="bcitiship.id" mapping="['bcitiship']" domain="integer"/>
                <param name="weight" mapping="['weight']" domain="integer"/>
                <param name="height" mapping="['height']" domain="integer"/>
                <param name="is_singleton" mapping="['singleton']" domain="boolean"/>
                <param name="birth_order" mapping="['border']" domain="integer"/>
                <param name="sum" mapping="['sum']" domain="integer"/>
                <param name="took_birth.id" mapping="['took_birth']" domain="integer"/>
                <param name="parent.id" mapping="['parent.id']" domain="integer"/>

                <param name="writer.id" mapping="['writer_id']" domain="integer"/>
                <param name="writer_fio" mapping="['writer_fio']" domain="string"/>
                <param name="writer_position" mapping="['writer_position']" domain="string"/>
                <param name="head_physician.id" mapping="['head_physician_id']" domain="integer"/>
                <param name="head_physician_fio" mapping="['head_physician_fio']" domain="string"/>
                <param name="head_physician_position" mapping="['head_physician_position']" domain="string"/>
            </in-parameters>
        </action>
    </actions>
    <validations>
        <!--<condition id="checkAddr" level="error">-->
            <!--<expression>((typeof addr_data != 'undefined') &amp;&amp; (addr_data != null) &amp;&amp; (addr_data.id != null)) ||((typeof addr_descr != 'undefined') &amp;&amp; (addr_descr != null)) </expression>-->
            <!--<message>Одно из полей 'Адрес вызова'/'Дополнительные ориентиры' обязательно должно быть заполнено</message>-->
        <!--</condition>-->

        <constraint id="certif_unique" level="error">
            <message>Внимание! Серия и номер свидетельства совпадают с ранее выданным!</message>
            <invocation>
                <sql:sql>
                    select count(*)
                    from certificates.birth_certificate da
                    where trim(da.code) = trim(:code) and trim(da.number) = trim(:number)
                    and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="number" mapping="['number']" domain="string"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
    </validations>
</object>