<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>perinatal_death_certificate</id>-->
    <name>Свидетельство о перинатальной смерти</name>
    <object-id>perinatal_death_certificate</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from certificates.perinatal_death_certificate pdc
                join public.pim_organization org on org.id = pdc.org_id
                left join public.pim_individual pip on pip.id = pdc.indiv_id
                left join pim_gender pg on pg.id = pdc.gender_id

                left join certificates.perinatal_death_certificate pardc on pardc.id = pdc.parent_perinatal_death_certificate_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from certificates.perinatal_death_certificate pdc
                join public.pim_organization org on org.id = pdc.org_id
                left join public.pim_individual pip on pip.id = pdc.indiv_id
                left join pim_gender pg on pg.id = pdc.gender_id

                left join certificates.perinatal_death_certificate pardc on pardc.id = pdc.parent_perinatal_death_certificate_id
                where :where
            </n2o:count-query>
            <n2o:alias>pdc</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <display/>
            <expression>pdc.id</expression>
            <filters>
                <filter type="eq" filter-field="id">
                    :expression = :id
                </filter>
            </filters>
        </field>
        <field>
            <id>certif.id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <display/>
            <expression>pdc.id</expression>
        </field>
        <field>
            <id>code</id>
            <domain>string</domain>
            <name>Серия</name>
            <display/>
            <expression>pdc.code</expression>
            <filters>
                <filter type="eq" filter-field="code">
                    trim(:expression) = trim(:code)
                </filter>
            </filters>
        </field>
        <field>
            <id>number</id>
            <domain>string</domain>
            <name>Номер</name>
            <display/>
            <expression>pdc.number</expression>
            <filters>
                <filter type="eq" filter-field="number">
                    trim(:expression) = trim(:number)
                </filter>
            </filters>
        </field>
        <field>
            <id>certificate</id>
            <domain>string</domain>
            <name>Свидетельство</name>
            <display/>
            <expression>pdc.code||' №'||pdc.number||' от '||to_char(pdc.issue_dt,'DD.MM.YYYY')</expression>
            <filters>
                <filter type="eq" filter-field="certificate">
                    :expression like '%'||:certificate||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>issue_date</id>
            <domain>date</domain>
            <name>Дата выдачи</name>
            <display/>
            <expression>pdc.issue_dt</expression>
            <filters>
                <filter type="eq" filter-field="issue_date">
                    :expression = :issue_date
                </filter>
                <filter type="more" filter-field="isdate.begin">
                    :expression >= :isdate.begin
                </filter>
                <filter type="less" filter-field="isdate.end">
                    <![CDATA[
                        :expression <= :isdate.end
                    ]]>
                </filter>
            </filters>
        </field>
        <field>
            <id>isdate.begin</id>
            <domain>date</domain>
        </field>
        <field>
            <id>isdate.end</id>
            <domain>date</domain>
        </field>

        <field>
            <id>kind.id</id>
            <domain>integer</domain>
            <name>Характер заполняемого свидетельства</name>
            <display/>
            <expression>pdc.certificate_kind_id</expression>
            <filters>
                <filter type="eq" filter-field="kind.id">
                    :expression = :kind.id
                </filter>
            </filters>
        </field>

        <field>
            <id>is_duplicate</id>
            <domain>boolean</domain>
            <display/>
            <expression>pdc.is_duplicate</expression>
            <filters>
                <filter type="eq" filter-field="is_dupl">
                    :expression = :is_dupl
                </filter>
            </filters>
        </field>
        <field>
            <id>is_dupl</id>
            <domain>boolean</domain>
            <display/>
            <expression>pdc.is_duplicate</expression>
        </field>
        <field>
            <id>is_mamwords</id>
            <domain>boolean</domain>
            <display/>
            <expression>pdc.is_mothers_words</expression>
            <filters>
                <filter type="eq" filter-field="is_mamwords">
                    :expression = :is_mamwords
                </filter>
            </filters>
        </field>
        <field>
            <id>is_faulty</id>
            <domain>boolean</domain>
            <display/>
            <expression>pdc.is_faulty</expression>
            <filters>
                <filter type="eq" filter-field="is_faulty">
                    :expression = :is_faulty
                </filter>
            </filters>
        </field>

        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <display/>
            <expression>pdc.org_id</expression>
            <filters>
                <filter type="eq" filter-field="org.id" >
                    :expression = :org.id
                </filter>
            </filters>
        </field>
        <field>
            <id>org.name</id>
            <domain>string</domain>
            <name>МО</name>
            <display/>
            <expression>pdc.org_name</expression>
        </field>
        <field>
            <id>org_name</id>
            <domain>string</domain>
            <name>МО</name>
            <display/>
            <expression>pdc.org_name</expression>
            <filters>
                <filter type="eq" filter-field="org_name">
                    :expression = :org_name
                </filter>
            </filters>
        </field>

        <field>
            <id>death_child_birth_dt</id>
            <domain>date</domain>
            <name>Дата и время рождения мертвым плодом</name>
            <display>to_char(pdc.death_child_birth_dt, 'dd.mm.yyyy HH24:mi')</display>
            <expression>pdc.death_child_birth_dt</expression>
            <filters>
                <filter type="eq" filter-field="death_child_birth_dt">
                    :expression = :death_child_birth_dt
                </filter>
                <filter type="more" filter-field="dcbdt.begin">
                    :expression >= :dcbdt.begin
                </filter>
                <filter type="less" filter-field="dcbdt.end">
                    <![CDATA[
                        :expression <= :dcbdt.end
                    ]]>
                </filter>
            </filters>
        </field>
        <field>
            <id>dcbdt.begin</id>
            <domain>date</domain>
        </field>
        <field>
            <id>dcbdt.end</id>
            <domain>date</domain>
        </field>

        <field>
            <id>child_birth_dt</id>
            <domain>date</domain>
            <name>Дата и время рождения</name>
            <display>to_char(pdc.child_birth_dt, 'dd.mm.yyyy HH24:mi')</display>
            <expression>pdc.child_birth_dt</expression>
            <filters>
                <filter type="eq" filter-field="child_birth_dt">
                    :expression = :child_birth_dt
                </filter>
                <filter type="more" filter-field="cbdt.begin">
                    :expression >= :cbdt.begin
                </filter>
                <filter type="less" filter-field="cbdt.end">
                    <![CDATA[
                        :expression <= :cbdt.end
                    ]]>
                </filter>
            </filters>
        </field>
        <field>
            <id>cbdt.begin</id>
            <domain>date</domain>
        </field>
        <field>
            <id>cbdt.end</id>
            <domain>date</domain>
        </field>

        <field>
            <id>death_dt</id>
            <domain>date</domain>
            <name>Дата и время смерти</name>
            <display>to_char(pdc.death_dt, 'dd.mm.yyyy HH24:mi')</display>
            <expression>pdc.death_dt</expression>
            <filters>
                <filter type="eq" filter-field="death_dt">
                    :expression = :death_dt
                </filter>
                <filter type="more" filter-field="ddt.begin">
                    :expression >= :ddt.begin
                </filter>
                <filter type="less" filter-field="ddt.end">
                    <![CDATA[
                        :expression <= :ddt.end
                    ]]>
                </filter>
            </filters>
        </field>
        <field>
            <id>ddt.begin</id>
            <domain>date</domain>
        </field>
        <field>
            <id>ddt.end</id>
            <domain>date</domain>
        </field>

        <field>
            <id>death_moment.id</id>
            <domain>integer</domain>
            <name>Момент наступления смерти</name>
            <display/>
            <expression>pdc.death_moment_id</expression>
        </field>

        <field>
            <id>indiv.id</id>
            <domain>integer</domain>
            <display/>
            <expression>pip.id</expression>
            <filters>
                <filter type="eq" filter-field="indiv.id">
                    :expression = :indiv.id
                </filter>
            </filters>
        </field>
        <field>
            <id>age</id>
            <domain>integer</domain>
            <name>Возраст матери</name>
            <display/>
            <expression>case when get_age(cast (pip.birth_dt as date),cast(now() as date)) = -1
                            then
                                case when pdc.mathers_bdt is not null
                                        then get_age(cast(pdc.mathers_bdt as date),cast(now() as date))
                                        else null
                                end
                            else get_age(cast (pip.birth_dt as date),cast(now() as date))
                        end
            </expression>
            <filters>
                <filter type="eq" filter-field="age">
                    :expression = :age
                </filter>
                <filter type="more" filter-field="mage.begin">
                    :expression >= :mage.begin
                </filter>
                <filter type="less" filter-field="mage.end">
                    :mage.end >= :expression
                </filter>
            </filters>
        </field>
        <field>
            <id>mage.begin</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>mage.end</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>fio</id>
            <domain>string</domain>
            <name>ФИО</name>
            <display/>
            <expression>pdc.fio</expression>
            <filters>
                <filter type="eq" filter-field="fio">
                    :expression like '%'||:fio||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>mathers_bdt</id>
            <domain>date</domain>
            <name>Дата рождения матери</name>
            <display/>
            <expression>pdc.mathers_bdt</expression>
            <filters>
                <filter type="eq" filter-field="mathers_bdt">
                    :exprerssion = :mathers_bdt
                </filter>
                <filter type="more" filter-field="mbdt.begin">
                    :expression >= :mbdt.begin
                </filter>
                <filter type="less" filter-field="mbdt.end">
                    <![CDATA[
                        :expression <= :mbdt.end
                    ]]>
                </filter>
            </filters>
        </field>
        <field>
            <id>mbde.begin</id>
            <domain>date</domain>
        </field>
        <field>
            <id>mbdt.end</id>
            <domain>date</domain>
        </field>

        <field>
            <id>maddr.id</id>
            <domain>integer</domain>
            <name>Адрес матери</name>
            <display/>
            <expression>pdc.address_id</expression>
            <filters>
                <filter type="eq" filter-field="maddr.id">
                    :expression = :maddr.id
                </filter>
            </filters>
        </field>
        <field>
            <id>region</id>
            <domain>string</domain>
            <name>Республика, край, область</name>
            <display/>
            <expression>pdc.region</expression>
            <filters>
                <filter type="eq" filter-field="region">
                    upper(:expression) like '%'||upper(:region)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>district</id>
            <domain>string</domain>
            <name>Район</name>
            <display/>
            <expression>pdc.district</expression>
            <filters>
                <filter type="eq" filter-field="district">
                    upper(:expression) like '%'||upper(:district)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>city</id>
            <domain>string</domain>
            <name>Город (село)</name>
            <display/>
            <expression>pdc.city</expression>
            <filters>
                <filter type="eq" filter-field="city">
                    upper(:expression) like '%'||upper(:city)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>street</id>
            <domain>string</domain>
            <name>Улица</name>
            <display/>
            <expression>pdc.street</expression>
        </field>
        <field>
            <id>home</id>
            <domain>string</domain>
            <name>Дом</name>
            <display/>
            <expression>pdc.home</expression>
        </field>
        <field>
            <id>apartment</id>
            <domain>string</domain>
            <name>Квартира</name>
            <display/>
            <expression>pdc.apartment</expression>
        </field>
        <field>
            <id>mcitiship.id</id>
            <domain>integer</domain>
            <name>Местность проживания матери</name>
            <display/>
            <expression>pdc.citizenship_type_id</expression>
            <filters>
                <filter type="eq" filter-field="mcitiship.id">
                    :expression = :mcitiship.id
                </filter>
            </filters>
        </field>

        <field>
            <id>marital_status.id</id>
            <domain>integer</domain>
            <name>Семейное положение матери</name>
            <display/>
            <expression>pdc.marital_status_id</expression>
            <filters>
                <filter type="eq" filter-field="marital_status.id">
                    :expression = :marital_status.id
                </filter>
            </filters>
        </field>
        <field>
            <id>education.id</id>
            <domain>integer</domain>
            <name>Образование</name>
            <display/>
            <expression>pdc.education_id</expression>
            <filters>
                <filter type="eq" filter-field="education.id">
                    :expression = :education.id
                </filter>
            </filters>
        </field>
        <field>
            <id>busyness.id</id>
            <domain>integer</domain>
            <name>Занятость</name>
            <display/>
            <expression>pdc.busyness_id</expression>
            <filters>
                <filter type="eq" filter-field="busyness.id">
                    :expression = :busyness.id
                </filter>
            </filters>
        </field>

        <field>
            <id>childbirth_order</id>
            <domain>integer</domain>
            <name>Которые по счету роды</name>
            <display/>
            <expression>pdc.childbirth_order</expression>
            <filters>
                <filter type="eq" filter-field="childbirth_order">
                    :expression = :childbirth_order
                </filter>
            </filters>
        </field>

        <field>
            <id>gender.id</id>
            <domain>integer</domain>
            <name>Пол</name>
            <display/>
            <expression>pdc.gender_id</expression>
            <filters>
                <filter type="eq" filter-field="gender.id">
                    :expression = :gender.id
                </filter>
            </filters>
        </field>
        <field>
            <id>gender.name</id>
            <domain>string</domain>
            <name>Пол</name>
            <display/>
            <expression>pg.name</expression>
        </field>

        <field>
            <id>child_surname</id>
            <domain>string</domain>
            <name>Фамилия ребенка</name>
            <display/>
            <expression>pdc.child_surname</expression>
        </field>

        <field>
            <id>death_place.id</id>
            <domain>integer</domain>
            <name>Смерть произошла</name>
            <display/>
            <expression>pdc.death_place_id</expression>
            <filters>
                <filter type="eq" filter-field="death_place.id">
                    :expression = :death_place.id
                </filter>
            </filters>
        </field>
        <field>
            <id>death_address.id</id>
            <domain>integer</domain>
            <name>Место смерти</name>
            <display/>
            <expression>pdc.death_address_id</expression>
        </field>
        <field>
            <id>death_region</id>
            <domain>string</domain>
            <name>Республика, край, область</name>
            <display/>
            <expression>pdc.death_region</expression>
            <filters>
                <filter type="eq" filter-field="death_region">
                    upper(:expression) like '%'||upper(:death_region)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>death_district</id>
            <domain>string</domain>
            <name>Район</name>
            <display/>
            <expression>pdc.death_district</expression>
            <filters>
                <filter type="eq" filter-field="death_district">
                    upper(:expression) like '%'||upper(:death_district)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>death_city</id>
            <domain>string</domain>
            <name>Город (село)</name>
            <display/>
            <expression>pdc.death_city</expression>
            <filters>
                <filter type="eq" filter-field="death_city">
                    upper(:expression) like '%'||upper(:death_city)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>death_citiship.id</id>
            <domain>integer</domain>
            <name>Местность смерти</name>
            <display/>
            <expression>pdc.death_citizenship_type_id</expression>
        </field>

        <field>
            <id>weight</id>
            <domain>integer</domain>
            <name>Масса тела ребенка при рождении</name>
            <display/>
            <expression>pdc.weight</expression>
            <filters>
                <filter type="eq" filter-field="weight">
                    :expression = :weight
                </filter>
                <filter type="more" filter-field="w.begin">
                    :expression >= :w.begin
                </filter>
                <filter type="less" filter-field="w.end">
                    :w.end >= :expression
                </filter>
            </filters>
        </field>
        <field>
            <id>w.begin</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>w.end</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>height</id>
            <domain>integer</domain>
            <name>Длина тела ребенка при рождении</name>
            <display/>
            <expression>pdc.height</expression>
            <filters>
                <filter type="eq" filter-field="height">
                    :expression = :height
                </filter>
                <filter type="more" filter-field="h.begin">
                    :expression >= :h.begin
                </filter>
                <filter type="less" filter-field="h.end">
                    :h.end >= :expression
                </filter>
            </filters>
        </field>
        <field>
            <id>h.begin</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>h.end</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>is_singleton</id>
            <domain>boolean</domain>
            <name>Одноплодные роды</name>
            <display/>
            <expression>pdc.is_singleton</expression>
        </field>
        <field>
            <id>birth_order</id>
            <domain>integer</domain>
            <name>Которым по счету</name>
            <display/>
            <expression>pdc.birth_order</expression>
        </field>
        <field>
            <id>sum</id>
            <domain>integer</domain>
            <name>Число родившихся</name>
            <display/>
            <expression>pdc.sum</expression>
            <filters>
                <filter type="eq" filter-field="sum">
                    :expression = :sum
                </filter>
                <!--<filter type="more" filter-field="s.begin">-->
                <!--:expression >= :s.begin-->
                <!--</filter>-->
                <!--<filter type="less" filter-field="s.end">-->
                <!--:s.end >= :expression-->
                <!--</filter>-->
            </filters>
        </field>

        <field>
            <id>general_order</id>
            <domain>integer</domain>
            <name>Которым по счету ребенок был рожден у матери</name>
            <display/>
            <expression>pdc.general_order</expression>
            <filters>
                <filter type="eq" filter-field="general_order">
                    :expression = :general_order
                </filter>
            </filters>
        </field>

        <field>
            <id>death_kind.id</id>
            <domain>integer</domain>
            <name>Род смерти</name>
            <display/>
            <expression>pdc.death_kind_id</expression>
            <filters>
                <filter type="eq" filter-field="death_kind.id">
                    :expression = :death_kind.id
                </filter>
            </filters>
        </field>

        <field>
            <id>took_birth.id</id>
            <domain>integer</domain>
            <name>Лицо, принимавшее роды</name>
            <display/>
            <expression>pdc.took_birth_id</expression>
        </field>

        <field>
            <id>establish_cause.id</id>
            <domain>integer</domain>
            <name>Установил причины смерти</name>
            <display/>
            <expression>pdc.establish_cause_id</expression>
            <filters>
                <filter type="eq" filter-field="establish_cause.id">
                    :expression = :establish_cause.id
                </filter>
            </filters>
        </field>

        <field>
            <id>definition_grounds.id</id>
            <domain>integer</domain>
            <name>Основание определения патологических процессов</name>
            <display/>
            <expression>pdc.definition_grounds_id</expression>
            <filters>
                <filter type="eq" filter-field="definition_grounds.id">
                    :expression = :definition_grounds.id
                </filter>
            </filters>
        </field>

        <field>
            <id>receptionist.id</id>
            <domain>integer</domain>
            <name>Выдал свидетельство</name>
            <display/>
            <expression>pdc.receptionist_id</expression>
            <filters>
                <filter type="eq" filter-field="receptionist.id">
                    :expression = :receptionist.id
                </filter>
            </filters>
        </field>
        <field>
            <id>position</id>
            <domain>string</domain>
            <name>должность врача (фельдшера, акушерки), выдавшего свидетельство</name>
            <display/>
            <expression>pdc.position</expression>
        </field>
        <field>
            <id>reseptionist</id>
            <domain>string</domain>
            <name>ФИО выдавшего свидетельство</name>
            <display/>
            <expression>pdc.reseptionist</expression>
        </field>

        <field>
            <id>recipient.id</id>
            <domain>integer</domain>
            <name>Получатель</name>
            <display/>
            <expression>pdc.recipient_id</expression>
        </field>
        <field>
            <id>recipient_fio</id>
            <domain>string</domain>
            <name>ФИО получателя</name>
            <display/>
            <expression>pdc.recipient_fio</expression>
        </field>
        <field>
            <id>recipient_doc</id>
            <domain>string</domain>
            <name>документ удостоверяющий личность получателя, серия, номер, кем выдан</name>
            <display/>
            <expression>pdc.recipient_doc</expression>
        </field>

        <field>
            <id>parent.id</id>
            <domain>integer</domain>
            <name></name>
            <display/>
            <expression>pdc.parent_perinatal_death_certificate_id</expression>
            <filters>
                <filter type="eq" filter-field="parent.id">
                    (:id is not null or :expression = :parent.id)
                </filter>
            </filters>
        </field>
        <field>
            <id>parent_code</id>
            <domain>string</domain>
            <display/>
            <expression>
                case when (pdc.certificate_kind_id in (3,4))
                        then
                            case when (pdc.is_duplicate is null or pdc.is_duplicate is false)
                                then pardc.code
                                else (select code from certificates.perinatal_death_certificate
                                        where id = pardc.parent_perinatal_death_certificate_id)
                            end
                        else null
                end
            </expression>
        </field>
        <field>
            <id>parent_number</id>
            <domain>string</domain>
            <display/>
            <expression>
                case when (pdc.certificate_kind_id in (3,4))
                    then
                        case when (pdc.is_duplicate is null or pdc.is_duplicate is false)
                            then pardc.number
                            else (select number from certificates.perinatal_death_certificate
                                    where id = pardc.parent_perinatal_death_certificate_id)
                        end
                    else null
                end
            </expression>
        </field>
        <field>
            <id>parent_dt</id>
            <domain>date</domain>
            <display/>
            <expression>
                case when (pdc.certificate_kind_id in (3,4))
                    then
                        case when (pdc.is_duplicate is null or pdc.is_duplicate is false)
                            then pardc.issue_dt
                            else (select issue_dt from certificates.perinatal_death_certificate
                                    where id = pardc.parent_perinatal_death_certificate_id)
                        end
                    else null
                end
            </expression>
        </field>

        <!--доп поля для фильтраций и "красоты"-->
        <field>
            <id>color</id>
            <domain>string</domain>
            <display/>
            <expression>
                case
                    <!--Если на этот выдан дубликат - серый-->
                    when exists (select * from certificates.perinatal_death_certificate
                                    where is_duplicate is true and parent_perinatal_death_certificate_id = pdc.id)
                        then 'muted'
                    <!--Если является дубликатом - синий-->
                    when pdc.is_duplicate is true
                        then 'text-info'
                    <!--Если испорчен бланк - красный-->
                    when pdc.is_faulty is true
                        then 'text-error'
                    <!--Если на это выдан взамен - желтый-->
                    when exists (select * from certificates.perinatal_death_certificate
                                    where certificate_kind_id in (3,4) and parent_perinatal_death_certificate_id = pdc.id)
                        then 'text-warning'
                    <!--Если является взамен - зеленый-->
                    when pdc.certificate_kind_id in (3,4)
                        then 'text-success'
                    else 'text'
                end
            </expression>
        </field>

        <field>
            <id>is_parent</id>
            <domain>boolean</domain>
            <display/>
            <expression>
                case when exists (select * from certificates.perinatal_death_certificate
                                    where parent_perinatal_death_certificate_id = pdc.id)
                then true
                else false
                end
            </expression>
            <filters>
                <filter type="eq" filter-field="is_parent">
                    :expression = :is_parent
                </filter>
            </filters>
        </field>

        <field>
            <id>to_read</id>
            <domain>boolean</domain>
            <display>(select :to_read)</display>
        </field>

        <field>
            <id>is_enabling</id>
            <domain>boolean</domain>
            <display>(select :is_enabling)</display>
        </field>

        <field>
            <id>parent_instead.id</id>
            <domain>integer</domain>
            <display>(select :parent_instead)</display>
        </field>

        <field>
            <id>$action</id>
            <domain>string</domain>
            <display>:$action</display>
        </field>

    </fields>
</query>