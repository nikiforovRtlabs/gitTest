<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>death_moment</id>-->
    <name>Момент наступления смерти</name>
    <object-id>death_moment</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from certificates.death_moment dm
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from certificates.death_moment dm
                where :where
            </n2o:count-query>
            <n2o:alias>dm</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <display/>
            <expression>dm.id</expression>
            <filters>
                <filter type="eq" filter-field="id">
                    :expression = :id
                </filter>
            </filters>
        </field>
        <field>
            <id>code</id>
            <domain>integer</domain>
            <name>Код</name>
            <display/>
            <expression>cast(trim(dm.code) as integer)</expression>
            <filters>
                <filter type="eq" filter-field="code">
                    trim(upper(:expression)) like trim(upper(:code||'%'))
                </filter>
            </filters>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <name>Наименование</name>
            <display/>
            <expression>dm.name||' ['||dm.code||']'</expression>
            <filters>
                <filter type="eq" filter-field="name">
                    trim(upper(:expression)) like trim(upper(:name||'%'))
                </filter>
            </filters>
            <sorting>cast(trim(dm.code) as integer)</sorting>
        </field>
        <field>
            <id>ecode</id>
            <domain>string</domain>
            <name>Дополнительный код</name>
            <display/>
            <expression>dm.e_code</expression>
            <filters>
                <filter type="eq" filter-field="ecode">
                    trim(upper(:expression)) like trim(upper(:ecode||'%'))
                </filter>
            </filters>
        </field>
    </fields>
</query>