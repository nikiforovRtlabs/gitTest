<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>death_certificate</id>-->
    <name>Свидетельство о смерти</name>
    <object-id>death_certificate</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from certificates.death_certificate dc
                join public.pim_organization org on org.id = dc.org_id
                left join public.pim_individual pip on pip.id = dc.indiv_id
                left join pim_gender pg on pg.id = dc.gender_id

                left join certificates.pre_post_maturity ppm on ppm.id = dc.pre_post_maturity_id

                left join public.pim_individual mpip on mpip.id = dc.mather_id

                left join certificates.death_certificate pardc on pardc.id = dc.parent_death_certificate_id

                left join public.address_element_data aed on aed.id = dc.address_id

                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from certificates.death_certificate dc
                join public.pim_organization org on org.id = dc.org_id
                left join public.pim_individual pip on pip.id = dc.indiv_id
                left join pim_gender pg on pg.id = dc.gender_id

                left join certificates.pre_post_maturity ppm on ppm.id = dc.pre_post_maturity_id

                left join public.pim_individual mpip on mpip.id = dc.mather_id

                left join certificates.death_certificate pardc on pardc.id = dc.parent_death_certificate_id

                left join public.address_element_data aed on aed.id = dc.address_id
                where :where
            </n2o:count-query>
            <n2o:alias>dc</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <display/>
            <expression>dc.id</expression>
            <filters>
                <filter type="eq" filter-field="id">
                    :expression = :id
                </filter>
            </filters>
        </field>
        <field>
            <id>certif.id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <display/>
            <expression>dc.id</expression>
            <!--<filters>-->
                <!--<filter type="eq" filter-field="id">-->
                    <!--:expression = :id-->
                <!--</filter>-->
            <!--</filters>-->
        </field>
        <field>
            <id>code</id>
            <domain>string</domain>
            <name>Серия</name>
            <display/>
            <expression>dc.code</expression>
            <filters>
                <filter type="eq" filter-field="code">
                    trim(:expression) = trim(:code)
                </filter>
            </filters>
        </field>
        <field>
            <id>number</id>
            <domain>string</domain>
            <name>Номер</name>
            <display/>
            <expression>dc.number</expression>
            <filters>
                <filter type="eq" filter-field="number">
                    trim(:expression) = trim(:number)
                </filter>
            </filters>
        </field>
        <field>
            <id>certificate</id>
            <domain>string</domain>
            <name>Свидетельство</name>
            <display/>
            <expression>dc.code||' №'||dc.number||' от '||to_char(dc.issue_dt,'DD.MM.YYYY')</expression>
            <filters>
                <filter type="eq" filter-field="certificate">
                    :expression like '%'||:certificate||'%'
                </filter>
            </filters>
        </field>

        <field>
            <id>issue_date</id>
            <domain>date</domain>
            <name>Дата выдачи</name>
            <display/>
            <expression>dc.issue_dt</expression>
            <filters>
                <filter type="eq" filter-field="issue_date">
                    :expression = :issue_date
                </filter>
                <filter type="more" filter-field="isdate.begin">
                    :expression >= :isdate.begin
                </filter>
                <filter type="less" filter-field="isdate.end">
                    <![CDATA[
                        :expression <= :isdate.end
                    ]]>
                </filter>
            </filters>
        </field>
        <field>
            <id>isdate.begin</id>
            <domain>date</domain>
        </field>
        <field>
            <id>isdate.end</id>
            <domain>date</domain>
        </field>
        
        <field>
            <id>kind.id</id>
            <domain>integer</domain>
            <name>Характер заполняемого свидетельства</name>
            <display/>
            <expression>dc.certificate_kind_id</expression>
            <filters>
                <filter type="eq" filter-field="kind.id">
                    :expression = :kind.id
                </filter>
            </filters>
        </field>

        <field>
            <id>is_duplicate</id>
            <domain>boolean</domain>
            <display/>
            <expression>dc.is_duplicate</expression>
            <filters>
                <filter type="eq" filter-field="is_dupl">
                    :expression = :is_dupl
                </filter>
            </filters>
        </field>
        <field>
            <id>is_dupl</id>
            <domain>boolean</domain>
            <display/>
            <expression>dc.is_duplicate</expression>
        </field>
        <field>
            <id>is_relativeswords</id>
            <domain>boolean</domain>
            <display/>
            <expression>dc.is_relatives_words</expression>
            <filters>
                <filter type="eq" filter-field="is_relativeswords">
                    :expression = :is_relativeswords
                </filter>
            </filters>
        </field>
        <field>
            <id>is_faulty</id>
            <domain>boolean</domain>
            <display/>
            <expression>dc.is_faulty</expression>
            <filters>
                <filter type="eq" filter-field="is_faulty">
                    :expression = :is_faulty
                </filter>
            </filters>
        </field>

        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <display/>
            <expression>dc.org_id</expression>
            <filters>
                <filter type="eq" filter-field="org.id" >
                    :expression = :org.id
                </filter>
            </filters>
        </field>
        <field>
            <id>org.name</id>
            <domain>string</domain>
            <name>МО</name>
            <display/>
            <expression>dc.org_name</expression>
        </field>
        <field>
            <id>org_name</id>
            <domain>string</domain>
            <name>МО</name>
            <display/>
            <expression>dc.org_name</expression>
            <filters>
                <filter type="eq" filter-field="org_name">
                    :expression = :org_name
                </filter>
            </filters>
        </field>

        <field>
            <id>indiv.id</id>
            <domain>integer</domain>
            <name>Умерший</name>
            <display/>
            <expression>pip.id</expression>
            <filters>
                <filter type="eq" filter-field="indiv.id">
                    :expression = :indiv.id
                </filter>
            </filters>
        </field>
        <field>
            <id>fio</id>
            <domain>string</domain>
            <name>ФИО</name>
            <display/>
            <expression>dc.fio</expression>
            <filters>
                <filter type="eq" filter-field="fio">
                    upper(:expression) like '%'||upper(:fio)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>gender.id</id>
            <domain>integer</domain>
            <name>Пол</name>
            <display/>
            <expression>dc.gender_id</expression>
            <filters>
                <filter type="eq" filter-field="gender.id">
                    :expression = :gender.id
                </filter>
            </filters>
        </field>
        <field>
            <id>gender.name</id>
            <domain>string</domain>
            <name>Пол</name>
            <display/>
            <expression>pg.name</expression>
        </field>
        <field>
            <id>birth_dt</id>
            <domain>date</domain>
            <name>Дата рождения</name>
            <display/>
            <expression>dc.birth_dt</expression>
            <filters>
                <filter type="eq" filter-field="birth_dt">
                    :exprerssion = :birth_dt
                </filter>
                <filter type="more" filter-field="bdt.begin">
                    :expression >= :bdt.begin
                </filter>
                <filter type="less" filter-field="bdt.end">
                    <![CDATA[
                        :expression <= :bdt.end
                    ]]>
                </filter>
            </filters>
        </field>
        <field>
            <id>bdt.begin</id>
            <domain>date</domain>
        </field>
        <field>
            <id>bdt.end</id>
            <domain>date</domain>
        </field>

        <field>
            <id>death_dt</id>
            <domain>date</domain>
            <name>Дата и время смерти</name>
            <display>to_char(dc.death_dt, 'dd.mm.yyyy HH24:mi')</display>
            <expression>dc.death_dt</expression>
            <filters>
                <filter type="eq" filter-field="death_dt">
                    :expression = :death_dt
                </filter>
                <filter type="more" filter-field="ddt.begin">
                    :expression >= :ddt.begin
                </filter>
                <filter type="less" filter-field="ddt.end">
                    <![CDATA[
                        :expression <= :ddt.end
                    ]]>
                </filter>
            </filters>
        </field>
        <field>
            <id>ddt.begin</id>
            <domain>date</domain>
        </field>
        <field>
            <id>ddt.end</id>
            <domain>date</domain>
        </field>

        <field>
            <id>addr.id</id>
            <domain>integer</domain>
            <name>Адрес</name>
            <display/>
            <expression>dc.address_id</expression>
            <filters>
                <filter type="eq" filter-field="maddr.id">
                    :expression = :addr.id
                </filter>
            </filters>
        </field>
        <field>
            <id>addr.displayName</id>
            <domain>string</domain>
            <name>Адрес</name>
            <display/>
            <expression>aed.search_name</expression>
        </field>
        <field>
            <id>region</id>
            <domain>string</domain>
            <name>Республика, край, область</name>
            <display/>
            <expression>dc.region</expression>
            <filters>
                <filter type="eq" filter-field="region">
                    upper(:expression) like '%'||upper(:region)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>district</id>
            <domain>string</domain>
            <name>Район</name>
            <display/>
            <expression>dc.district</expression>
            <filters>
                <filter type="eq" filter-field="district">
                    upper(:expression) like '%'||upper(:district)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>city</id>
            <domain>string</domain>
            <name>Город (село)</name>
            <display/>
            <expression>dc.city</expression>
            <filters>
                <filter type="eq" filter-field="city">
                    upper(:expression) like '%'||upper(:city)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>street</id>
            <domain>string</domain>
            <name>Улица</name>
            <display/>
            <expression>dc.street</expression>
        </field>
        <field>
            <id>home</id>
            <domain>string</domain>
            <name>Дом</name>
            <display/>
            <expression>dc.home</expression>
        </field>
        <field>
            <id>apartment</id>
            <domain>string</domain>
            <name>Квартира</name>
            <display/>
            <expression>dc.apartment</expression>
        </field>
        <field>
            <id>citiship.id</id>
            <domain>integer</domain>
            <name>Местность проживания матери</name>
            <display/>
            <expression>dc.citizenship_type_id</expression>
            <filters>
                <filter type="eq" filter-field="citiship.id">
                    :expression = :citiship.id
                </filter>
            </filters>
        </field>

        <field>
            <id>death_addr.id</id>
            <domain>integer</domain>
            <name>Адрес</name>
            <display/>
            <expression>dc.address_id</expression>
            <filters>
                <filter type="eq" filter-field="death_addr.id">
                    :expression = :death_addr.id
                </filter>
            </filters>
        </field>
        <field>
            <id>death_region</id>
            <domain>string</domain>
            <name>Республика, край, область</name>
            <display/>
            <expression>dc.death_region</expression>
            <filters>
                <filter type="eq" filter-field="death_region">
                    upper(:expression) like '%'||upper(:death_region)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>death_district</id>
            <domain>string</domain>
            <name>Район</name>
            <display/>
            <expression>dc.death_district</expression>
            <filters>
                <filter type="eq" filter-field="death_district">
                    upper(:expression) like '%'||upper(:death_district)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>death_city</id>
            <domain>string</domain>
            <name>Город (село)</name>
            <display/>
            <expression>dc.death_city</expression>
            <filters>
                <filter type="eq" filter-field="death_city">
                    upper(:expression) like '%'||upper(:death_city)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>death_street</id>
            <domain>string</domain>
            <name>Улица</name>
            <display/>
            <expression>dc.death_street</expression>
        </field>
        <field>
            <id>death_home</id>
            <domain>string</domain>
            <name>Дом</name>
            <display/>
            <expression>dc.death_home</expression>
        </field>
        <field>
            <id>death_apartment</id>
            <domain>string</domain>
            <name>Квартира</name>
            <display/>
            <expression>dc.death_apartment</expression>
        </field>
        <field>
            <id>death_citiship.id</id>
            <domain>integer</domain>
            <name>Местность смерти</name>
            <display/>
            <expression>dc.death_citizenship_type_id</expression>
            <filters>
                <filter type="eq" filter-field="death_citiship.id">
                    :expression = :death_citiship.id
                </filter>
            </filters>
        </field>
        
        <field>
            <id>death_place.id</id>
            <domain>integer</domain>
            <name>Смерть наступила</name>
            <display/>
            <expression>dc.death_place_id</expression>
            <filters>
                <filter type="eq" filter-field="death_place.id">
                    :expression = :death_place.id
                </filter>
            </filters>
        </field>

        <field>
            <id>child_age_months</id>
            <domain>integer</domain>
            <name>Возраст ребенка - число месяцев</name>
            <display/>
            <expression>dc.child_age_months</expression>
            <filters>
                <filter type="eq" filter-field="child_age_months">
                    :expression = :child_age_months
                </filter>
            </filters>
        </field>
        <field>
            <id>child_age_days</id>
            <domain>integer</domain>
            <name>Возраст ребенка - число дней</name>
            <display/>
            <expression>dc.child_age_days</expression>
            <filters>
                <filter type="eq" filter-field="child_age_days">
                    :expression = :child_age_days
                </filter>
            </filters>
        </field>
        <field>
            <id>birth_place</id>
            <domain>string</domain>
            <name>Место рождения</name>
            <display/>
            <expression>dc.birth_place</expression>
        </field>

        <field>
            <id>maturity.id</id>
            <domain>integer</domain>
            <name>Физиологическая зрелость ребенка</name>
            <display/>
            <expression>dc.pre_post_maturity_id</expression>
            <filters>
                <filter type="eq" filter-field="maturity.id">
                    :expression = :maturity.id
                </filter>
            </filters>
        </field>
        <field>
            <id>maturity.name</id>
            <domain>string</domain>
            <name>Физиологическая зрелость ребенка</name>
            <display/>
            <expression>ppm.name</expression>
        </field>

        <field>
            <id>weight</id>
            <domain>integer</domain>
            <name>Масса тела ребенка при рождении</name>
            <display/>
            <expression>dc.birth_weight</expression>
            <filters>
                <filter type="eq" filter-field="weight">
                    :expression = :weight
                </filter>
                <filter type="more" filter-field="w.begin">
                    :expression >= :w.begin
                </filter>
                <filter type="less" filter-field="w.end">
                    :w.end >= :expression
                </filter>
            </filters>
        </field>
        <field>
            <id>w.begin</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>w.end</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>general_order</id>
            <domain>integer</domain>
            <name>Которым по счету ребенок был рожден у матери</name>
            <display/>
            <expression>dc.general_order</expression>
            <filters>
                <filter type="eq" filter-field="general_order">
                    :expression = :general_order
                </filter>
            </filters>
        </field>

        <field>
            <id>mather.id</id>
            <domain>integer</domain>
            <name>Мать</name>
            <display/>
            <expression>mpip.id</expression>
            <filters>
                <filter type="eq" filter-field="mather.id">
                    :expression = :mather.id
                </filter>
            </filters>
        </field>
        <field>
            <id>mather_fio</id>
            <domain>string</domain>
            <name>ФИО матери</name>
            <display/>
            <expression>dc.mather_fio</expression>
            <filters>
                <filter type="eq" filter-field="mather_fio">
                    :expression like '%'||:mather_fio||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>mather_bdt</id>
            <domain>date</domain>
            <name>Дата рождения</name>
            <display/>
            <expression>dc.mather_bdt</expression>
            <filters>
                <filter type="eq" filter-field="mather_bdt">
                    :exprerssion = :mather_bdt
                </filter>
            </filters>
        </field>
        <field>
            <id>mather_age</id>
            <domain>integer</domain>
            <name>Возраст матери</name>
            <display/>
            <expression>case when get_age(cast (mpip.birth_dt as date),cast(now() as date)) = -1
                            then
                                case when dc.mather_bdt is not null
                                        then get_age(cast(dc.mather_bdt as date),cast(now() as date))
                                        else null
                                end
                            else get_age(cast (mpip.birth_dt as date),cast(now() as date))
                        end
            </expression>
            <filters>
                <filter type="eq" filter-field="mather_age">
                    :expression = :mather_age
                </filter>
                <filter type="more" filter-field="mage.begin">
                    :expression >= :mage.begin
                </filter>
                <filter type="less" filter-field="mage.end">
                    :mage.end >= :expression
                </filter>
            </filters>
        </field>
        <field>
            <id>mage.begin</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>mage.end</id>
            <domain>integer</domain>
        </field>

        <field>
            <id>marital_status.id</id>
            <domain>integer</domain>
            <name>Семейное положение матери</name>
            <display/>
            <expression>dc.marital_status_id</expression>
            <filters>
                <filter type="eq" filter-field="marital_status.id">
                    :expression = :marital_status.id
                </filter>
            </filters>
        </field>
        <field>
            <id>education.id</id>
            <domain>integer</domain>
            <name>Образование</name>
            <display/>
            <expression>dc.education_id</expression>
            <filters>
                <filter type="eq" filter-field="education.id">
                    :expression = :education.id
                </filter>
            </filters>
        </field>
        <field>
            <id>busyness.id</id>
            <domain>integer</domain>
            <name>Занятость</name>
            <display/>
            <expression>dc.busyness_id</expression>
            <filters>
                <filter type="eq" filter-field="busyness.id">
                    :expression = :busyness.id
                </filter>
            </filters>
        </field>
        
        <field>
            <id>death_kind.id</id>
            <domain>integer</domain>
            <name>Род смерти</name>
            <display/>
            <expression>dc.death_kind_id</expression>
            <filters>
                <filter type="eq" filter-field="death_kind.id">
                    :expression = :death_kind.id
                </filter>
            </filters>
        </field>

        <field>
            <id>trauma_dt</id>
            <domain>date</domain>
            <name>Дата и время травмы(отравления)</name>
            <display/>
            <expression>dc.trauma_dt</expression>
            <filters>
                <filter type="eq" filter-field="trauma_dt">
                    :expression = :trauma_dt
                </filter>
                <filter type="more" filter-field="trauma_date.begin">
                    :expression >= :trauma_date.begin
                </filter>
                <filter type="less" filter-field="trauma_date.end">
                    <![CDATA[
                        :expression <= :trauma_date.end
                    ]]>
                </filter>
            </filters>
        </field>
        <field>
            <id>trauma_date.begin</id>
            <domain>date</domain>
        </field>
        <field>
            <id>trauma_date.end</id>
            <domain>date</domain>
        </field>
        <field>
            <id>conditions</id>
            <domain>string</domain>
            <name>Место и обстоятельства травмы(отравления)</name>
            <display/>
            <expression>dc.conditions</expression>
        </field>

        <field>
            <id>establish_cause.id</id>
            <domain>integer</domain>
            <name>Установил причины смерти</name>
            <display/>
            <expression>dc.establish_cause_id</expression>
            <filters>
                <filter type="eq" filter-field="establish_cause.id">
                    :expression = :establish_cause.id
                </filter>
            </filters>
        </field>

        <field>
            <id>definition_grounds.id</id>
            <domain>integer</domain>
            <name>Основание определения патологических процессов</name>
            <display/>
            <expression>dc.definition_grounds_id</expression>
            <filters>
                <filter type="eq" filter-field="definition_grounds.id">
                    :expression = :definition_grounds.id
                </filter>
            </filters>
        </field>

        <field>
            <id>dtp_death.id</id>
            <domain>integer</domain>
            <name>Интервал времени смерти в результате ДТП</name>
            <display/>
            <expression>dc.dtp_death_id</expression>
        </field>
        <field>
            <id>dtp_deaths*.id</id>
            <domain>integer[]</domain>
            <filters>
                <filter type="eq" filter-field="dtp_deaths*.id">
                    dc.dtp_death_id in (:dtp_deaths*.id)
                </filter>
            </filters>
        </field>

        <field>
            <id>woman_death_time.id</id>
            <domain>integer</domain>
            <name>Интервал смерти женщины по отношению к беремености/аборту</name>
            <display/>
            <expression>dc.woman_death_time_id</expression>
            <filters>
                <filter type="eq" filter-field="woman_death_time.id">
                    :expression = :woman_death_time.id
                </filter>
            </filters>
        </field>

        <field>
            <id>receptionist.id</id>
            <domain>integer</domain>
            <name>Заполнил  свидетельство</name>
            <display/>
            <expression>dc.receptionist_id</expression>
            <filters>
                <filter type="eq" filter-field="receptionist.id">
                    :expression = :receptionist.id
                </filter>
            </filters>
        </field>
        <field>
            <id>position</id>
            <domain>string</domain>
            <name>должность заполнившего свидетельство</name>
            <display/>
            <expression>dc.position</expression>
        </field>
        <field>
            <id>reseptionist</id>
            <domain>string</domain>
            <name>ФИО заполнившего  свидетельство</name>
            <display/>
            <expression>dc.reseptionist</expression>
        </field>

        <field>
            <id>recipient.id</id>
            <domain>integer</domain>
            <name>Получатель</name>
            <display/>
            <expression>dc.recipient_id</expression>
        </field>
        <field>
            <id>recipient_fio</id>
            <domain>string</domain>
            <name>ФИО получателя</name>
            <display/>
            <expression>dc.recipient_fio</expression>
        </field>
        <field>
            <id>recipient_doc</id>
            <domain>string</domain>
            <name>документ удостоверяющий личность получателя, серия, номер, кем выдан</name>
            <display/>
            <expression>dc.recipient_doc</expression>
        </field>

        <field>
            <id>controller.id</id>
            <domain>integer</domain>
            <name>Проверил свидетельство</name>
            <display/>
            <expression>dc.controller_id</expression>
        </field>
        <field>
            <id>controller_fio</id>
            <domain>string</domain>
            <name>ФИО проверевшего</name>
            <display/>
            <expression>dc.controller_fio</expression>
        </field>

        <field>
            <id>parent.id</id>
            <domain>integer</domain>
            <name>Идентификатор свидетельства на основе которого выдается текущее</name>
            <display/>
            <expression>dc.parent_death_certificate_id</expression>
            <filters>
                <filter type="eq" filter-field="parent.id">
                    (:id is not null or :expression = :parent.id)
                </filter>
            </filters>
        </field>
        <field>
            <id>parent_code</id>
            <domain>string</domain>
            <display/>
            <expression>
                case when (dc.certificate_kind_id in (3,4))
                    then
                        case when (dc.is_duplicate is null or dc.is_duplicate is false)
                            then pardc.code
                            else (select code from certificates.death_certificate
                                    where id = pardc.parent_death_certificate_id)
                        end
                    else null
                end
            </expression>
        </field>
        <field>
            <id>parent_number</id>
            <domain>string</domain>
            <display/>
            <expression>
                case when (dc.certificate_kind_id in (3,4))
                    then
                        case when (dc.is_duplicate is null or dc.is_duplicate is false)
                            then pardc.number
                            else (select number from certificates.death_certificate
                                    where id = pardc.parent_death_certificate_id)
                        end
                    else null
                end
            </expression>
        </field>
        <field>
            <id>parent_dt</id>
            <domain>date</domain>
            <display/>
            <expression>
                case when (dc.certificate_kind_id in (3,4))
                    then
                        case when (dc.is_duplicate is null or dc.is_duplicate is false)
                            then pardc.issue_dt
                            else (select issue_dt from certificates.death_certificate
                                    where id = pardc.parent_death_certificate_id)
                        end
                    else null
                end
            </expression>
        </field>

        <!--доп поля для фильтраций и "красоты"-->
        <field>
            <id>color</id>
            <domain>string</domain>
            <display/>
            <expression>
                case
                     <!--Если на этот выдан дубликат - серый-->
                     when exists (select * from certificates.death_certificate
                                    where is_duplicate is true and parent_death_certificate_id = dc.id)
                        then 'muted'
                     <!--Если является дубликатом - синий-->
                     when dc.is_duplicate is true
                        then 'text-info'
                     <!--Если испорчен бланк - красный-->
                     when dc.is_faulty is true
                        then 'text-error'
                     <!--Если на это выдан взамен - желтый-->
                     when exists (select * from certificates.death_certificate
                                    where certificate_kind_id in (3,4) and parent_death_certificate_id = dc.id)
                        then 'text-warning'
                     <!--Если является взамен - зеленый-->
                     when dc.certificate_kind_id in (3,4)
                        then 'text-success'
                     else 'text'
                end
            </expression>
        </field>

        <field>
            <id>is_parent</id>
            <domain>boolean</domain>
            <display/>
            <expression>
                case when exists (select * from certificates.death_certificate
                                    where parent_death_certificate_id = dc.id)
                        then true
                        else false
                end
            </expression>
            <filters>
                <filter type="eq" filter-field="is_parent">
                    :expression = :is_parent
                </filter>
            </filters>
        </field>

        <field>
            <id>to_read</id>
            <domain>boolean</domain>
            <display>(select :to_read)</display>
        </field>

        <field>
            <id>is_enabling</id>
            <domain>boolean</domain>
            <display>(select :is_enabling)</display>
        </field>

        <field>
            <id>parent_instead.id</id>
            <domain>integer</domain>
            <display>(select :parent_instead)</display>
        </field>

        <field>
            <id>$action</id>
            <domain>string</domain>
            <display>:$action</display>
        </field>

    </fields>
</query>