<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns:sp="http://n2oapp.net/framework/config/schema/action-stored-procedure-1.0">
    <!--<id>death_certificate</id>-->
    <name>Свидетельство о смерти</name>
    <actions>
        <action id="create">
            <invocation>
                <sql:sql>
                    INSERT INTO certificates.death_certificate(
                    code,number,issue_dt,certificate_kind_id,is_duplicate,is_relatives_words,is_faulty,org_id,org_name
                    ,indiv_id,fio,gender_id,birth_dt,death_dt,address_id,region,district,city,street,home,apartment,citizenship_type_id
                    ,death_address_id,death_region,death_district,death_city,death_street,death_home,death_apartment,death_citizenship_type_id
                    ,death_place_id,child_age_months,child_age_days,birth_place,pre_post_maturity_id,birth_weight,general_order
                    ,mather_id,mather_fio,mather_bdt,mather_age,marital_status_id,education_id,busyness_id
                    ,death_kind_id,trauma_dt,conditions,establish_cause_id,definition_grounds_id,dtp_death_id,woman_death_time_id
                    ,receptionist_id,"position",reseptionist
                    ,recipient_id,recipient_fio,recipient_doc
                    ,parent_death_certificate_id
                    )
                    VALUES (
                    :code,
                    :number,
                    :issue_dt,
                    :certificate_kind_id,
                    :is_duplicate,
                    :is_relatives_words,
                    :is_faulty,
                    :org_id,
                    :org_name,
                    :indiv_id,
                    :fio,
                    :gender_id,
                    :birth_dt,
                    :death_dt,
                    :address_id,
                    :region,
                    :district,
                    :city,
                    :street,
                    :home,
                    :apartment,
                    :citizenship_type_id,
                    :death_address_id,
                    :death_region,
                    :death_district,
                    :death_city,
                    :death_street,
                    :death_home,
                    :death_apartment,
                    :death_citizenship_type_id,
                    :death_place_id,
                    :child_age_months,
                    :child_age_days,
                    :birth_place,
                    :pre_post_maturity_id,
                    :birth_weight,
                    :general_order,
                    :mather_id,
                    :f||' '||:i||' '||:o,
                    :mather_bdt,
                    :mather_age,
                    :marital_status_id,
                    :education_id,
                    :busyness_id,
                    :death_kind_id,
                    :trauma_dt,
                    :conditions,
                    :establish_cause_id,
                    :definition_grounds_id,
                    :dtp_death_id,
                    :woman_death_time_id,
                    :receptionist_id,
                    :position,
                    :reseptionist,
                    :recipient_id,
                    :recipient_fio,
                    :recipient_doc,
                    case when :certificate_kind_id in (3,4)
                        then
                            case when (:is_duplicate is null or :is_duplicate is false)
                                then :parent_instead
                                else coalesce (:parent_death_certificate_id,:parent_instead)
                            end
                        else :parent_death_certificate_id
                    end::int
                    );
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="number" mapping="['number']" domain="string"/>
                <param name="issue_date" mapping="['issue_dt']" domain="date"/>
                <param name="kind.id" mapping="['certificate_kind_id']" domain="integer"/>
                <param name="is_duplicate" mapping="['is_duplicate']" domain="boolean"/>
                <param name="is_relativeswords" mapping="['is_relatives_words']" domain="boolean"/>
                <param name="is_faulty" mapping="['is_faulty']" domain="boolean"/>
                <param name="org.id" mapping="['org_id']" domain="integer"/>
                <param name="org_name" mapping="['org_name']" domain="string"/>
                <param name="indiv.id" mapping="['indiv_id']" domain="integer"/>
                <param name="fio" mapping="['fio']" domain="string"/>
                <param name="gender.id" mapping="['gender_id']" domain="integer"/>
                <param name="birth_dt" mapping="['birth_dt']" domain="date"/>
                <param name="death_dt" mapping="['death_dt']" domain="date"/>
                <param name="addr.id" mapping="['address_id']" domain="integer"/>
                <param name="region" mapping="['region']" domain="string"/>
                <param name="district" mapping="['district']" domain="string"/>
                <param name="city" mapping="['city']" domain="string"/>
                <param name="street" mapping="['street']" domain="string"/>
                <param name="home" mapping="['home']" domain="string"/>
                <param name="apartment" mapping="['apartment']" domain="string"/>
                <param name="citiship.id" mapping="['citizenship_type_id']" domain="integer"/>
                <param name="death_addr.id" mapping="['death_address_id']" domain="integer"/>
                <param name="death_region" mapping="['death_region']" domain="string"/>
                <param name="death_district" mapping="['death_district']" domain="string"/>
                <param name="death_city" mapping="['death_city']" domain="string"/>
                <param name="death_street" mapping="['death_street']" domain="string"/>
                <param name="death_home" mapping="['death_home']" domain="string"/>
                <param name="death_apartment" mapping="['death_apartment']" domain="string"/>
                <param name="death_citiship.id" mapping="['death_citizenship_type_id']" domain="integer"/>
                <param name="death_place.id" mapping="['death_place_id']" domain="integer"/>
                <param name="child_age_months" mapping="['child_age_months']" domain="integer"/>
                <param name="child_age_days" mapping="['child_age_days']" domain="integer"/>
                <param name="birth_place" mapping="['birth_place']" domain="string"/>
                <param name="maturity.id" mapping="['pre_post_maturity_id']" domain="integer"/>
                <param name="weight" mapping="['birth_weight']" domain="integer"/>
                <param name="general_order" mapping="['general_order']" domain="integer"/>
                <param name="mather.id" mapping="['mather_id']" domain="integer"/>
                <param name="matherF" mapping="['f']" domain="string"/>
                <param name="matherI" mapping="['i']" domain="string"/>
                <param name="matherO" mapping="['o']" domain="string"/>
                <param name="mather_bdt" mapping="['mather_bdt']" domain="date"/>
                <param name="mathers_age" mapping="['mather_age']" domain="integer"/>
                <param name="marital_status.id" mapping="['marital_status_id']" domain="integer"/>
                <param name="education.id" mapping="['education_id']" domain="integer"/>
                <param name="busyness.id" mapping="['busyness_id']" domain="integer"/>
                <param name="death_kind.id" mapping="['death_kind_id']" domain="integer"/>
                <param name="trauma_dt" mapping="['trauma_dt']" domain="date"/>
                <param name="conditions" mapping="['conditions']" domain="string"/>
                <param name="establish_cause.id" mapping="['establish_cause_id']" domain="integer"/>
                <param name="definition_grounds.id" mapping="['definition_grounds_id']" domain="integer"/>
                <param name="dtp_death.id" mapping="['dtp_death_id']" domain="integer"/>
                <param name="woman_death_time.id" mapping="['woman_death_time_id']" domain="integer"/>
                <param name="receptionist.id" mapping="['receptionist_id']" domain="integer"/>
                <param name="position" mapping="['position']" domain="string"/>
                <param name="reseptionist" mapping="['reseptionist']" domain="string"/>
                <param name="recipient.id" mapping="['recipient_id']" domain="integer"/>
                <param name="recipient_fio" mapping="['recipient_fio']" domain="string"/>
                <param name="recipient_doc" mapping="['recipient_doc']" domain="string"/>
                <param name="parent.id" mapping="['parent_death_certificate_id']" domain="integer"/>
                <param name="parent_instead.id" mapping="['parent_instead']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]" domain="integer"/>
            </out-parameters>
            <success-text>
                Свидетельство сохранено в системе успешно
            </success-text>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update certificates.death_certificate set
                        <!--code = :code,-->
                        <!--number = :number,-->
                        issue_dt = :issue_dt,
                        certificate_kind_id = :certificate_kind_id,
                        is_duplicate = :is_duplicate,
                        is_relatives_words = :is_relatives_words,
                        is_faulty = :is_faulty,
                        <!--org_id = :org_id,-->
                        <!--org_name = :org_name,-->
                        indiv_id = :indiv_id,
                        fio = :fio,
                        gender_id = :gender_id,
                        birth_dt = :birth_dt,
                        death_dt = :death_dt,
                        address_id = :address_id,
                        region = :region,
                        district = :district,
                        city = :city,
                        street = :street,
                        home = :home,
                        apartment = :apartment,
                        citizenship_type_id = :citizenship_type_id,
                        death_address_id = :death_address_id,
                        death_region = :death_region,
                        death_district = :death_district,
                        death_city = :death_city,
                        death_street = :death_street,
                        death_home = :death_home,
                        death_apartment = :death_apartment,
                        death_citizenship_type_id = :death_citizenship_type_id,
                        death_place_id = :death_place_id,
                        child_age_months = :child_age_months,
                        child_age_days = :child_age_days,
                        birth_place = :birth_place,
                        pre_post_maturity_id = :pre_post_maturity_id,
                        birth_weight = :birth_weight,
                        general_order = :general_order,
                        mather_id = :mather_id,
                        mather_fio = :mather_fio,
                        mather_bdt = :mather_bdt,
                        mather_age = :mather_age,
                        marital_status_id = :marital_status_id,
                        education_id = :education_id,
                        busyness_id = :busyness_id,
                        death_kind_id = :death_kind_id,
                        trauma_dt = :trauma_dt,
                        conditions = :conditions,
                        establish_cause_id = :establish_cause_id,
                        definition_grounds_id = :definition_grounds_id,
                        dtp_death_id = :dtp_death_id,
                        woman_death_time_id = :woman_death_time_id,
                        <!--receptionist_id = :receptionist_id,-->
                        <!--"position" = :position,-->
                        <!--reseptionist = :reseptionist,-->
                        recipient_id = :recipient_id,
                        recipient_fio = :recipient_fio,
                        recipient_doc = :recipient_doc,
                        parent_death_certificate_id =
                    <!--:parent_death_certificate_id-->
                            case when :certificate_kind_id in (3,4)
                                then
                                    case when (:is_duplicate is null or :is_duplicate is false)
                                        then :parent_instead
                                        else coalesce (:parent_death_certificate_id,:parent_instead)
                                    end
                                else :parent_death_certificate_id
                            end::int
                    where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <!--<param name="code" mapping="['code']" domain="string"/>-->
                <!--<param name="number" mapping="['number']" domain="string"/>-->
                <param name="issue_date" mapping="['issue_dt']" domain="date"/>
                <param name="kind.id" mapping="['certificate_kind_id']" domain="integer"/>
                <param name="is_duplicate" mapping="['duplicate']" domain="boolean"/>
                <param name="is_relativeswords" mapping="['is_relatives_words']" domain="boolean"/>
                <param name="is_faulty" mapping="['is_faulty']" domain="boolean"/>
                <!--<param name="org.id" mapping="['org_id']" domain="integer"/>-->
                <!--<param name="org_name" mapping="['org_name']" domain="string"/>-->
                <param name="indiv.id" mapping="['indiv_id']" domain="integer"/>
                <param name="fio" mapping="['fio']" domain="string"/>
                <param name="gender.id" mapping="['gender_id']" domain="integer"/>
                <param name="birth_dt" mapping="['birth_dt']" domain="date"/>
                <param name="death_dt" mapping="['death_dt']" domain="date"/>
                <param name="addr.id" mapping="['address_id']" domain="integer"/>
                <param name="region" mapping="['region']" domain="string"/>
                <param name="district" mapping="['district']" domain="string"/>
                <param name="city" mapping="['city']" domain="string"/>
                <param name="street" mapping="['street']" domain="string"/>
                <param name="home" mapping="['home']" domain="string"/>
                <param name="apartment" mapping="['apartment']" domain="string"/>
                <param name="citiship.id" mapping="['citizenship_type_id']" domain="integer"/>
                <param name="death_addr.id" mapping="['death_address_id']" domain="integer"/>
                <param name="death_region" mapping="['death_region']" domain="string"/>
                <param name="death_district" mapping="['death_district']" domain="string"/>
                <param name="death_city" mapping="['death_city']" domain="string"/>
                <param name="death_street" mapping="['death_street']" domain="string"/>
                <param name="death_home" mapping="['death_home']" domain="string"/>
                <param name="death_apartment" mapping="['death_apartment']" domain="string"/>
                <param name="death_citiship.id" mapping="['death_citizenship_type_id']" domain="integer"/>
                <param name="death_place.id" mapping="['death_place_id']" domain="integer"/>
                <param name="child_age_months" mapping="['child_age_months']" domain="integer"/>
                <param name="child_age_days" mapping="['child_age_days']" domain="integer"/>
                <param name="birth_place" mapping="['birth_place']" domain="string"/>
                <param name="maturity.id" mapping="['pre_post_maturity_id']" domain="integer"/>
                <param name="weight" mapping="['birth_weight']" domain="integer"/>
                <param name="general_order" mapping="['general_order']" domain="integer"/>
                <param name="mather.id" mapping="['mather_id']" domain="integer"/>
                <param name="matherF" mapping="['f']" domain="string"/>
                <param name="matherI" mapping="['i']" domain="string"/>
                <param name="matherO" mapping="['o']" domain="string"/>
                <param name="mather_bdt" mapping="['mather_bdt']" domain="date"/>
                <param name="mathers_age" mapping="['mather_age']" domain="integer"/>
                <param name="marital_status.id" mapping="['marital_status_id']" domain="integer"/>
                <param name="education.id" mapping="['education_id']" domain="integer"/>
                <param name="busyness.id" mapping="['busyness_id']" domain="integer"/>
                <param name="death_kind.id" mapping="['death_kind_id']" domain="integer"/>
                <param name="trauma_dt" mapping="['trauma_dt']" domain="date"/>
                <param name="conditions" mapping="['conditions']" domain="string"/>
                <param name="establish_cause.id" mapping="['establish_cause_id']" domain="integer"/>
                <param name="definition_grounds.id" mapping="['definition_grounds_id']" domain="integer"/>
                <param name="dtp_death.id" mapping="['dtp_death_id']" domain="integer"/>
                <param name="woman_death_time.id" mapping="['woman_death_time_id']" domain="integer"/>
                <!--<param name="receptionist.id" mapping="['receptionist_id']" domain="integer"/>-->
                <!--<param name="position" mapping="['position']" domain="string"/>-->
                <!--<param name="reseptionist" mapping="['reseptionist']" domain="string"/>-->
                <param name="recipient.id" mapping="['recipient_id']" domain="integer"/>
                <param name="recipient_fio" mapping="['recipient_fio']" domain="string"/>
                <param name="recipient_doc" mapping="['recipient_doc']" domain="string"/>
                <param name="parent.id" mapping="['parent_death_certificate_id']" domain="integer"/>
                <param name="parent_instead.id" mapping="['parent_instead']" domain="integer"/>
            </in-parameters>
        </action>
        <action id="copy">
            <invocation>
                <sql:sql>
                    INSERT INTO certificates.death_certificate(
                    code,number,issue_dt,certificate_kind_id,is_duplicate,is_relatives_words,is_faulty,org_id,org_name
                    ,indiv_id,fio,gender_id,birth_dt,death_dt,address_id,region,district,city,street,home,apartment,citizenship_type_id
                    ,death_address_id,death_region,death_district,death_city,death_street,death_home,death_apartment,death_citizenship_type_id
                    ,death_place_id,child_age_months,child_age_days,birth_place,pre_post_maturity_id,birth_weight,general_order
                    ,mather_id,mather_fio,mather_bdt,mather_age,marital_status_id,education_id,busyness_id
                    ,death_kind_id,trauma_dt,conditions,establish_cause_id,definition_grounds_id,dtp_death_id,woman_death_time_id
                    ,receptionist_id,"position",reseptionist
                    ,recipient_id,recipient_fio,recipient_doc
                    ,parent_death_certificate_id
                    )
                    VALUES (
                    :code,
                    :number,
                    :issue_dt,
                    :certificate_kind_id,
                    :is_duplicate,
                    :is_relatives_words,
                    :is_faulty,
                    :org_id,
                    :org_name,
                    :indiv_id,
                    :fio,
                    :gender_id,
                    :birth_dt,
                    :death_dt,
                    :address_id,
                    :region,
                    :district,
                    :city,
                    :street,
                    :home,
                    :apartment,
                    :citizenship_type_id,
                    :death_address_id,
                    :death_region,
                    :death_district,
                    :death_city,
                    :death_street,
                    :death_home,
                    :death_apartment,
                    :death_citizenship_type_id,
                    :death_place_id,
                    :child_age_months,
                    :child_age_days,
                    :birth_place,
                    :pre_post_maturity_id,
                    :birth_weight,
                    :general_order,
                    :mather_id,
                    :f||' '||:i||' '||:o,
                    :mather_bdt,
                    :mather_age,
                    :marital_status_id,
                    :education_id,
                    :busyness_id,
                    :death_kind_id,
                    :trauma_dt,
                    :conditions,
                    :establish_cause_id,
                    :definition_grounds_id,
                    :dtp_death_id,
                    :woman_death_time_id,
                    :receptionist_id,
                    :position,
                    :reseptionist,
                    :recipient_id,
                    :recipient_fio,
                    :recipient_doc,
                    case when :certificate_kind_id in (3,4)
                        then
                            case when (:is_duplicate is null or :is_duplicate is false)
                                then :parent_instead
                                else coalesce (:parent_death_certificate_id,:parent_instead)
                            end
                        else :parent_death_certificate_id
                    end
                    );
                    select certificates.copy_death_reasons (
                    cast(currval('certificates.death_certificate_seq') as integer), false
                    ,case when :certificate_kind_id in (3,4)
                        then
                            case when (:is_duplicate is null or :is_duplicate is false)
                                then :parent_instead
                                else coalesce (:parent_death_certificate_id,:parent_instead)
                            end
                        else :parent_death_certificate_id
                     end);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="number" mapping="['number']" domain="string"/>
                <param name="issue_date" mapping="['issue_dt']" domain="date"/>
                <param name="kind.id" mapping="['certificate_kind_id']" domain="integer"/>
                <param name="is_duplicate" mapping="['is_duplicate']" domain="boolean"/>
                <param name="is_relativeswords" mapping="['is_relatives_words']" domain="boolean"/>
                <param name="is_faulty" mapping="['is_faulty']" domain="boolean"/>
                <param name="org.id" mapping="['org_id']" domain="integer"/>
                <param name="org_name" mapping="['org_name']" domain="string"/>
                <param name="indiv.id" mapping="['indiv_id']" domain="integer"/>
                <param name="fio" mapping="['fio']" domain="string"/>
                <param name="gender.id" mapping="['gender_id']" domain="integer"/>
                <param name="birth_dt" mapping="['birth_dt']" domain="date"/>
                <param name="death_dt" mapping="['death_dt']" domain="date"/>
                <param name="addr.id" mapping="['address_id']" domain="integer"/>
                <param name="region" mapping="['region']" domain="string"/>
                <param name="district" mapping="['district']" domain="string"/>
                <param name="city" mapping="['city']" domain="string"/>
                <param name="street" mapping="['street']" domain="string"/>
                <param name="home" mapping="['home']" domain="string"/>
                <param name="apartment" mapping="['apartment']" domain="string"/>
                <param name="citiship.id" mapping="['citizenship_type_id']" domain="integer"/>
                <param name="death_addr.id" mapping="['death_address_id']" domain="integer"/>
                <param name="death_region" mapping="['death_region']" domain="string"/>
                <param name="death_district" mapping="['death_district']" domain="string"/>
                <param name="death_city" mapping="['death_city']" domain="string"/>
                <param name="death_street" mapping="['death_street']" domain="string"/>
                <param name="death_home" mapping="['death_home']" domain="string"/>
                <param name="death_apartment" mapping="['death_apartment']" domain="string"/>
                <param name="death_citiship.id" mapping="['death_citizenship_type_id']" domain="integer"/>
                <param name="death_place.id" mapping="['death_place_id']" domain="integer"/>
                <param name="child_age_months" mapping="['child_age_months']" domain="integer"/>
                <param name="child_age_days" mapping="['child_age_days']" domain="integer"/>
                <param name="birth_place" mapping="['birth_place']" domain="string"/>
                <param name="maturity.id" mapping="['pre_post_maturity_id']" domain="integer"/>
                <param name="weight" mapping="['birth_weight']" domain="integer"/>
                <param name="general_order" mapping="['general_order']" domain="integer"/>
                <param name="mather.id" mapping="['mather_id']" domain="integer"/>
                <param name="matherF" mapping="['f']" domain="string"/>
                <param name="matherI" mapping="['i']" domain="string"/>
                <param name="matherO" mapping="['o']" domain="string"/>
                <param name="mather_bdt" mapping="['mather_bdt']" domain="date"/>
                <param name="mathers_age" mapping="['mather_age']" domain="integer"/>
                <param name="marital_status.id" mapping="['marital_status_id']" domain="integer"/>
                <param name="education.id" mapping="['education_id']" domain="integer"/>
                <param name="busyness.id" mapping="['busyness_id']" domain="integer"/>
                <param name="death_kind.id" mapping="['death_kind_id']" domain="integer"/>
                <param name="trauma_dt" mapping="['trauma_dt']" domain="date"/>
                <param name="conditions" mapping="['conditions']" domain="string"/>
                <param name="establish_cause.id" mapping="['establish_cause_id']" domain="integer"/>
                <param name="definition_grounds.id" mapping="['definition_grounds_id']" domain="integer"/>
                <param name="dtp_death.id" mapping="['dtp_death_id']" domain="integer"/>
                <param name="woman_death_time.id" mapping="['woman_death_time_id']" domain="integer"/>
                <param name="receptionist.id" mapping="['receptionist_id']" domain="integer"/>
                <param name="position" mapping="['position']" domain="string"/>
                <param name="reseptionist" mapping="['reseptionist']" domain="string"/>
                <param name="recipient.id" mapping="['recipient_id']" domain="integer"/>
                <param name="recipient_fio" mapping="['recipient_fio']" domain="string"/>
                <param name="recipient_doc" mapping="['recipient_doc']" domain="string"/>
                <param name="parent.id" mapping="['parent_death_certificate_id']" domain="integer"/>
                <param name="parent_instead.id" mapping="['parent_instead']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]" domain="integer"/>
            </out-parameters>
            <success-text>
                Свидетельство сохранено в системе успешно
            </success-text>
        </action>
    </actions>
    <validations>
        <!--<condition id="check_filling" level="error">-->
            <!--<expression>-->
                <!--((typeof addr_data != 'undefined') &amp;&amp; (source.addr_data != null) &amp;&amp; (source.addr_data.id != null)) ||((typeof source.addr_descr != 'undefined') &amp;&amp; (source.addr_descr != null)) -->
            <!--</expression>-->
            <!--<message></message>-->
        <!--</condition>-->

        <!--<condition id="checkAddr" level="error">-->
            <!--<expression>((typeof addr_data != 'undefined') &amp;&amp; (addr_data != null) &amp;&amp; (addr_data.id != null)) ||((typeof addr_descr != 'undefined') &amp;&amp; (addr_descr != null)) </expression>-->
            <!--<message>Одно из полей 'Адрес вызова'/'Дополнительные ориентиры' обязательно должно быть заполнено</message>-->
        <!--</condition>-->

        <constraint id="dCertif_unique" level="error">
            <message>Внимание! Серия и номер свидетельства совпадают с ранее выданным!</message>
            <invocation>
                <sql:sql>
                    select count(*)
                    from certificates.death_certificate dc
                    where trim(dc.code) = trim(:code) and trim(dc.number) = trim(:number)
                    and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="number" mapping="['number']" domain="string"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
    </validations>
</object>