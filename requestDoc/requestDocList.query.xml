<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <object-id>requestDoc</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from inventory.request_doc doc
                left outer join inventory.store s on s.id=doc.rec_store_id
                left outer join inventory.funding_source fs on fs.id=doc.fund_source_id
                left outer join inventory.commodity_group cg on cg.id=doc.com_group_id
                left outer join inventory.trust_doc tdoc on tdoc.id=doc.trust_doc_id
                left outer join inventory.exp_invoice exp on exp.request_doc_id=doc.id
                left outer join inventory.document exp_doc on exp_doc.id=exp.id
                left outer join inventory.doc_status st on st.id=doc.status_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(doc)
                from inventory.request_doc doc
                left outer join inventory.store s on s.id=doc.rec_store_id
                left outer join inventory.funding_source fs on fs.id=doc.fund_source_id
                left outer join inventory.commodity_group cg on cg.id=doc.com_group_id
                left outer join inventory.trust_doc tdoc on tdoc.id=doc.trust_doc_id
                left outer join inventory.exp_invoice exp on exp.request_doc_id=doc.id
                left outer join inventory.document exp_doc on exp_doc.id=exp.id
                left outer join inventory.doc_status st on st.id=doc.status_id
                where :where
            </n2o:count-query>
            <n2o:alias>doc</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>docNumber</id>
            <name>Номер</name>
            <domain>string</domain>
            <expression>doc.number</expression>
            <search>(:expression like '%'||'-'||:docNumber or :expression=:docNumber)</search>
        </field>
        <field>
            <id>docDate</id>
            <domain>date</domain>
            <name>Дата документа</name>
            <expression>doc.date</expression>
            <search type="between">
                <![CDATA[(:docDate.begin::date is null or doc.date >= :docDate.begin) and
                        (:docDate.end::date is null or doc.date <= :docDate.end) ]]></search>
        </field>
        <field>
            <id>docDateString</id>
            <domain>string</domain>
            <expression>to_char(doc.date, 'DD.MM.YYYY')</expression>
        </field>
        <field>
            <id>docDate.end</id>
            <domain>date</domain>
            <search unavailable="true"/>
            <display unavailable="true"/>
        </field>
        <field>
            <id>docDate.begin</id>
            <domain>date</domain>
            <search unavailable="true"/>
            <display unavailable="true"/>
        </field>
        <field>
            <id>recStore.id</id>
            <domain>integer</domain>
            <expression>s.id</expression>
            <search>:expression= :recStore.id</search>
        </field>
        <field>
            <id>recStore.name</id>
            <domain>string</domain>
            <name>Получатель</name>
            <expression>s.name</expression>
        </field>
        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <expression>s.org_id</expression>
            <search value="#{org.id?}">(:expression = :org.id or :org.id is null)</search>
        </field>
        <field>
            <id>fundSource.id</id>
            <domain>integer</domain>
            <expression>fs.id</expression>
            <search>:expression = :fundSource.id</search>
        </field>
        <field>
            <id>fundSource.name</id>
            <domain>string</domain>
            <name>Финансирование</name>
            <expression>fs.name</expression>
        </field>
        <field>
            <id>comGroup.id</id>
            <domain>integer</domain>
            <expression>cg.id</expression>
            <search>:expression = :comGroup.id</search>
        </field>
        <field>
            <id>comGroup.name</id>
            <domain>string</domain>
            <name>Тов. группа</name>
            <expression>cg.name</expression>
        </field>
        <field>
            <id>trustDoc.number</id>
            <domain>string</domain>
            <name>Доверенность</name>
            <expression>tdoc.number</expression>
        </field>
        <field>
            <id>isExecuted</id>
            <domain>boolean</domain>
            <name>Статус</name>
            <expression>doc.status_id=2</expression>
        </field>
        <field>
            <id>status.name</id>
            <domain>string</domain>
            <name>Статус</name>
            <expression>st.name</expression>
        </field>
        <field>
            <id>status.id</id>
            <domain>integer</domain>
            <expression>doc.status_id</expression>
            <search>:expression = :status.id</search>
        </field>
        <field>
            <id>expInvoice.number</id>
            <domain>string</domain>
            <name>Расх.накладная</name>
            <expression>exp_doc.int_doc_number</expression>
        </field>
        <field>
            <id>expInvoiceDate</id>
            <domain>date</domain>
            <name>Дата отработки</name>
            <expression>exp_doc.int_doc_dt</expression>
            <search type="between">
                <![CDATA[(:expInvoiceDate.begin::date is null or exp_doc.int_doc_dt >= :expInvoiceDate.begin) and
                        (:expInvoiceDate.end::date is null or exp_doc.int_doc_dt <= :expInvoiceDate.end) ]]></search>
        </field>
        <field>
            <id>expInvoiceDate.end</id>
            <domain>date</domain>
            <search unavailable="true"/>
            <display unavailable="true"/>
        </field>
        <field>
            <id>expInvoiceDate.begin</id>
            <domain>date</domain>
            <search unavailable="true"/>
            <display unavailable="true"/>
        </field>
        <field>
            <id>holdModif*.id</id>
            <domain>integer[]</domain>
            <search>exists(select 1 from inventory.request_spec spec where spec.request_doc_id=doc.id and spec.modif_id in (:holdModif*.id))</search>
            <display unavailable="true"/>
        </field>
        <field>
            <id>countOfSpec</id>
            <domain>integer</domain>
            <expression>(select count(spec) from inventory.request_spec spec where request_doc_id = doc.id)</expression>
        </field>
        <field>
            <id>expSpecDocExists</id>
            <domain>boolean</domain>
            <expression>exists (select 1 from inventory.exp_invoice inv where inv.request_doc_id=doc.id)</expression>
        </field>
        <field>
            <id>executedColor</id>
            <domain>string</domain>
            <expression>case when doc.status_id=1 then 'success'
                        else
                             case when doc.is_satisfied!=true and exists (select 1 from inventory.exp_invoice inv where inv.request_doc_id=doc.id) then 'warning' end
                        end
            </expression>
        </field>
        <field>
            <id>requestDoc.id</id>
            <domain>integer</domain>
            <expression>doc.id</expression>
        </field>
        <field>
            <id>user.id</id>
            <domain>integer</domain>
            <display unavailable="true" value="#{user.id}"/>
        </field>
        <field>
            <id>sendStore.id</id>
            <domain>integer</domain>
            <expression>doc.send_store_id</expression>
        </field>
        <field>
            <id>sendStore.name</id>
            <domain>string</domain>
            <expression>
                (select name from inventory.store send_s where send_s.id=doc.send_store_id)
            </expression>
        </field>
    </fields>
</query>