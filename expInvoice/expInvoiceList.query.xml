<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">

    <object-id>expInvoice</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query><![CDATA[
                with expInvoice as( select ei.id docId, doc.org_id orgId, doc.int_doc_number docNumber,doc.int_doc_dt docDate,
                req.id requestDocId, req.number requestNumber, req.date requestDate, doc.doc_status_id docStatus, doc.execute_dt executeDate,
                ei.doc_status_arr_id arrivalStatus,ei.exec_arr_dt arrStatusDate, send.id sendStoreId, send.name sendStoreName,
                arr_opr.name arrOprName, ei.rec_store_id recStoreId, rec.name recStoreName,
                cg.id comGroupId, cg.name comGroupName, fs.id fundSourceId, fs.name fundSourceName,ei.amount_fact amountFact,
                exp_opr.name expOprName,exp_opr.id expOprId
                from inventory.exp_invoice ei
                inner join inventory.document doc on doc.id = ei.id
                left outer join inventory.request_doc req on req.id = ei.request_doc_id
                left join inventory.store rec on rec.id = ei.rec_store_id
                left join inventory.store send on send.id = ei.send_store_id
                left outer join inventory.store_opr arr_opr on arr_opr.id = ei.store_opr_arr_id
                left outer join inventory.store_opr exp_opr on exp_opr.id = ei.store_opr_exp_id
                left outer join inventory.funding_source fs on fs.id=ei.fund_source_id
                left outer join inventory.commodity_group cg on cg.id=ei.com_group_id
                left outer join inventory.trust_doc td on td.id=ei.trust_doc_id
                where exp_opr.code != '12' and exp_opr.code != '13' and :where
                order by :order)
                select :select from expInvoice
                ]]>
            </n2o:items-query>
            <n2o:count-query>
                <![CDATA[
                with expInvoice as( select ei.id docId, doc.org_id orgId, doc.int_doc_number docNumber,doc.int_doc_dt docDate,
                req.id requestDocId, req.number requestNumber, req.date requestDate, doc.doc_status_id docStatus, doc.execute_dt executeDate,
                ei.doc_status_arr_id arrivalStatus,ei.exec_arr_dt arrStatusDate, send.id sendStoreId, send.name sendStoreName,
                arr_opr.name arrOprName, ei.rec_store_id recStoreId, rec.name recStoreName,
                cg.id comGroupId, cg.name comGroupName, fs.id fundSourceId, fs.name fundSourceName,ei.amount_fact amountFact,
                exp_opr.name expOprName,exp_opr.id expOprId
                from inventory.exp_invoice ei
                inner join inventory.document doc on doc.id = ei.id
                left outer join inventory.request_doc req on req.id = ei.request_doc_id
                left join inventory.store rec on rec.id = ei.rec_store_id
                left join inventory.store send on send.id = ei.send_store_id
                left outer join inventory.store_opr arr_opr on arr_opr.id = ei.store_opr_arr_id
                left outer join inventory.store_opr exp_opr on exp_opr.id = ei.store_opr_exp_id
                left outer join inventory.funding_source fs on fs.id=ei.fund_source_id
                left outer join inventory.commodity_group cg on cg.id=ei.com_group_id
                left outer join inventory.trust_doc td on td.id=ei.trust_doc_id
                where exp_opr.code != '12' and exp_opr.code != '13' and :where)
                select count(1) from expInvoice
                ]]>
            </n2o:count-query>
            <n2o:alias>ei</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>docId</expression>
            <search>ei.id = :id</search>
        </field>
        <field>
            <id>docNumberLabel</id>
            <domain>string</domain>
            <name>№ накладной</name>
            <expression>docNumber</expression>
            <search>(doc.int_doc_number like '%'||'-'||:docNumber or doc.int_doc_number=:docNumber)</search>
        </field>
        <field>
            <id>docNumber</id>
            <domain>string</domain>
            <expression>docNumber</expression>
            <search>upper(doc.int_doc_number) like '%'||upper(:docNumber)||'%'</search>
        </field>
        <field>
            <id>docDate</id>
            <domain>date</domain>
            <name>Дата</name>
            <expression>docDate</expression>
            <search type="between">
                <![CDATA[(:docDate.begin::date is null or doc.int_doc_dt >= :docDate.begin) and
                        (:docDate.end::date is null or doc.int_doc_dt <= :docDate.end) ]]></search>
        </field>
        <field>
            <id>docDateString</id>
            <domain>string</domain>
            <expression>to_char(docDate, 'DD.MM.YYYY')</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>docDate.end</id>
            <domain>date</domain>
            <search unavailable="true"/>
            <display unavailable="true"/>
        </field>
        <field>
            <id>docDate.begin</id>
            <domain>date</domain>
            <search unavailable="true"/>
            <display unavailable="true"/>
        </field>
        <field>
            <id>requestDoc.id</id>
            <domain>integer</domain>
            <expression>requestDocId</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>requestDoc.label</id>
            <domain>string</domain>
            <name>Требование</name>
            <expression>requestNumber</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>requestDoc.number</id>
            <domain>string</domain>
            <expression>requestNumber</expression>
            <search>upper(req.number) like '%'||upper(:requestDoc.number)||'%'</search>
        </field>
        <field>
            <id>requestDoc.date</id>
            <domain>date</domain>
            <name>Дата треб.</name>
            <expression>requestDate</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>isExecuted</id>
            <domain>string</domain>
            <expression>(case when docStatus=1 then 'false' else 'true' end)</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>isExecutedSimbol</id>
            <domain>string</domain>
            <name></name>
            <expression>(case when docStatus=1 then '&#10008;' else '&#10004;' end)</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>isExecutedColor</id>
            <domain>string</domain>
            <expression>
                (case when (docStatus=2 and arrivalStatus=4)
                then 'success'
                else
                case when (docStatus=2 and arrivalStatus=3)
                then 'warning' end
                end)
            </expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>executedSpecExists</id>
            <domain>boolean</domain>
            <expression>(select exists(select 1 from inventory.exp_spec where doc_id=docId and status_exp_id=2))
            </expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>countOfSpec</id>
            <domain>integer</domain>
            <expression>
                (select count(*) from inventory.exp_spec s where s.doc_id=docId)
            </expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>executedStatus.id</id>
            <domain>integer</domain>
            <expression>docStatus</expression>
            <search>doc.doc_status_id = :executedStatus.id</search>
        </field>
        <field>
            <id>status.id</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search>(doc.doc_status_id = :status.id or ei.doc_status_arr_id = :status.id)</search>
        </field>
        <field>
            <id>statusTooltip</id>
            <domain>string</domain>
            <display>
                case when docStatus=1 then 'не проведен' else 'проведен' end
            </display>
            <search unavailable="true"/>
        </field>
        <field>
            <id>executedArrOprDate</id>
            <domain>date</domain>
            <name>Проведён</name>
            <expression>executeDate</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>isAccepted</id>
            <domain>string</domain>
            <expression>(case when arrivalStatus=4 then 'true' else 'false' end)</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>isAcceptedSimbol</id>
            <domain>string</domain>
            <name></name>
            <expression>(case when arrivalStatus=4 then '&#10004;' end)</expression>
        </field>
        <field>
            <id>arrivalStatusTooltip</id>
            <domain>string</domain>
            <display>
                (case when arrivalStatus=4 then 'принят'  else 'не принят' end)
            </display>
        </field>
        <field>
            <id>acceptedSpecExists</id>
            <domain>boolean</domain>
            <expression>(select exists(select 1 from inventory.exp_spec where doc_id=docId and status_arr_id=4))
            </expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>acceptedArrOprDate</id>
            <domain>date</domain>
            <name>Принят</name>
            <expression>arrStatusDate</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>sendStore.id</id>
            <domain>integer</domain>
            <expression>sendStoreId</expression>
            <search type="eq">ei.send_store_id = :sendStore.id</search>
            <search type="in" filter-field="sendStores*.id">ei.send_store_id in (:sendStores*.id)</search>
        </field>
        <field>
            <id>sendStore.name</id>
            <domain>string</domain>
            <name>Отправитель</name>
            <expression>sendStoreName</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>arrOpr.name</id>
            <domain>string</domain>
            <name>Операция прихода</name>
            <expression>arrOprName</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>recStore.id</id>
            <domain>integer</domain>
            <expression>recStoreId</expression>
            <search type="in" filter-field="recStores*.id">ei.rec_store_id in (:recStores*.id)</search>
        </field>
        <field>
            <id>recStore.name</id>
            <domain>string</domain>
            <name>Получатель</name>
            <expression>recStoreName</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>expOpr.name</id>
            <domain>string</domain>
            <name>Операция расхода</name>
            <expression>expOprName</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>expOpr.id</id>
            <domain>integer</domain>
            <expression>expOprId</expression>
            <search type="in" filter-field="sendOperationList*.id">exp_opr.id in (:sendOperationList*.id)</search>
        </field>
        <field>
            <id>comGroup.id</id>
            <domain>integer</domain>
            <expression>comGroupId</expression>
            <search>cg.id = :comGroup.id</search>
        </field>
        <field>
            <id>comGroup.name</id>
            <domain>string</domain>
            <expression>comGroupName</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <expression>orgId</expression>
            <search value="#{org.id?}">(doc.org_id = :org.id or :org.id is null)</search>
        </field>
        <field>
            <id>fundSource.name</id>
            <domain>string</domain>
            <name>Финансирование</name>
            <expression>fundSourceName</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>fundSource.id</id>
            <domain>string</domain>
            <expression>fundSourceId</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>canBeRemoved</id>
            <domain>boolean</domain>
            <expression>case when docStatus=2 or
                exists(select 1 from inventory.exp_spec spec where spec.doc_id = docId and spec.status_exp_id=2)
                then false else true end
            </expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>docType.name</id>
            <domain>string</domain>
            <expression>'EXP_INVOICE'</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>amountFact</id>
            <domain>string</domain>
            <name>Фактическая</name>
            <expression>amountFact</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>commonAmount</id>
            <domain>string</domain>
            <expression>(select trim(to_char(sum(amountFact), 'FM9 999 999 990.000'), '.')||' руб.' from expInvoice)</expression>
            <search unavailable="true"/>
        </field>
    </fields>
</query>