<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-1.0">
    <name>discountPricingCat</name>

    <actions>
        <action id="read">
            <invocation/>
        </action>
        <action id="save" name="Добавить" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/payment/pricing_cat
                </rest:rest>
            </invocation>

            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="categoryName" mapping="['categoryName']" domain="string"/>
                <param name="org.id" mapping="['organizationId']" domain="integer"/>
                <param name="beginDate" mapping="['beginDate']" domain="date"/>
                <param name="endDate" mapping="['endDate']" domain="date"/>
                <param name="gender.id" mapping="['genderId']" domain="integer"/>
                <param name="vip" mapping="['vip']" domain="boolean"/>
                <param name="multiSoc*.id" mapping="['socialIds']" domain="integer[]"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <success-text>Категория {name} сохранена</success-text>
        </action>

        <action id="delete" name="Удалить" form-submit-label="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    ${n2o.backend.path}/payment/pricing_cat
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <confirmation-text>Вы уверены, что хотите удалить категорию {name}?
            </confirmation-text>
            <success-text>Категория удалена</success-text>
        </action>

        <!-- добавление возраста -->
        <action id="saveDiscountPricingCatAgeRel" name="Добавить" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/payment/pricing_cat/age
                </rest:rest>
            </invocation>

            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="fromAge" mapping="['fromAge']" domain="integer"/>
                <param name="toAge" mapping="['toAge']" domain="integer"/>
                <param name="pricingCatId" mapping="['pricingCatId']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <success-text>Возраст сохранен</success-text>
        </action>
        <!-- удаление возраста -->
        <action id="deleteDiscountPricingCatAgeRel" name="Удалить" form-submit-label="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    ${n2o.backend.path}/payment/pricing_cat/age
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <confirmation-text>Вы уверены, что хотите удалить ограничение по возрасту?
            </confirmation-text>
            <success-text>Возраст удален</success-text>
        </action>

        <!-- добавление льготы -->
        <action id="saveDiscountPricingCatBenefit" name="Добавить" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/payment/pricing_cat/benefit
                </rest:rest>
            </invocation>

            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="pricingCatId" mapping="['pricingCatId']" domain="integer"/>
                <param name="type.id" mapping="['benefitTypeId']" domain="integer"/>
                <param name="definition.id" mapping="['benefitDefinitionId']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <success-text>Льгота сохранена</success-text>
        </action>
        <!-- удаление льготы -->
        <action id="deleteDiscountPricingCatBenefit" name="Удалить" form-submit-label="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    ${n2o.backend.path}/payment/pricing_cat/benefit
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <confirmation-text>Вы уверены, что хотите удалить льготу?
            </confirmation-text>
            <success-text>Льгота удалена</success-text>
        </action>

        <!-- добавление места работы -->
        <action id="saveDiscountPricingCatJob" name="Добавить" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/payment/pricing_cat/job
                </rest:rest>
            </invocation>

            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="pricingCatId" mapping="['pricingCatId']" domain="integer"/>
                <param name="organization.id" mapping="['organizationId']" domain="integer"/>
                <param name="position.name" mapping="['position']" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <success-text>Место работы сохранено</success-text>
        </action>
        <!-- удаление места работы -->
        <action id="deleteDiscountPricingCatJob" name="Удалить" form-submit-label="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    ${n2o.backend.path}/payment/pricing_cat/job
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <confirmation-text>Вы уверены, что хотите удалить место работы?
            </confirmation-text>
            <success-text>Место работы удалено</success-text>
        </action>
    </actions>

    <validations>
        <condition id="checkAgeInterval" level="error">
            <expression on="from_age,to_age"><![CDATA[
                var o = true;
                if(to_age != null && from_age != null){
                    o = (Number(to_age) >= Number(from_age));
                }
                 o;
                ]]>
            </expression>
            <message>Возраст "От" не может быть больше возраста "До"</message>
        </condition>
        <condition id="discountPricingPeriodValidation" level="error">
            <message>Дата начала не должна быть больше даты окончания</message>
            <expression on="beginDate,endDate">
                <![CDATA[
                    (endDate == null) ||
                    moment(beginDate, 'DD.MM.YYYY').isBefore(moment(endDate, 'DD.MM.YYYY')) ||
                    moment(beginDate, 'DD.MM.YYYY').isSame(moment(endDate, 'DD.MM.YYYY'))
                ]]>
            </expression>
        </condition>
        <condition id="discountPricingCatFromAgeFormatValidation" level="error">
            <message>Введенное значение должно быть трёхзначным натуральным числом!</message>
            <expression on="fromAge">
                <![CDATA[
                    var regex = new RegExp('null|^$|^[1-9][0-9]{0,2}$');
                    regex.test(fromAge);
                ]]>
            </expression>
        </condition>
        <condition id="discountPricingCatToAgeFormatValidation" level="error">
            <message>Введенное значение должно быть трёхзначным натуральным числом!</message>
            <expression on="toAge">
                <![CDATA[
                    var regex = new RegExp('null|^$|^[1-9][0-9]{0,2}$');
                    regex.test(toAge);
                ]]>
            </expression>
        </condition>
        <condition id="discountPricingCatAgeEmptyRangeValidation" level="error">
            <message>Диапазон не может быть пустым!</message>
            <expression on="fromAge,toAge">
                <![CDATA[
                    !((fromAge == null || fromAge == '') && (toAge == null || toAge == ''))
                ]]>
            </expression>
        </condition>
        <condition id="discountPricingCatAgeRangeValidation" level="error">
            <message>Начало диапазона должно быть не больше окончания!</message>
            <expression on="fromAge,toAge">
                <![CDATA[
                    ((fromAge == '' || fromAge == null) || (toAge == '' || toAge == null)) ||
                    (parseInt(toAge, 10) >= parseInt(fromAge, 10));
                ]]>
            </expression>
        </condition>
    </validations>

</object>