<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:n2o="http://n2oapp.net/framework/config/schema/action-invocation-1.0"
        xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-2.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <name>receipt</name>
    <actions>
        <!--general receipt-->
        <action id="createGeneral">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/receipt/general/add
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="clinic.id" mapping="['clinicId']" domain="integer" value="#{org.id}"/>
                <param name="caseId" mapping="['caseId']" domain="integer"/>
                <param name="stepId" mapping="['stepId']" domain="integer"/>
                <param name="series" mapping="['series']" domain="string"/>
                <param name="num" mapping="['num']" domain="string"/>
                <param name="issue_dt" mapping="['issueDt']" domain="date"/>
                <param name="employeePositionId" mapping="['employeePositionId']" domain="integer"
                       value="#{emplPos.id}"/>
                <param name="patient.id" mapping="['patientId']" domain="integer"/>
                <param name="diagnosis.id" mapping="['diagnosisId']" domain="integer"/>
                <param name="validity.id" mapping="['validityId']" domain="integer"/>
                <param name="inn.id" mapping="['innId']" domain="integer"/>
                <param name="trade_name" mapping="['tradeName']" domain="string"/>
                <param name="form_type.id" mapping="['formTypeId']" domain="integer"/>
                <param name="dosage" mapping="['dosage']" domain="string"/>
                <param name="use_method" mapping="['useMethod']" domain="string"/>
                <param name="advice" mapping="['advice']" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param name="id" domain="integer" mapping="['id']"/>
            </out-parameters>
        </action>
        <action id="updateGeneral">
            <invocation>
                <rest:rest method="PUT">
                    <rest:query>
                        ${n2o.backend.path}/receipt/general/update/{id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="clinic.id" mapping="['clinicId']" domain="integer" value="#{org.id}"/>
                <param name="caseId" mapping="['caseId']" domain="integer"/>
                <param name="stepId" mapping="['stepId']" domain="integer"/>
                <param name="series" mapping="['series']" domain="string"/>
                <param name="num" mapping="['num']" domain="string"/>
                <param name="issue_dt" mapping="['issueDt']" domain="date"/>
                <param name="employeePositionId" mapping="['employeePositionId']" domain="integer" value="#{emplPos.id}"/>
                <param name="patient.id" mapping="['patientId']" domain="integer"/>
                <param name="diagnosis.id" mapping="['diagnosisId']" domain="integer"/>
                <param name="validity.id" mapping="['validityId']" domain="integer"/>
                <param name="inn.id" mapping="['innId']" domain="integer"/>
                <param name="trade_name" mapping="['tradeName']" domain="string"/>
                <param name="form_type.id" mapping="['formTypeId']" domain="integer"/>
                <param name="dosage" mapping="['dosage']" domain="string"/>
                <param name="use_method" mapping="['useMethod']" domain="string"/>
                <param name="advice" mapping="['advice']" domain="string"/>
                <param name="type.id" mapping="['typeId']" domain="integer"/>
                <param name="sign.id" mapping="['signId']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" domain="integer" mapping="['id']"/>
            </out-parameters>
        </action>
        <action id="deleteGeneral" name="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/receipt/general/delete/{id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <confirmation-text>Вы уверены что хотите удалить рецепт?</confirmation-text>
        </action>
        <!--/general receipt-->

        <!--benefit receipt-->
        <action id="createBenefit">
            <invocation>
                <n2o:sql>
                    insert into receipt.receipt
                    (
                        id, clinic_id, type_id, sign_id, validity_id, series,num,issue_dt, employee_position_id,
                        patient_id, diagnosis_id, case_id, step_id
                    )
                    values
                    (
                        nextval('receipt.receipt_id_seq'), :clinic_id, :type_id, :sign_id, :validity_id, :series,:num,:issue_dt,
                        :employee_position_id, :patient_id, :diagnosis_id, :caseId, :stepId
                    );

                    INSERT INTO receipt.benefit_receipt(
                        id, benefit_definition_id, funding_source_type_id, percent_payment_id,
                        commission_protocol_num, commission_protocol_dt,
                        inn_id, inv_holding_id, inv_holding_modif_id, dosage,
                        use_method, quantity
                    )
                    VALUES (currval('receipt.receipt_id_seq'), :benefit_definition_id, :funding_source_type_id,
                    :percent_payment_id, :decision_number, :decision_date, :benefit_inn_id, :benefit_holding_id,
                    :inv_holding_modif_id, :dosage, :use_method, :quantity);
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="caseId" mapping="['caseId']" domain="integer"/>
                <param name="stepId" mapping="['stepId']" domain="integer"/>
                <param name="type.id" mapping="['type_id']" domain="integer"/>
                <param name="clinic.id" mapping="['clinic_id']" domain="integer"/>
                <param name="patient.id" mapping="['patient_id']" domain="integer"/>
                <param name="sign.id" mapping="['sign_id']" domain="integer"/>
                <param name="series" mapping="['series']" domain="string"/>
                <param name="num" mapping="['num']" domain="string"/>
                <param name="issue_dt" mapping="['issue_dt']" domain="date"/>
                <param name="benefit_definition.id" mapping="['benefit_definition_id']" domain="integer"/>
                <param name="diagnosis.id" mapping="['diagnosis_id']" domain="integer"/>
                <param name="fundingSourceType.id" mapping="['funding_source_type_id']" domain="integer"/>
                <param name="percentPayment.id" mapping="['percent_payment_id']" domain="integer"/>
                <param name="validity.id" mapping="['validity_id']" domain="integer"/>
                <param name="benefit_inn.id" mapping="['benefit_inn_id']" domain="integer"/>
                <param name="benefit_holding.id" mapping="['benefit_holding_id']" domain="integer"/>
                <param name="inv_holding_modif.id" mapping="['inv_holding_modif_id']" domain="integer"/>
                <param name="dosage" mapping="['dosage']" domain="string"/>
                <param name="quantity" mapping="['quantity']" domain="integer"/>
                <param name="use_method" mapping="['use_method']" domain="string"/>
                <param name="decisionNumber" mapping="['decision_number']" domain="string"/>
                <param name="decisionDate" mapping="['decision_date']" domain="date"/>
                <param name="employee.id" mapping="['employee_position_id']" domain="integer"/>
            </in-parameters>
        </action>

        <action id="updateBenefit">
            <invocation>
                <n2o:sql>
                    UPDATE receipt.receipt
                    SET clinic_id=:clinic_id, type_id=:type_id, series=:series,
                    num=:num, issue_dt=:issue_dt, employee_position_id=:employee_position_id, patient_id=:patient_id, sign_id=:sign_id,
                    diagnosis_id=:diagnosis_id, validity_id=:validity_id, case_id = :caseId, step_id = :stepId
                    WHERE id = :id;

                    UPDATE receipt.benefit_receipt
                    SET benefit_definition_id=:benefit_definition_id, funding_source_type_id=:funding_source_type_id,
                    percent_payment_id=:percent_payment_id, commission_protocol_num=:decision_number,
                    commission_protocol_dt=:decision_date, inn_id=:benefit_inn_id, inv_holding_id=:benefit_holding_id,
                    inv_holding_modif_id=:inv_holding_modif_id, dosage=:dosage, use_method=:use_method,
                    quantity=:quantity
                    WHERE id = :id;
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="type.id" mapping="['type_id']" domain="integer"/>
                <param name="clinic.id" mapping="['clinic_id']" domain="integer"/>
                <param name="patient.id" mapping="['patient_id']" domain="integer"/>
                <param name="sign.id" mapping="['sign_id']" domain="integer"/>
                <param name="series" mapping="['series']" domain="string"/>
                <param name="num" mapping="['num']" domain="string"/>
                <param name="issue_dt" mapping="['issue_dt']" domain="date"/>
                <param name="benefit_definition.id" mapping="['benefit_definition_id']" domain="integer"/>
                <param name="diagnosis.id" mapping="['diagnosis_id']" domain="integer"/>
                <param name="fundingSourceType.id" mapping="['funding_source_type_id']" domain="integer"/>
                <param name="percentPayment.id" mapping="['percent_payment_id']" domain="integer"/>
                <param name="validity.id" mapping="['validity_id']" domain="integer"/>
                <param name="benefit_inn.id" mapping="['benefit_inn_id']" domain="integer"/>
                <param name="benefit_holding.id" mapping="['benefit_holding_id']" domain="integer"/>
                <param name="inv_holding_modif.id" mapping="['inv_holding_modif_id']" domain="integer"/>
                <param name="dosage" mapping="['dosage']" domain="string"/>
                <param name="quantity" mapping="['quantity']" domain="integer"/>
                <param name="use_method" mapping="['use_method']" domain="string"/>
                <param name="decisionNumber" mapping="['decision_number']" domain="string"/>
                <param name="decisionDate" mapping="['decision_date']" domain="date"/>
                <param name="employee.id" mapping="['employee_position_id']" domain="integer"/>
                <param name="caseId" mapping="['caseId']" domain="integer"/>
                <param name="stepId" mapping="['stepId']" domain="integer"/>
            </in-parameters>
        </action>

        <action id="deleteBenefit">
            <invocation>
                <n2o:sql>
                    DELETE FROM receipt.benefit_receipt WHERE id = :id;
                    DELETE FROM receipt.receipt WHERE id = :id;
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <confirmation-text>
                Вы уверены что хотите удалить рецепт?
            </confirmation-text>
        </action>

        <!--/benefit receipt-->

        <!--milky-->
        <action id="createMilky">
            <invocation>
                <sql:sql>
                    insert into receipt.receipt
                    (
                    id, clinic_id,
                    type_id,sign_id,validity_id,
                    series,num,issue_dt,
                    employee_position_id,
                    patient_id, case_id, step_id
                    )
                    values (
                    nextval('receipt.receipt_id_seq'),
                    :clinic_id,
                    :type_id,:sign_id,:validity_id,
                    :series,:num,:issue_dt,
                    :employee_position_id,
                    :patient_id, :caseId, :stepId
                    );
                    insert into receipt.baby_food_receipt
                    (
                    id,
                    benefit_definition_id,
                    kitchen_id,
                    begin_dt,
                    end_dt
                    )
                    VALUES (
                    currval('receipt.receipt_id_seq'),
                    :benefit_definition_id,
                    :kitchen_id,
                    :begin_dt,
                    :end_dt
                    );
                    <!--не делаем, так как список выписанных продуктов строго определяется возрастной и граждан категориями-->
                    <!--insert into ehr.baby_food_spec (id,food_receipt_id,product_id,value)-->
                    <!--select nextval('ehr.baby_food_spec_id_seq'),currval('ehr.receipt_id_seq'),-->
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="clinic.id" mapping="['clinic_id']" domain="integer"/>
                <param name="type.id" mapping="['type_id']" domain="integer"/>
                <param name="sign.id" mapping="['sign_id']" domain="integer"/>
                <param name="validity.id" mapping="['validity_id']" domain="integer"/>
                <param name="series" mapping="['series']" domain="string"/>
                <param name="num" mapping="['num']" domain="string"/>
                <param name="issue_dt" mapping="['issue_dt']" domain="date"/>
                <param name="employee.id" mapping="['employee_position_id']" domain="integer"/>
                <param name="patient.id" mapping="['patient_id']" domain="integer"/>
                <param name="benefit_definition.id" mapping="['benefit_definition_id']" domain="integer"/>
                <param name="kitchen.id" mapping="['kitchen_id']" domain="integer"/>
                <param name="begin_dt" mapping="['begin_dt']" domain="date"/>
                <param name="end_dt" mapping="['end_dt']" domain="date"/>
                <param name="caseId" mapping="['caseId']" domain="integer"/>
                <param name="stepId" mapping="['stepId']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]" domain="integer"/>
            </out-parameters>
            <success-text>
                Рецепт сохранен в системе успешно
            </success-text>
        </action>
        <action id="updateMilky">
            <invocation>
                <sql:sql>
                    update receipt.receipt set patient_id = :patient_id, employee_position_id = :employee_position_id
                    where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="patient.id" mapping="['patient_id']" domain="integer"/>
                <param name="employee.id" mapping="['employee_position_id']" domain="integer"/>
            </in-parameters>
            <success-text>
                Изменение данных по пациенту в рецепте сохранено в системе успешно
            </success-text>
        </action>

        <action id="deleteMilkyReceipt">
            <invocation>
                <n2o:sql>
                    DELETE FROM receipt.baby_food_receipt WHERE id = :id;
                    DELETE FROM receipt.receipt WHERE id = :id;
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <confirmation-text>
                Вы уверены что хотите удалить рецепт?
            </confirmation-text>
        </action>
        <!--/milky-->

        <action id="cancelReceipt">
            <invocation>
                <sql:sql>
                    update receipt.receipt set canceled = true where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <success-text>
                Рецепт аннулирован
            </success-text>
            <confirmation-text>
                Вы действительно хотите аннулировать рецепт?
            </confirmation-text>
        </action>

        <action id="unCancelReceipt">
            <invocation>
                <sql:sql>
                    update receipt.receipt set canceled = false where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <success-text>
                Аннулирование рецепта отменено
            </success-text>
            <confirmation-text>
                Вы действительно хотите отменить аннулирование рецепта?
            </confirmation-text>
        </action>
    </actions>

    <validations>
        <condition id="canCreateBenefitReceipt" level="error">
            <message>У выбранного врача нет права на выписку льготного рецепта</message>
            <expression> typeof id == 'undefined' &amp;&amp; !!employee.canCreateBenefitReceipt == true
                || typeof id != 'undefined' &amp;&amp; !!employee.canCreateBenefitReceipt == true &amp;&amp; employeeId != employee.id
                || typeof id != 'undefined' &amp;&amp; !!canCreateBenefitReceipt == true &amp;&amp; employeeId != null &amp;&amp; employeeId == employee.id
            </expression>
        </condition>

        <condition id="canCreateMilkyReceipt" level="error" moment="before-action">
            <message>У выбранного врача нет права на выписку рецепта на молочную кухню</message>
            <expression>!!employee.canCreateBenefitReceipt == true</expression>
        </condition>

        <constraint id="canCreateBenefitReceiptToDate" level="error">
            <invocation>
                <sql:sql>
                  <![CDATA[
                        select count(1)
                        from pim_empl_posit_to_prefer_recipe peptpr
                        where (peptpr.employee_position_id = :empPosId )
                            and :receiptDate::date >= peptpr.begin_date
                            and (peptpr.end_date is null
                                    or peptpr.end_date >= :receiptDate::date) limit 1
                  ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="employee.id" mapping="['empPosId']" domain="integer"/>
                <param name="issue_dt" mapping="['receiptDate']" domain="date"/>
            </in-parameters>
            <result expression="[0][0][0] != 0"/>
            <message>У выбранного врача нет права на выписку льготного рецепта</message>
        </constraint>

        <constraint id="checkDrugIntolerance" level="error">
            <invocation>
                <sql:sql>
                    select count(pdi.id)
                    from pci_drug_intolerance pdi
                    join inv_inn i on i.id = pdi.inn_id
                    join inventory.inn inv on upper(translate(i.name_latin, ' ', '')) = upper(translate(inv.name_latin, ' ', ''))
                    where pdi.patient_id = :patient and inv.id = :drug_id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="benefit_inn.id" mapping="['drug_id']" domain="string"/>
                <param name="patient.id" mapping="['patient']" domain="string"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Препарат находится в списке Лекарственная непереносимость пациента</message>
        </constraint>
    </validations>

</object>
