<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-3.0">
    <object-id>secUser</object-id>
    <name>secUserSimple</name>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from "public".sec_user u
                join "public".sec_user_party up on up.id = u.id
                left join "public".pim_employee e on e.individual_id = up.party_id
                left join "public".pim_employee_position ep on ep.employee_id = e.id
                left join "public".pim_position p on p.id = ep.position_id
                left join sec.access_key k on k.user_id = u.id and (k.is_blocked = false or k.is_blocked is null)
                left join sec_user_org as uo on u.id = uo.user_id
                left join "public".pim_organization o
                on (o.id = p.organization_id or o.id = up.party_id or o.id = k.org_id or o.id = uo.org_id)
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(u)
                from "public".sec_user u
                join "public".sec_user_party up on up.id = u.id
                left join "public".pim_employee e on e.individual_id = up.party_id
                left join "public".pim_employee_position ep on ep.employee_id = e.id
                left join "public".pim_position p on p.id = ep.position_id
                left join sec.access_key k on k.user_id = u.id and (k.is_blocked = false or k.is_blocked is null)
                left join sec_user_org as uo on u.id = uo.user_id
                left join "public".pim_organization o
                on (o.id = p.organization_id or o.id = up.party_id or o.id = k.org_id or o.id = uo.org_id)
                where :where
            </n2o:count-query>
            <n2o:alias>u</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>

        <field>
            <id>login</id>
            <domain>string</domain>
            <display/>
            <sorting/>
            <filters>
                <filter type="eq" filter-field="login">lower(u.login) like lower(:login)||'%'</filter>
            </filters>
        </field>

        <field>
            <id>partyId</id>
            <domain>integer</domain>
            <expression>up.party_id</expression>
            <filters auto-generate="true"/>
        </field>

        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <expression>o.id</expression>
            <filters auto-generate="true"/>
        </field>

    </fields>
</query>
