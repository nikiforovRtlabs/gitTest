<?xml version='1.0' encoding='UTF-8'?>
<object xmlns:n2o="http://n2oapp.net/framework/config/schema/action-invocation-1.0"
        xmlns="http://n2oapp.net/framework/config/schema/object-1.0">
    <name>Шаблон роли</name>

    <actions>
        <action id="create">
            <invocation>
                <n2o:java-method bean="roleTemplatesService" name="create">
                    <n2o:arguments>
                        <n2o:argument class="ru.kirkazan.rmis.app.security.admin.impl.templates.RoleTemplateParameters"
                                      name="model"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="code" mapping="[0].code"/>
                <param name="name" mapping="[0].name"/>
                <param name="group.name" mapping="[0].group.name"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="#this" domain="string"/>
            </out-parameters>
            <validations activate="whiteList">
                <validation ref-id="templateIdConstraint"/>
                <validation ref-id="templateNameUniqueConstraint"/>
            </validations>
            <success-text>Создан шаблон роли "{name}"</success-text>
        </action>

        <action id="update">
            <invocation>
                <n2o:java-method bean="roleTemplatesService" name="update">
                    <n2o:arguments>
                        <n2o:argument class="ru.kirkazan.rmis.app.security.admin.impl.templates.RoleTemplateParameters"
                                      name="model"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="id" mapping="[0].id"/>
                <param name="code" mapping="[0].code"/>
                <param name="name" mapping="[0].name"/>
                <param name="group.name" mapping="[0].group.name"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="templateNameUniqueConstraint"/>
            </validations>
            <success-text>Изменён шаблон роли "{name}"</success-text>
        </action>

        <action id="copy" name="Копирование шаблона" form-submit-label="Копировать">
            <invocation>
                <n2o:java-method bean="roleTemplatesService" name="copy">
                    <n2o:arguments>
                        <n2o:argument class="ru.kirkazan.rmis.app.security.admin.impl.templates.RoleTemplateParameters"
                                      name="model"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="id" mapping="[0].id"/>
                <param name="code" mapping="[0].code"/>
                <param name="oldCode" mapping="[0].oldCode"/>
                <param name="name" mapping="[0].name"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="#this" domain="string"/>
            </out-parameters>
            <validations activate="whiteList">
                <validation ref-id="templateIdConstraint"/>
                <validation ref-id="templateNameUniqueConstraint"/>
            </validations>
        </action>

        <action id="delete" name="Удаление">
            <invocation>
                <n2o:java-method bean="metaDataService" name="delete"/>
            </invocation>
            <in-parameters>
                <param name="code" mapping="[0]" domain="string"/>
                <param name="n2oClass" mapping="[1]" domain="string"/>
            </in-parameters>
            <validations activate="blackList">
                <validation ref-id="templateIdConstraint"/>
                <validation ref-id="templateNameUniqueConstraint"/>
            </validations>
            <success-text>Удалён шаблон роли "{code}"</success-text>
        </action>
        <action id="persistXml">
            <invocation>
                <n2o:java-method bean="metaDataService" name="persist"/>
            </invocation>
            <in-parameters>
                <param name="id" mapping="[0]" domain="string"/>
                <param name="n2oClass" mapping="[1]" domain="string"/>
                <param name="xml" mapping="[2]"/>
                <param name="code" mapping="[3]" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param name="id" domain="string" mapping="#this"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="createTemplateByRole" name="Создание шаблона по роли">
            <invocation>
                <n2o:java-method bean="roleTemplatesService" name="createTemplateByRole">
                    <n2o:arguments>
                        <n2o:argument class="ru.kirkazan.rmis.app.security.admin.impl.templates.RoleTemplateParameters"
                                      name="model"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="id" mapping="[0].id"/>
                <param name="code" mapping="[0].code"/>
                <param name="oldCode" mapping="[0].oldCode"/>
                <param name="name" mapping="[0].name"/>
                <param name="roleId" mapping="[0].roleId"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="templateIdConstraint"/>
                <validation ref-id="templateNameUniqueConstraint"/>
            </validations>
            <success-text>Шаблон {code} успешно создан</success-text>
        </action>
    </actions>

    <validations>
        <constraint id="templateIdConstraint" level="error">
            <invocation>
                <n2o:java-method bean="roleTemplatesService" name="validateId">
                    <n2o:arguments>
                        <n2o:argument class="ru.kirkazan.rmis.app.security.admin.impl.templates.RoleTemplateParameters"
                                      name="model"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="code" mapping="[0].code"/>
                <param name="id" mapping="[0].id" required="false"/> <!-- Для создания или изменения используется id -->
                <param name="oldCode" mapping="[0].oldCode" required="false"/><!-- Для копирования используется oldCode, т.к. id очищается-->
            </in-parameters>
            <out-parameters>
                <param name="message" mapping="message" domain="string"/>
            </out-parameters>
            <result expression="result == true"/>
            <message>{message}</message>
        </constraint>

        <constraint id="templateNameUniqueConstraint" level="error">
            <message>Шаблон с наименованием "{name}" уже существует</message>
            <invocation>
                <n2o:java-method bean="roleTemplatesService" name="validateName">
                    <n2o:arguments>
                        <n2o:argument class="ru.kirkazan.rmis.app.security.admin.impl.templates.RoleTemplateParameters"
                                      name="model"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="id" mapping="[0].id" required="false"/> <!-- Для создания или изменения используется id -->
                <param name="oldCode" mapping="[0].oldCode" required="false"/><!-- Для копирования используется oldCode, т.к. id очищается-->
                <param name="name" mapping="[0].name"/>
            </in-parameters>
            <result expression="#this == true"/>
        </constraint>
    </validations>
</object>
