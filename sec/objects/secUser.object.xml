<?xml version='1.0' encoding='UTF-8'?>
<object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:n2o="http://n2oapp.net/framework/config/schema/action-invocation-1.0"
        xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xsi:schemaLocation="http://n2oapp.net/framework/config/schema/object-1.0 http://localhost:8080/n2o/config/schema/object/object-1.0.xsd">

    <actions>


        <action id="create" name="Создание">
            <invocation>
                <n2o:java-method bean="userService" name="create">
                    <n2o:arguments>
                        <n2o:argument
                                class="ru.kirkazan.rmis.app.security.admin.api.model.User"
                                name="user"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="org.id" mapping="[0].org.id"/>
                <param name="individual.id" mapping="[0].individual.id"/>
                <param name="type.id" mapping="[0].type.id"/>
                <param name="login" mapping="[0].login"/>
                <param name="email" mapping="[0].email"/>
                <param name="loginStatus.id" mapping="[0].loginStatus"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
                <param name="sendMail" mapping="['sendMail']"/>
            </out-parameters>
            <validations activate="whiteList">
                <validation ref-id="loginUnique"/>
                <validation ref-id="sendMail"/>
            </validations>
        </action>


        <action id="update" name="Изменение">
            <invocation>
                <n2o:java-method bean="userService" name="update">
                    <n2o:arguments>
                        <n2o:argument
                                class="ru.kirkazan.rmis.app.security.admin.api.model.User"
                                name="user"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="id" mapping="[0].id" domain="string"/>
                <param name="login" mapping="[0].login"/>
                <param name="email" mapping="[0].email"/>
                <param name="type.id" mapping="[0].type.id"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="loginUnique"/>
            </validations>
        </action>

        <action id="resetPassword" name="Сбросить пароль">
            <invocation>
                <n2o:java-method bean="userService" name="resetPassword">
                    <n2o:arguments>
                        <n2o:argument
                                class="ru.kirkazan.rmis.app.security.admin.api.model.User"
                                name="user"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="id" mapping="[0].id" domain="string"/>
                <param name="login" mapping="[0].login"/>
                <param name="email" mapping="[0].email"/>
                <param name="type.id" mapping="[0].type.id"/>
            </in-parameters>
            <confirmation-text>
                Пользователю '{login}' будет сформирован новый случайный пароль и отправлен по адресу: {email}
            </confirmation-text>
            <validations activate="nothing"/>
        </action>


        <action id="delete" name="Удаление">
            <invocation>
                <n2o:java-method bean="userService" name="delete">
                    <n2o:arguments>
                        <n2o:argument
                                class="ru.kirkazan.rmis.app.security.admin.api.model.User"
                                name="user"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="id" mapping="[0].id"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="addUserToOrg" name="Добавить пользователя в МО">
            <invocation>
                <n2o:java-method bean="userService" name="addUserToOrg">
                    <n2o:arguments>
                        <n2o:argument
                                class="ru.kirkazan.rmis.app.security.admin.api.model.User"
                                name="user"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="org.id" mapping="[0].org.id"/>
                <param name="login.id" mapping="[0].userId"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="userExists"/>
            </validations>
            <success-text>Пользователь добавлен в МО</success-text>
            <fail-text>Не удалось добавить пользователя в МО</fail-text>
        </action>

        <action id="deleteUserFromOrg" name="Удаление пользователя из МО">
            <invocation>
                <n2o:java-method bean="userService" name="deleteUserFromOrg">
                    <n2o:arguments>
                        <n2o:argument
                                class="ru.kirkazan.rmis.app.security.admin.api.model.User"
                                name="user"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="org.id" mapping="[0].org.id"/>
                <param name="login.id" mapping="[0].userId"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="deleteUserOrg"/>
            </validations>
            <success-text>Пользователь удален из МО</success-text>
            <fail-text>Не удалось удалить пользователя из МО</fail-text>
        </action>
        <action id="block" name="Заблокировать пользователя">
            <invocation>
                <n2o:java-method bean="userService" name="block">
                    <n2o:arguments>
                        <n2o:argument class="ru.kirkazan.rmis.app.security.admin.api.model.User" name="user"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="id" mapping="[0].id"/>
            </in-parameters>
            <confirmation-text>Вы уверены, что хотите заблокировать доступ к системе пользователю {login}?
            </confirmation-text>
            <success-text>Пользователю {login} заблокирован доступ в систему</success-text>
        </action>
        <action id="unlock" name="Разблокировать пользователя">
            <invocation>
                <n2o:java-method bean="userService" name="unlock">
                    <n2o:arguments>
                        <n2o:argument class="ru.kirkazan.rmis.app.security.admin.api.model.User" name="user"/>
                    </n2o:arguments>
                </n2o:java-method>
            </invocation>
            <in-parameters>
                <param name="id" mapping="[0].id"/>
            </in-parameters>
            <confirmation-text>Вы уверены, что хотите вернуть доступ к системе пользователю {login}?</confirmation-text>
            <success-text>Пользователю {login} возвращен доступ в систему</success-text>
        </action>
    </actions>

    <validations>
        <constraint id="loginUnique" level="error">
            <message>Пользователь с таким логином уже существует!</message>
            <invocation>
                <n2o:sql>
                    select count(1) from sec_user
                    where lower(cast(login as text)) = lower(cast(:login as text))
                    and (:id is null or id != :id)
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="userInfo.id" mapping="['id']" domain="integer" required="false"/>
                <param name="login" mapping="['login']" domain="string" />
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>

        <condition id="sendMail" level="warning" moment="after-success-action">
            <message>
                Пользователь с логином '{login}' создан, но отправить письмо с паролем на '{email}' не удалось. Письмо
                можно выслать повторно через функцию "Сбросить пароль"
            </message>
            <expression>sendMail === true</expression>
        </condition>

        <constraint id="userExists" level="error">
            <!--todo после исправления NNO-xxx нужно добавить в сообщение название МО и логин -->
            <message>Пользователь уже добавлен в это МО</message>
            <invocation>
                <n2o:sql>
                    select count(1) from sec_user_org
                    where user_id = :userId and org_id = :orgId
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="org.id" mapping="['orgId']" domain="integer"/>
                <param name="login.id" mapping="['userId']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>

        <constraint id="deleteUserOrg" level="error">
            <message>Нельзя удалить МО, в которой работает пользователь</message>
            <invocation>
                <n2o:sql>
                    select count(1) from "public".sec_user_party up
                    left join sec.access_key ak on up.id=ak.user_id
                    left join "public".pim_employee e on e.individual_id = up.party_id
                    left join "public".pim_employee_position ep on ep.employee_id = e.id
                    left join "public".pim_position p on p.id = ep.position_id
                    left join "public".pim_organization o on (o.id = p.organization_id or o.id = up.party_id or o.id = ak.org_id)
                    where up.id=:userId and o.id=:orgId
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="org.id" mapping="['orgId']" domain="integer"/>
                <param name="login.id" mapping="['userId']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>

    </validations>


</object>