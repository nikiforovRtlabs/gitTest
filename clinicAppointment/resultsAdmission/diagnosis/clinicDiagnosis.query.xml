<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <object-id>clinicDiagnosis</object-id>
    <name>clinicDiagnos</name>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from mc_step ms
                left join mc_case mc on ( ms.case_id = mc.id )
                left join mc_diagnosis md on ( ms.id = md.step_id )
                left join md_diagnosis md1 on ( md.diagnos_id = md1.id )
                left join md_diagnosis md2 on ( md.injury_reason_id = md2.id )
                left join mc_diagnosis_type mdt on ( md.type_id = mdt.id )
                left join mc_stage mst on ( md.stage_id = mst.id )
                left join md_employee_position mep on ( md.doctor_id = mep.id )
                left join pim_employee_position pep on ( mep.id = pep.id )
                left join pim_employee pe on ( pep.employee_id = pe.id )
                left join pim_individual pi on ( pe.individual_id = pi.id )
                left join mc_injury_type mit on ( md.injury_type_id = mit.id )
                left join mc_disease_type mcdt on ( md.disease_type_id = mcdt.id )
                left join sr_res_group srgrg on ( ms.res_group_id = srgrg.id )
                left join pim_employee_position peprg on ( srgrg.responsible_id = peprg.id )
                left join pim_employee perg on ( peprg.employee_id = perg.id )
                left join pim_individual pirg on ( perg.individual_id = pirg.id )
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(ms)
                from mc_step ms
                left join mc_case mc on ( ms.case_id = mc.id )
                left join mc_diagnosis md on ( ms.id = md.step_id )
                left join md_diagnosis md1 on ( md.diagnos_id = md1.id )
                left join mc_diagnosis_type mdt on ( md.type_id = mdt.id )
                left join mc_stage mst on ( md.stage_id = mst.id )
                left join md_employee_position mep on ( md.doctor_id = mep.id )
                left join pim_employee_position pep on ( mep.id = pep.id )
                left join pim_employee pe on ( pep.employee_id = pe.id )
                left join pim_individual pi on ( pe.individual_id = pi.id )
                left join mc_injury_type mit on ( md.injury_type_id = mit.id )
                left join mc_disease_type mcdt on ( md.disease_type_id = mcdt.id )
                left join sr_res_group srgrg on ( ms.res_group_id = srgrg.id )
                left join pim_employee_position peprg on ( srgrg.responsible_id = peprg.id )
                left join pim_employee perg on ( peprg.employee_id = perg.id )
                left join pim_individual pirg on ( perg.individual_id = pirg.id )
                where :where
            </n2o:count-query>
            <n2o:alias>ms</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>md.id</expression>
        </field>

        <field>
            <id>visit.id</id>
            <domain>integer</domain>
            <expression>ms.id</expression>
        </field>

        <field>
            <id>mcCase</id>
            <domain>integer</domain>
            <expression>mc.id</expression>
        </field>

        <field>
            <id>isCaseState</id>
            <domain>boolean</domain>
            <expression>
                (case when mc.closing_step_id is null then false
                else true end)
            </expression>
        </field>

        <field>
            <id>patient.id</id>
            <domain>integer</domain>
            <expression>mc.patient_id</expression>
        </field>

        <field>
            <id>mcDiagnosis.id</id>
            <domain>integer</domain>
            <expression>md.id</expression>
        </field>

        <field>
            <id>diagnosis.id</id>
            <domain>integer</domain>
            <expression>md1.id</expression>
        </field>

        <field>
            <id>diagnosis.name</id>
            <domain>string</domain>
            <name>Установленный диагноз (МКБ10)</name>
            <expression>md1.code || ' ' || md1.name</expression>
        </field>

        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <expression>srgrg.org_id</expression>
        </field>

        <field>
            <id>orgId</id>
            <domain>integer</domain>
            <expression>:orgId</expression>
            <search value="#{org.id?}">:expression = :orgId</search>
        </field>

        <field>
            <id>emplContext</id>
            <domain>integer</domain>
            <expression>:emplContext</expression>
            <search value="#{emplPos.id?}"/>

        </field>

        <field>
            <id>mainDiagnosis.name</id>
            <domain>string</domain>
            <expression>
                (select md11.code || ' ' || md11.name
                from mc_diagnosis md1
                left join md_diagnosis md11 on ( md1.diagnos_id = md11.id )
                where mc.main_diagnos_id = md1.id)
            </expression>
        </field>

        <field>
            <id>mainDiagnosis.id</id>
            <domain>integer</domain>
            <expression>
                (select md1.id
                from mc_diagnosis md1
                left join md_diagnosis md11 on ( md1.diagnos_id = md11.id )
                where mc.main_diagnos_id = md1.id)
            </expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>diagnosisType.id</id>
            <domain>integer</domain>
            <expression>mdt.id</expression>
        </field>

        <field>
            <id>diagnosisType.name</id>
            <domain>string</domain>
            <name>Вид</name>
            <expression>mdt.name</expression>
        </field>

        <field>
            <id>diagnosisTypeName</id>
            <domain>string</domain>
            <name>Вид</name>
            <expression>
                case when md.is_main  != true  then mdt.name
                else 'Основной'
                end
            </expression>
        </field>

        <field>
            <id>stage.id</id>
            <domain>integer</domain>
            <expression>
                <!--default значение для этап установления -->
                (case when mst.id = null then 3 else mst.id end)
            </expression>
        </field>

        <field>
            <id>stage.name</id>
            <domain>string</domain>
            <name>Этап установления</name>
            <expression>mst.name</expression>
        </field>

        <field>
            <id>doctor.name</id>
            <domain>string</domain>
            <name>Врач</name>
            <expression>
                (coalesce(pi.surname, '') || ' ' || coalesce(pi.name, '') || ' ' || coalesce(pi.patr_name, '')|| ' ' ||
                coalesce(pe.note, ''))
            </expression>
        </field>

        <field>
            <id>resGroup.id</id>
            <domain>integer</domain>
            <expression>peprg.id</expression>
        </field>

        <field>
            <id>resGroup.name</id>
            <domain>string</domain>
            <name>Врач</name>
            <expression>
                (coalesce(pirg.surname, '') || ' ' || coalesce(pirg.name, '') || ' ' || coalesce(pirg.patr_name, '')|| '
                ' || coalesce(perg.note, ''))
            </expression>
        </field>

        <field>
            <id>injuryType.id</id>
            <domain>integer</domain>
            <expression>mit.id</expression>
        </field>

        <field>
            <id>injuryType.name</id>
            <domain>integer</domain>
            <name>Вид травмы</name>
            <expression>mit.name</expression>
        </field>
        <field>
            <id>injuryReason.id</id>
            <domain>integer</domain>
            <expression>md2.id</expression>
        </field>

        <field>
            <id>injuryReason.name</id>
            <domain>integer</domain>
            <name>Причина травмы</name>
            <expression>concat(md2.code||' ',md2.name) </expression>
        </field>

        <field>
            <id>diseaseType.id</id>
            <domain>integer</domain>
            <expression>mcdt.id</expression>
        </field>

        <field>
            <id>diseaseType.name</id>
            <domain>string</domain>
            <expression>mcdt.code || ' - ' || mcdt.name</expression>
        </field>

        <field>
            <id>bdate</id>
            <domain>date</domain>
            <expression>md.establishment_date</expression>
        </field>

        <field>
            <id>infoBdate</id>
            <domain>string</domain>
            <expression>to_char(md.establishment_date, 'DD.MM.YYYY')</expression>
        </field>

        <field>
            <id>isMainDiagnos</id>
            <domain>boolean</domain>
            <expression>md.is_main</expression>
        </field>

        <field>
            <id>isMainDiagnosColor</id>
            <domain>string</domain>
            <expression>
                (case when md.id = mc.main_diagnos_id then 'text-info' else '' end)
            </expression>
        </field>

        <field>
            <id>diagnosis.isDAccounting</id>
            <domain>boolean</domain>
            <name>Подлежит Д-учёту</name>
            <expression>
                (case when (select mnrd.id from md_nosol_registr_diagnosis mnrd where md1.code between
                (select mdi.code from md_diagnosis mdi where mdi.id = mnrd.init_diagnosis_id)
                and (select mdf.code from md_diagnosis mdf where mdf.id=mnrd.final_diagnosis_id) limit 1) is null
                then false
                else true end)
            </expression>
        </field>

        <field>
            <id>nosolRegistr</id>
            <domain>boolean</domain>
            <expression>
                (select mnrd.id from md_nosol_registr_diagnosis mnrd where md.id between mnrd.init_diagnosis_id and
                mnrd.final_diagnosis_id limit 1)
            </expression>
        </field>

        <field>
            <id>diagnosis.isInjury</id>
            <domain>boolean</domain>
            <expression>(md1.is_injury is true)</expression>
        </field>

        <field>
            <id>badge</id>
            <domain>string</domain>
            <expression>
                case when md.is_main  != true then
                (case when mdt.id = (select id from mc_diagnosis_type where code = '2') then 'badge badge-info'
                when mdt.id = (select id from mc_diagnosis_type where code = '3') then 'badge badge-warning'
                else ''
                end)
                else
                'badge badge-success'
                end
            </expression>
        </field>

        <field>
            <id>isStomatologyVisit</id>
            <domain>boolean</domain>
            <expression>:isStomatologyVisit</expression>
        </field>

    </fields>
</query>
