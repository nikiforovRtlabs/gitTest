<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-3.0">
    <object-id>clinicAppointment</object-id>
    <name>employeeResourceGroup</name>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from sr_res_group srg
                join sr_res_group_relationship srgr on srgr.group_id = srg.id
                join sr_resource sr on sr.id = srgr.resource_id
                join pim_employee_position_resource pepr on pepr.id = sr.id
                join pim_employee_position pep on pep.id = pepr.employee_position_id
                where (srg.is_system is null or srg.is_system = false) and current_date between coalesce(srg.bdate, '-infinity') and coalesce(srg.edate, 'infinity') and :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(srg)
                from sr_res_group srg
                join sr_res_group_relationship srgr on srgr.group_id = srg.id
                join sr_resource sr on sr.id = srgr.resource_id
                join pim_employee_position_resource pepr on pepr.id = sr.id
                join pim_employee_position pep on pep.id = pepr.employee_position_id
                where (srg.is_system is null or srg.is_system = false) and current_date between coalesce(srg.bdate, '-infinity') and coalesce(srg.edate, 'infinity') and :where
            </n2o:count-query>
            <n2o:alias>srg</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <display/>
            <expression>srg.id</expression>
            <sorting>asc</sorting>
            <filters auto-generate="true"/>
        </field>

        <field>
            <id>name</id>
            <domain>string</domain>
            <display/>
            <expression>srg.name</expression>
            <filters>
                <filter type="eq" filter-field="name">upper(:expression) like '%'||upper(:name)||'%'</filter>
            </filters>
        </field>

        <field>
            <id>employeePositionId</id>
            <domain>integer</domain>
            <display/>
            <expression>pep.id</expression>
            <filters>
                <filter type="eq" filter-field="employeePositionId"/>
            </filters>
        </field>
        
        <field>
            <id>dt</id>
            <domain>date</domain>
            <display/>
            <expression>current_date</expression>
            <filters>
                <filter type="eq" filter-field="dt">current_date between coalesce(srg.bdate, '-infinity') and coalesce(srg.edate, 'infinity')</filter>
            </filters>
        </field>


    </fields>
</query>
