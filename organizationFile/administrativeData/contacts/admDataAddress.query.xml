<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-3.0">
    <object-id>admDataAddress</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from pim_party_address a
                left join pim_party_addr_to_addr_type ata on ata.party_address_id=a.id
                left join pim_address_type at on at.id=ata.address_type_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(a)
                from pim_party_address a
                left join pim_party_addr_to_addr_type ata on ata.party_address_id=a.id
                left join pim_address_type at on at.id=ata.address_type_id
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>a.id</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>address.id</id>
            <domain>integer</domain>
            <expression>a.addr_id</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>addr_type_id</id>
            <domain>integer</domain>
            <expression>ata.id</expression>
            <display/>
        </field>
        <field>
            <id>address_element</id>
            <domain>string</domain>
            <expression>
                (select adr__get_element_as_text(a.addr_id, '(2,s,0)(3,s,0)(4,s,0)(5,s,0)(6,s,0)(7,s,0)(8,s,0)(9,s,0)'))
            </expression>
            <display/>
            <sorting/>
        </field>
        <field>
            <id>type.id</id>
            <domain>integer</domain>
            <expression>at.id</expression>
            <display/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>type.name</id>
            <domain>integer</domain>
            <expression>at.name</expression>
            <display/>
        </field>
        <field>
            <id>is_valid</id>
            <domain>boolean</domain>
            <expression>a.is_valid</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>note</id>
            <domain>string</domain>
            <expression>a.note</expression>
            <display/>
            <sorting/>
            <filters>
                <filter type="eq" filter-field="note">
                    upper(:expression) like '%'||upper(:note)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>party_id</id>
            <domain>integer</domain>
            <expression>a.party_id</expression>
            <display/>
            <sorting/>
            <filters>
                <filter type="eq" filter-field="org_id" default-value="#{stocks.orgId}"/>
            </filters>
        </field>
    </fields>
</query>
