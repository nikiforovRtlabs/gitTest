<?xml version='1.0' encoding='UTF-8'?>
<object xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-2.0"
        xmlns="http://n2oapp.net/framework/config/schema/object-1.0">
    <name>Назначения</name>

    <actions>
        <action id="save" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <param name="administrationRoute.id" mapping="['administrationRouteId']"/>
                <param name="prescriptionPeriodicity.id" mapping="['periodicityId']"/>
                <param name="visitTerm.id" mapping="['visitTermId']"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']"/>
                <param name="periodEndDt" mapping="['periodEndDt']"/>
                <param name="case.id" mapping="['caseId']"/>
                <param name="case.patient.id" mapping="['patientId']"/>
                <param name="case.step.id" mapping="['stepId']"/>
                <param name="doctor.id" mapping="['doctorId']" value="#{emplPosRes.id?}"/>
                <param name="note" mapping="['note']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="whiteList">
                <validation ref-id="hasPrescriptionCompatibilityWarning"/>
                <validation ref-id="hasPrescriptionCompatibilityError"/>
                <validation ref-id="hasPrescriptionNotExcessDoseWarning"/>
                <validation ref-id="hasPrescriptionNotExcessDoseError"/>
            </validations>
        </action>

        <action id="copy" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <param name="administrationRoute.id" mapping="['administrationRouteId']"/>
                <param name="prescriptionPeriodicity.id" mapping="['periodicityId']"/>
                <param name="visitTerm.id" mapping="['visitTermId']"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']"/>
                <param name="periodEndDt" mapping="['periodEndDt']"/>
                <param name="case.id" mapping="['caseId']"/>
                <param name="case.patient.id" mapping="['patientId']"/>
                <param name="case.step.id" mapping="['stepId']"/>
                <param name="doctor.id" mapping="['doctorId']" value="#{emplPosRes.id?}"/>
                <param name="note" mapping="['note']"/>

            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="whiteList">
                <validation ref-id="hasPrescriptionCompatibilityWarning"/>
                <validation ref-id="hasPrescriptionCompatibilityError"/>
                <validation ref-id="hasPrescriptionNotExcessDoseWarning"/>
                <validation ref-id="hasPrescriptionNotExcessDoseError"/>
            </validations>
        </action>

        <action id="saveWithWriteOff" form-submit-label="Списать на пациента">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/save-with-write-off
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="holding.holdingId" mapping="['holdingId']"/>
                <param name="holding.formTypeId" mapping="['holdFormTypeId']"/>
                <param name="holding.concentration" mapping="['holdConValue']"/>
                <param name="holding.concentrationMeasureId" mapping="['holdConMeasureId']"/>
                <param name="holding.dose" mapping="['holdDoseValue']"/>
                <param name="holding.doseMeasureId" mapping="['holdDoseMeasureId']"/>
                <param name="count" mapping="['count']"/>
                <param name="holding.mneiId" mapping="['holdMneiId']"/>
                <param name="administrationRoute.id" mapping="['administrationRouteId']"/>
                <param name="periodicity.id" mapping="['periodicityId']"/>
                <param name="visitTerm.id" mapping="['visitTermId']"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']"/>
                <param name="periodEndDt" mapping="['periodEndDt']"/>
                <param name="case.id" mapping="['caseId']"/>
                <param name="case.patient.id" mapping="['patientId']"/>
                <param name="case.step.id" mapping="['stepId']"/>
                <param name="doctor.id" mapping="['doctorId']" value="#{emplPosRes.id?}"/>
                <param name="isExecutionOnce" mapping="['isExecutionOnce']" value="true"/>

                <param name="holding.storeSupply.id" mapping="['storeSupplyId']"/>
                <param name="holding.modifId" mapping="['holdModifId']"/>
                <param name="holding.conversionRate" mapping="['conversionRate']"/> <!-- is not used in calculation anymore -->
                <param name="employeePosResId" mapping="['employeePosResId']" value="#{emplPosRes.id?}"/>
                <param name="employeePosId" mapping="['employeePosId']" value="#{emplPos.id?}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="delete" form-submit-label="Удалить" name="Удаление лекарственного назначения">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription?id={id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
            <confirmation-text>Вы уверены, что хотите удалить назначение ?</confirmation-text>
        </action>

        <action id="confirm" form-submit-label="Подтвердить" name="Подтвердить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/confirm?id={id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="cancel" form-submit-label="Сохранить" name="Отменить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/cancel
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="cancelDt" mapping="['cancelDt']"/>
                <param name="cancelReason" mapping="['cancelReason']"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="resume" name="Возобновить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/resume?id={id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="prolong" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/prolong?id={id}&amp;dayCount={dayCount}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="dayCount" mapping="['dayCount']"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="changeExecuteDate" form-submit-label="Сохраниить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription-schedule/changeExecuteDate
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="prescription.scheduleIds" mapping="['ids']" domain="integer[]"/>
                <param name="executionDt" mapping="['executionDt']"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="quickExecute" form-submit-label="Выполнить" name="Выполнение">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription-schedule/quickExecute
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="prescription.scheduleIds" mapping="['ids']" domain="integer[]"/>
                <param name="executorEmployee.id" mapping="['executorEmployeeId']" value="#{emplPosRes.id?}"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="quickExecuteWithPatientMedicament" form-submit-label="Выполнить препарат пациента" name="Выполнение препарата пациента">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription-schedule/quick-execute-with-patient-medicament
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="prescription.scheduleIds" mapping="['ids']" domain="integer[]"/>
                <param name="executorEmployee.id" mapping="['executorEmployeeId']" value="#{emplPosRes.id?}"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="cancelExecute" form-submit-label="Отменить выполнение" name="Отмена">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription-schedule/cancelExecute
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="prescription.scheduleIds" mapping="['ids']" domain="integer[]"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="cancelPrescriptionSchedule" form-submit-label="Сохранить" name="Отмена назначения">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription-schedule/cancel
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="prescription.scheduleIds" mapping="['ids']" domain="integer[]"/>
                <param name="cancelReason" mapping="['cancelReason']"/>
                <param name="executorEmployee.id" mapping="['executorEmployeeId']" value="#{emplPosRes.id?}"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="removeWithCancelExecute" form-submit-label="Удалить" name="Удалить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/remove-with-cancel-execute?id={id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="createInDAccount" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/d-accounting/prescription
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <param name="administrationRoute.id" mapping="['administrationRouteId']"/>
                <param name="prescriptionPeriodicity.id" mapping="['periodicityId']"/>
                <param name="visitTerm.id" mapping="['visitTermId']"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']"/>
                <param name="periodEndDt" mapping="['periodEndDt']"/>
                <param name="plan.case.id" mapping="['caseId']"/>
                <param name="plan.patient.id" mapping="['patientId']"/>
                <param name="plan.step.id" mapping="['stepId']"/>
                <param name="doctor.id" mapping="['doctorId']" value="#{emplPosRes.id?}"/>
                <param name="note" mapping="['note']"/>
                <param name="plan.id" mapping="['planId']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="createOperationPrescription" form-submit-label="Списать на пациента">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/operation-prescription
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="holding.holdingId" mapping="['holdingId']"/>
                <param name="holding.formTypeId" mapping="['holdFormTypeId']"/>
                <param name="holding.concentration" mapping="['holdConValue']"/>
                <param name="holding.concentrationMeasureId" mapping="['holdConMeasureId']"/>
                <param name="holding.dose" mapping="['holdDoseValue']"/>
                <param name="holding.doseMeasureId" mapping="['holdDoseMeasureId']"/>
                <param name="count" mapping="['count']"/>
                <param name="holding.mneiId" mapping="['holdMneiId']"/>
                <param name="administrationRoute.id" mapping="['administrationRouteId']"/>
                <param name="mdSrvRendered.case.id" mapping="['caseId']"/>
                <param name="mdSrvRendered.patient.id" mapping="['patientId']"/>
                <param name="mdSrvRendered.id" mapping="['serviceId']"/>
                <param name="isPatientMedicament" mapping="['isPatientMedicament']"/>

                <param name="doctor.id" mapping="['doctorId']" value="#{emplPosRes.id?}"/>
                <param name="isExecutionOnce" mapping="['isExecutionOnce']" value="true"/>

                <param name="holding.storeSupply.id" mapping="['storeSupplyId']"/>
                <param name="holding.modifId" mapping="['holdModifId']"/>
                <param name="holding.conversionRate" mapping="['conversionRate']"/>
                <param name="employeePosResId" mapping="['employeePosResId']" value="#{emplPosRes.id?}"/>
                <param name="employeePosId" mapping="['employeePosId']" value="#{emplPos.id?}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

    </actions>

    <validations>
        <condition id="prescriptionPeriodValidation" level="error">
            <expression on="periodBeginDt,periodEndDt"><![CDATA[
                    moment(periodBeginDt, 'DD.MM.YYYY HH:mm').isBefore(moment(periodEndDt, 'DD.MM.YYYY HH:mm')) ||
                    moment(periodBeginDt, 'DD.MM.YYYY HH:mm').isSame(moment(periodEndDt, 'DD.MM.YYYY HH:mm')) ]]>
            </expression>
            <message>Дата начала не должна быть больше даты окончания</message>

        </condition>

        <condition id="prolongDayValidation" level="error">
            <message>Введенное значение должно быть числом!</message>
            <expression><![CDATA[
                var regex = new RegExp('\^[0-9]+\$');
                regex.test(dayCount);
                ]]>
            </expression>
        </condition>

        <!--0-->
        <condition id="checkHolding0" level="error">
            <expression>
                typeof holdings != 'undefined' &amp;&amp; holdings != null &amp;&amp;
                typeof holdings[0] != 'undefined' &amp;&amp; holdings[0] != null &amp;&amp;
                typeof holdings[0].holding != 'undefined' &amp;&amp; holdings[0].holding != null &amp;&amp;
                typeof holdings[0].holding.id != 'undefined' &amp;&amp; holdings[0].holding.id != null
            </expression>
            <message>Заполните поле</message>
        </condition>

        <constraint id="hasPrescriptionCompatibilityWarning" level="warning">
            <message>Есть несовместимые по МНН лекарственные назначения в указанном периоде. {error} Вы уверены что хотите сохранить?</message>
            <invocation>
                <!--todo поменять запрос на GET когда задача NNOREQ-287 попадет в develop -->
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/check-prescription-compatibility-warning/{patientId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="case.patient.id" mapping="['patientId']" domain="integer"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']" domain="date"/>
                <param name="periodEndDt" mapping="['periodEndDt']" domain="date"/>
                <param name="holdings*.holding.holding_id" mapping="['holdingIds']" domain="integer[]" required="false"/>
            </in-parameters>
            <out-parameters>
                <param name="error" mapping="['error']" domain="string"/>
            </out-parameters>
            <result expression="['compatible'] == true"/>
        </constraint>

        <constraint id="hasPrescriptionCompatibilityError" level="error">
            <message>Есть несовместимые по МНН лекарственные назначения в указанном периоде. {error}</message>
            <invocation>
                <!--todo поменять запрос на GET когда задача NNOREQ-287 попадет в develop -->
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/check-prescription-compatibility-error/{patientId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="case.patient.id" mapping="['patientId']" domain="integer"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']" domain="date"/>
                <param name="periodEndDt" mapping="['periodEndDt']" domain="date"/>
                <param name="holdings*.holding.holding_id" mapping="['holdingIds']" domain="integer[]" required="false"/>
            </in-parameters>
            <out-parameters>
                <param name="error" mapping="['error']" domain="string"/>
            </out-parameters>
            <result expression="['compatible'] == true"/>
        </constraint>

        <constraint id="hasPrescriptionNotExcessDoseWarning" level="warning">
            <message>Имеются лекарственные назначения, у которых суммарная суточная/курсовая доза превышает максимально допустимое значение! {error} Вы уверены что хотите сохранить?</message>
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/check-prescription-excess-dose-warning/{patientId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="case.patient.id" mapping="['patientId']" domain="integer"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']" domain="date"/>
                <param name="periodEndDt" mapping="['periodEndDt']" domain="date"/>
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <param name="prescriptionPeriodicity.id" mapping="['periodicityId']"/>
            </in-parameters>
            <out-parameters>
                <param name="error" mapping="['error']" domain="string"/>
            </out-parameters>
            <result expression="['notExcessDose'] == true"/>
        </constraint>

        <constraint id="hasPrescriptionNotExcessDoseError" level="error">
            <message>Имеются лекарственные назначения, у которых суммарная суточная/курсовая доза превышает максимально допустимое значение! {error}</message>
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/check-prescription-excess-dose-error/{patientId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="case.patient.id" mapping="['patientId']" domain="integer"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']" domain="date"/>
                <param name="periodEndDt" mapping="['periodEndDt']" domain="date"/>
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <param name="prescriptionPeriodicity.id" mapping="['periodicityId']"/>
            </in-parameters>
            <out-parameters>
                <param name="error" mapping="['error']" domain="string"/>
            </out-parameters>
            <result expression="['notExcessDose'] == true"/>
        </constraint>

        <condition id="checkDoseFormat" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[0].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[0].dose!=null && typeof holdings[0].dose!= 'undefined'){
                        regex.test(holdings[0].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[0].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[0].count!=null && typeof holdings[0].count!= 'undefined'){
                        regex.test(holdings[0].count);
                    }else true;
                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat2" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[1].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[1].dose!=null && typeof holdings[1].dose!= 'undefined'){
                        regex.test(holdings[1].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat2" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[1].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[1].count!=null && typeof holdings[1].count!= 'undefined'){
                        regex.test(holdings[1].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat3" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[2].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[2].dose!=null && typeof holdings[2].dose!= 'undefined'){
                        regex.test(holdings[2].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat3" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[2].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[2].count!=null && typeof holdings[2].count!= 'undefined'){
                        regex.test(holdings[2].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat4" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[3].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[3].dose!=null && typeof holdings[3].dose!= 'undefined'){
                        regex.test(holdings[3].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat4" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[3].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[3].count!=null && typeof holdings[3].count!= 'undefined'){
                        regex.test(holdings[3].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat5" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[4].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[4].dose!=null && typeof holdings[4].dose!= 'undefined'){
                        regex.test(holdings[4].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat5" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[4].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[4].count!=null && typeof holdings[4].count!= 'undefined'){
                        regex.test(holdings[4].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat6" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[5].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[5].dose!=null && typeof holdings[5].dose!= 'undefined'){
                        regex.test(holdings[5].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat6" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[5].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[5].count!=null && typeof holdings[5].count!= 'undefined'){
                        regex.test(holdings[5].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat7" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[6].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[6].dose!=null && typeof holdings[6].dose!= 'undefined'){
                        regex.test(holdings[6].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat7" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[6].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[6].count!=null && typeof holdings[6].count!= 'undefined'){
                        regex.test(holdings[6].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat8" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[7].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[7].dose!=null && typeof holdings[7].dose!= 'undefined'){
                        regex.test(holdings[7].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat8" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[7].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[7].count!=null && typeof holdings[7].count!= 'undefined'){
                        regex.test(holdings[7].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat9" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[8].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[8].dose!=null && typeof holdings[8].dose!= 'undefined'){
                        regex.test(holdings[8].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat9" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[8].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[8].count!=null && typeof holdings[8].count!= 'undefined'){
                        regex.test(holdings[8].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat10" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[9].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[9].dose!=null && typeof holdings[9].dose!= 'undefined'){
                        regex.test(holdings[9].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat10" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[9].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[9].count!=null && typeof holdings[9].count!= 'undefined'){
                        regex.test(holdings[9].count);
                    }else true;

                ]]>
            </expression>
        </condition>
    </validations>


</object>