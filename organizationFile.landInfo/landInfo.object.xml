<object xmlns:n2o="http://n2oapp.net/framework/config/schema/action-invocation-1.0"
        xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">

    <name>Земельный участок</name>

    <actions>
        <action id="create" form-submit-label="Добавить">
            <invocation>
                <sql:sql>
                    insert into pim_land(
                      id,
                      name,
                      code,
                      area,
                      territory_code,
                      okato,
                      ownership_pattern_id,
                      title_right_support,
                      from_dt,
                      to_dt,
                      address_id,
                      nearest_station_name,
                      nearest_station_distance,
                      nearest_airport_name,
                      nearest_airport_distance,
                      nearest_bus_station_name,
                      nearest_bus_station_distance,
                      nearest_helipad_name,
                      nearest_helipad_distance,
                      main_road_name,
                      note,
                      org_id)
                    values(
                      nextval('pim_land_seq'),
                      :name,
                      trim(:code),
                      :area,
                      :territory_code,
                      :okato,
                      :ownership_pattern_id,
                      :title_right_support,
                      :from_dt,
                      :to_dt,
                      :address_id,
                      :nearest_station_name,
                      :nearest_station_distance,
                      :nearest_airport_name,
                      :nearest_airport_distance,
                      :nearest_bus_station_name,
                      :nearest_bus_station_distance,
                      :nearest_helipad_name,
                      :nearest_helipad_distance,
                      :main_road_name,
                      :note,
                      :org_id
                    );

                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="area" mapping="['area']" domain="numeric"/>
                <param name="territory_code" mapping="['territory_code']" domain="string"/>
                <param name="okato.value" mapping="['okato']" domain="string"/>
                <param name="own.id" mapping="['ownership_pattern_id']" domain="integer"/>
                <param name="title_right_support" mapping="['title_right_support']" domain="string"/>
                <param name="from_dt" mapping="['from_dt']" domain="date"/>
                <param name="to_dt" mapping="['to_dt']" domain="date"/>
                <param name="address.id" mapping="['address_id']" domain="integer"/>
                <!--   -->
                <param name="nearest_station_name" mapping="['nearest_station_name']" domain="string" />
                <param name="nearest_station_distance" mapping="['nearest_station_distance']" domain="numeric" />
                <param name="nearest_airport_name" mapping="['nearest_airport_name']" domain="string" />
                <param name="nearest_airport_distance" mapping="['nearest_airport_distance']" domain="numeric" />
                <param name="nearest_bus_station_name" mapping="['nearest_bus_station_name']" domain="string" />
                <param name="nearest_bus_station_distance" mapping="['nearest_bus_station_distance']" domain="numeric" />
                <param name="nearest_helipad_name" mapping="['nearest_helipad_name']" domain="string" />
                <param name="nearest_helipad_distance" mapping="['nearest_helipad_distance']" domain="numeric" />
                <param name="main_road_name" mapping="['main_road_name']" domain="string" />
                <!--   -->
                <param name="note" mapping="['note']" domain="string"/>
                <param name="org.id" mapping="['org_id']" domain="integer" value="#{stocks.orgId}"/>
                <param name="land.id" mapping="['id']" domain="integer"/> <!-- for validation -->
            </in-parameters>
            <out-parameters>
                <param name="land.id" mapping="[0][0]" domain="integer"/>
            </out-parameters>
            <success-text>
                Земельный участок "{code}" успешно сохранен в системе.
            </success-text>
            <validations activate="whiteList">
                <validation ref-id="is_land_with_code_already_exists"/>
            </validations>
        </action>

        <action id="update" form-submit-label="Изменить">
            <invocation>
                <sql:sql>
                    update pim_land set
                      name = :name,
                      code = trim(:code),
                      area = :area,
                      territory_code = :territory_code,
                      okato = :okato,
                      ownership_pattern_id = :ownership_pattern_id,
                      title_right_support = :title_right_support,
                      from_dt = :from_dt,
                      to_dt = :to_dt,
                      address_id = :address_id,
                      nearest_station_name = :nearest_station_name,
                      nearest_station_distance = :nearest_station_distance,
                      nearest_airport_name = :nearest_airport_name,
                      nearest_airport_distance = :nearest_airport_distance,
                      nearest_bus_station_name = :nearest_bus_station_name,
                      nearest_bus_station_distance = :nearest_bus_station_distance,
                      nearest_helipad_name = :nearest_helipad_name,
                      nearest_helipad_distance = :nearest_helipad_distance,
                      main_road_name = :main_road_name,
                      note = :note
                    where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="area" mapping="['area']" domain="numeric"/>
                <param name="territory_code" mapping="['territory_code']" domain="string"/>
                <param name="okato.value" mapping="['okato']" domain="string"/>
                <param name="own.id" mapping="['ownership_pattern_id']" domain="integer"/>
                <param name="title_right_support" mapping="['title_right_support']" domain="string"/>
                <param name="from_dt" mapping="['from_dt']" domain="date"/>
                <param name="to_dt" mapping="['to_dt']" domain="date"/>
                <param name="address.id" mapping="['address_id']" domain="integer"/>
                <!--   -->
                <param name="nearest_station_name" mapping="['nearest_station_name']" domain="string" />
                <param name="nearest_station_distance" mapping="['nearest_station_distance']" domain="numeric" />
                <param name="nearest_airport_name" mapping="['nearest_airport_name']" domain="string" />
                <param name="nearest_airport_distance" mapping="['nearest_airport_distance']" domain="numeric" />
                <param name="nearest_bus_station_name" mapping="['nearest_bus_station_name']" domain="string" />
                <param name="nearest_bus_station_distance" mapping="['nearest_bus_station_distance']" domain="numeric" />
                <param name="nearest_helipad_name" mapping="['nearest_helipad_name']" domain="string" />
                <param name="nearest_helipad_distance" mapping="['nearest_helipad_distance']" domain="numeric" />
                <param name="main_road_name" mapping="['main_road_name']" domain="string" />
                <!--   -->
                <param name="note" mapping="['note']" domain="string"/>
                <param name="land.id" mapping="['id']" domain="integer"/>
                <param name="org.id" mapping="['org_id']" domain="integer" value="#{stocks.orgId}"/> <!-- for validation -->
            </in-parameters>
            <success-text>
                Земельный участок "{code}" успешно изменен.
            </success-text>
            <validations activate="whiteList">
                <validation ref-id="is_land_with_code_already_exists"/>
            </validations>
        </action>

        <action id="delete" form-submit-label="Удалить" name="Удалить">
            <invocation>
                <n2o:sql>
                    delete from public.pim_land where id = :id;
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="land.id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <confirmation-text>
                Вы уверены, что земельный участок "{code}" должен быть удален?
            </confirmation-text>
            <validations activate="nothing">
                <validation ref-id="refFrom_pim_building_Exists"/>
            </validations>

            <success-text>
                Земельный участок "{code}" успешно удален.
            </success-text>
        </action>
    </actions>

    <validations>

        <constraint id="refFrom_pim_building_Exists" level="error">
            <message>Невозможно завершить операцию. Существуют записи зданий, которые ссылаются на данную запись.</message>
            <invocation>
                <n2o:sql>
                    select count(1) from pim_building bld
                    where bld.land_id = :id
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="land.id" mapping="['id']"/>
            </in-parameters>
            <result expression="[0][0][0]==0"/>
        </constraint>

        <constraint id="is_land_with_code_already_exists" level="error">
            <message>В заданном интервале времени уже существует площадка с указанным идентификатором</message>
            <invocation>
                <n2o:sql>
                <![CDATA[
                    select count(1) from pim_land
                    where trim(upper(code)) = trim(upper(:code)) and org_id = :org_id and (:id isnull or id <> :id)
                    and ( (to_dt isnull and :to_dt::date isnull) or (from_dt isnull and :from_dt::date isnull ) or
                    ( (coalesce( from_dt,       date '-infinity'),coalesce(  to_dt, date       'infinity') ) OVERLAPS
                      (coalesce(:from_dt::date, date '-infinity'),coalesce( :to_dt::date, date 'infinity') ) ) )
                ]]>
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="land.id" mapping="['id']" domain="integer"/>
                <param name="org.id" mapping="['org_id']"/>
                <param name="code" mapping="['code']"/>
                <param name="from_dt" mapping="['from_dt']" domain="date"/>
                <param name="to_dt" mapping="['to_dt']" domain="date"/>
            </in-parameters>
            <result expression="[0][0][0]==0"/>
        </constraint>
    </validations>


</object>
