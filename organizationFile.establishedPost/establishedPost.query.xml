<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">

    <object-id>establishedPost</object-id>

    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from pim_position pos
                LEFT OUTER JOIN pim_organization po ON (pos.organization_id = po.id)
                left outer join pim_department dep on (pos.department_id = dep.id)
                left join pim_department_type pdt on (pdt.id = dep.type_id)
                left join pim_department_kind pdk on (pdk.id = dep.kind_id)
                left outer join pim_speciality spec on (pos.speciality_id = spec.id)
                left outer join pim_position_role role on (pos.role_id = role.id)
                left outer join pim_position_category poscat on (role.category_id = poscat.id)
                left join pim_org_staff_events event1 on (event1.id = pos.staff_event1)
                left join pim_org_staff_events event2 on (event1.id = pos.staff_event2)
                where :where
                order by :order, pos.name
            </n2o:items-query>
            <n2o:count-query>
                select count(pos)
                from pim_position pos
                left outer join pim_department dep on (pos.department_id = dep.id)
                left join pim_department_type pdt on (pdt.id = dep.type_id)
                left join pim_department_kind pdk on (pdk.id = dep.kind_id)
                left outer join pim_speciality spec on (pos.speciality_id = spec.id)
                left outer join pim_position_role role on (pos.role_id = role.id)
                left outer join pim_position_category poscat on (role.category_id = poscat.id)
                left join pim_org_staff_events event1 on (event1.id = pos.staff_event1)
                left join pim_org_staff_events event2 on (event1.id = pos.staff_event2)
                where :where
            </n2o:count-query>
            <n2o:alias>pos</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>

        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>pos.id</expression>
            <filters auto-generate="true"/>
            <display/>
        </field>

        <field>
            <id>pos.id</id>
            <domain>integer</domain>
            <expression>pos.id</expression>
            <filters auto-generate="true"/>
            <display/>
        </field>

        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <expression>pos.organization_id</expression>
            <filters>
                <filter type="eq" default-value="#{stocks.orgId}" filter-field="org.id">
                    pos.organization_id = :org.id
                </filter>
            </filters>
            <display/>
        </field>

        <field>
            <id>org.name</id>
            <domain>string</domain>
            <expression>po.short_name</expression>
            <display/>
        </field>

        <field>
            <id>dep.id</id>
            <domain>integer</domain>
            <expression>dep.id</expression>
            <filters auto-generate="true">
                <filter type="eq" filter-field="dep.id">dep.id = :dep.id</filter>
            </filters>
            <display/>
        </field>

        <field>
            <id>dep.name</id>
            <domain>string</domain>
            <expression>dep.name</expression>
            <display/>
        </field>

        <field>
            <id>code</id>
            <domain>string</domain>
            <expression>pos.code</expression>
            <filters>
                <filter type="eq" filter-field="code">trim(upper(pos.code)) like trim(upper('%'||:code||'%'))</filter>
            </filters>
            <display/>
        </field>

        <field>
            <id>pos_name</id>
            <domain>string</domain>
            <expression>pos.name</expression>
            <filters>
                <filter type="eq" filter-field="pos_name">trim(upper(pos.name)) like trim(upper('%'||:pos_name||'%'))</filter>
            </filters>
            <display/>
        </field>

        <field>
            <id>role.id</id>
            <domain>integer</domain>
            <expression>role.id</expression>
            <filters auto-generate="true">
                <filter type="eq" filter-field="role.id">role.id = :role.id</filter>
            </filters>
            <display/>
        </field>

        <field>
            <id>role.name</id>
            <domain>string</domain>
            <expression>role.name</expression>
            <display/>
        </field>

        <field>
            <id>rate</id>
            <domain>numeric</domain>
            <expression>pos.rate</expression>
            <display/>
        </field>

        <field>
            <id>prevRate</id>
            <domain>numeric</domain>
            <expression>pos.rate</expression>
            <display/>
        </field>

        <field>
            <id>poscat.id</id>
            <domain>integer</domain>
            <expression>poscat.id</expression>
            <display/>
        </field>

        <field>
            <id>poscat.name</id>
            <domain>string</domain>
            <expression>poscat.name</expression>
            <display/>
        </field>

        <field>
            <id>spec.id</id>
            <domain>integer</domain>
            <expression>spec.id</expression>
            <filters auto-generate="true">
                <filter type="eq" filter-field="spec.id">spec.id = :spec.id</filter>
            </filters>
            <display/>
        </field>

        <field>
            <id>spec.name</id>
            <domain>string</domain>
            <expression>spec.name</expression>
            <display/>
        </field>

        <field>
            <id>pref_prescription</id>
            <domain>boolean</domain>
            <expression>pos.pref_prescription</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>


        <field>
            <id>payment_fond</id>
            <domain>boolean</domain>
            <expression>pos.payment_fond</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>

        <field>
            <id>funding_type.id</id>
            <domain>integer</domain>
            <expression>1=1</expression>
            <filters auto-generate="true">
                <filter type="eq" filter-field="funding_type.id">
                    exists (
                        select distinct funding_type_id
                        from pim_position_funding
                        where position_id = pos.id and funding_type_id = :funding_type.id
                    )
                </filter>
            </filters>
            <display/>
        </field>

        <field>
            <id>department_kind.id</id>
            <domain>integer</domain>
            <expression>pdk.id</expression>
            <filters auto-generate="true"/>
            <display/>
        </field>

        <field>
            <id>department_type.id</id>
            <domain>integer</domain>
            <expression>pdt.id</expression>
            <filters auto-generate="true"/>
            <display/>
        </field>

        <field>
            <id>start_date</id>
            <domain>date</domain>
            <expression>pos.start_date</expression>
            <filters auto-generate="true"/>
            <display/>
        </field>

        <field>
            <id>end_date</id>
            <domain>date</domain>
            <expression>pos.end_date</expression>
            <filters auto-generate="true"/>
            <display/>
        </field>

        <field>
            <id>status.id</id>
            <domain>integer</domain>
            <expression>1=1</expression>
            <filters auto-generate="true">
                <filter type="eq" filter-field="status.id"><![CDATA[
                    (case
                      when :status.id = 1 then (pos.end_date isnull or pos.end_date >= current_date)
                      when :status.id = 2 then (pos.end_date notnull and pos.end_date < current_date)
                      when :status.id = 3 then true
                     end)
                    ]]>
                </filter>
            </filters>
            <display/>
        </field>

        <field>
            <id>fact_rate</id>
            <domain>numeric</domain>
            <expression>
                (select sum(coalesce(pep.rate,0)) from pim_employee_position pep
                  where pep.position_id = pos.id and pep.end_date isnull)
            </expression>
            <display/>
        </field>

        <field>
            <id>maleName</id>
            <domain>string</domain>
            <expression>
                (select name from pim_position_name ppn
                where ppn.position_id = pos.id and ppn.sex_id = 1 limit 1)
            </expression>
            <display/>
        </field>

        <field>
            <id>femaleName</id>
            <domain>string</domain>
            <expression>
                (select name from pim_position_name ppn
                where ppn.position_id = pos.id and ppn.sex_id = 2 limit 1)
            </expression>
            <display/>
        </field>

        <field>
            <id>staff_event1.id</id>
            <domain>integer</domain>
            <expression>event1.id</expression>
            <display/>
        </field>

        <field>
            <id>staff_event1.name</id>
            <domain>string</domain>
            <expression>event1.name</expression>
            <display/>
        </field>

        <field>
            <id>staff_event2.id</id>
            <domain>integer</domain>
            <expression>event2.id</expression>
            <display/>
        </field>

        <field>
            <id>staff_event2.name</id>
            <domain>string</domain>
            <expression>event2.name</expression>
            <display/>
        </field>

    </fields>

</query>