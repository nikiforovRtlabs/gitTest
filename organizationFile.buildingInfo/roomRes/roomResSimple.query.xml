<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-3.0">
    <object-id>roomResSimple</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from sr_resource r
                inner join pim_room_resource rr on rr.id=r.id
                inner join pim_room rm on rm.id=rr.room_id
                left join pim_room_type rt on rt.id=rm.type_id
                left join sr_res_kind rk on rk.id=r.res_kind_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(r)
                from sr_resource r
                inner join pim_room_resource rr on rr.id=r.id
                inner join pim_room rm on rm.id=rr.room_id
                left join pim_room_type rt on rt.id=rm.type_id
                left join sr_res_kind rk on rk.id=r.res_kind_id
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>oid</id>
            <domain>integer</domain>
            <expression>r.id</expression>
            <display/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>room_id</id>
            <domain>integer</domain>
            <expression>rr.room_id</expression>
            <display/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>power</id>
            <domain>integer</domain>
            <expression>r.power</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>code</id>
            <domain>string</domain>
            <expression>r.code</expression>
            <display/>
            <sorting/>
            <filters>
                <filter type="eq" filter-field="code">
                    upper(:expression) like '%'||upper(:code)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>res_kind.oid</id>
            <domain>integer</domain>
            <expression>rk.id</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>res_kind.name</id>
            <domain>string</domain>
            <expression>rk.name</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>id_name</id>
            <domain>string</domain>
            <expression>
                rm.id || '~' || format('%s %s', rt.name, rm.name)
            </expression>
            <display/>
            <filters auto-generate="true"/>
        </field>
    </fields>
</query>
