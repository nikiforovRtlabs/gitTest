<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>hosp_lab_dep</id>-->
    <object-id>hosp_classifier</object-id>

    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select 
                from pim_department d 
                where :where 
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*) 
                from pim_department d 
                where :where
            </n2o:count-query>
            <n2o:alias>d</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <display/>
            <expression>d.id</expression>
            <filters>
                <filter type="eq" filter-field="id">
                    :expression = :id
                </filter>
            </filters>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <display/>
            <expression>d.name</expression>
            <filters>
                <filter type="eq" filter-field="name">
                    upper(:expression) like '%'||upper(:name)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>organizationId</id>
            <domain>integer</domain>
            <display/>
            <expression>d.org_id</expression>
            <filters>
                <filter type="eq" filter-field="organizationId">
                    :expression = :organizationId
                </filter>
            </filters>
        </field>
        <field>
            <id>date</id>
            <domain>date</domain>
            <filters>
                <filter type="eq" filter-field="date">
                    <![CDATA[
                    (
                    d.from_dt is null and d.to_dt is null or
                    (d.from_dt is null or d.from_dt <= to_date(:date, 'yyyy-MM-dd') and
                    (d.to_dt is null or d.to_dt >= to_date(:date, 'yyyy-MM-dd'))
                    )
                    )
                    ]]>    
                </filter>
            </filters>
        </field>
        <field>
            <id>type</id>
            <domain>integer</domain>
            <expression>d.type_id</expression>
            <filters>
                <filter type="eq" filter-field="type">
                    :expression = :type
                </filter>
            </filters>
        </field>
    </fields>

</query>