<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>laboratoryResearch</id>-->
    <name>Направление на лабораторное исследование</name>
    <object-id>laboratoryResearch</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from public.md_referral mr
                join public.pim_individual pi on pi.id = mr.patient_id
                left join public.md_patient_parameters_for_research mppfr on mppfr.referral_id = mr.id

                join public.md_referral_service mrs on mrs.referral_id = mr.id
                join public.sr_service ss on ss.id = mrs.service_id
                left join public.md_clinic_laboratory_research mclr on mclr.service_id = ss.id
                left join public.md_clinic_biomaterial mcb on mcb.id = mrs.biomaterial_id

                left join public.pim_employee_position_resource pepr on pepr.employee_position_id = mr.ref_doctor_id

                where :where
                order by :order
            </n2o:items-query>

            <n2o:count-query>
                select count(*)
                from public.md_referral mr
                join public.pim_individual pi on pi.id = mr.patient_id
                left join public.md_patient_parameters_for_research mppfr on mppfr.referral_id = mr.id

                join public.md_referral_service mrs on mrs.referral_id = mr.id
                join public.sr_service ss on ss.id = mrs.service_id
                left join public.md_clinic_laboratory_research mclr on mclr.service_id = ss.id
                left join public.md_clinic_biomaterial mcb on mcb.id = mrs.biomaterial_id

                left join public.pim_employee_position_resource pepr on pepr.employee_position_id = mr.ref_doctor_id

                where :where
            </n2o:count-query>
            <n2o:alias>mr</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <display/>
            <expression>mr.id</expression>
            <filters>
                <filter type="eq" filter-field="id">
                    :expression = :id
                </filter>
            </filters>
        </field>

        <field>
            <id>patient.id</id>
            <domain>integer</domain>
            <display/>
            <expression>mr.patient_id</expression>
            <filters>
                <filter type="eq" filter-field="patient.id">
                    :expression = :patient.id
                </filter>
            </filters>
        </field>
        <field>
            <id>patient.genderId</id>
            <domain>integer</domain>
            <display/>
            <expression>pi.gender_id</expression>
        </field>
        <field>
            <id>patient.name</id>
            <domain>string</domain>
            <display/>
            <expression>pi.surname||' '||pi.name||' '||pi.patr_name||'('||to_char(pi.birth_dt,'dd.mm.yyyy')||')'</expression>
        </field>

        <field>
            <id>referral_date</id>
            <domain>date</domain>
            <name>Дата направления</name>
            <display/>
            <expression>mr.referral_date</expression>
        </field>          
        <field>
            <id>order_number</id>
            <domain>string</domain>
            <name>Номер направления</name>
            <display/>
            <expression>mr.order_number</expression>
        </field>
        <field>
            <id>diagnosis.id</id>
            <domain>integer</domain>
            <name>Диагноз</name>
            <display/>
            <expression>mr.diagnosis_id</expression>
        </field>
        <field>
            <id>CITO</id>
            <domain>boolean</domain>
            <name>CITO (Признак срочности)</name>
            <display/>
            <expression>mr.is_urgent</expression>
        </field>
        <field>
            <id>comment</id>
            <domain>string</domain>
            <name>Особые примечания</name>
            <display/>
            <expression>mrs.comment</expression>
        </field>
        
        <field>
            <id>ref_org.id</id>
            <domain>integer</domain>
            <display/>
            <expression>mr.ref_organization_id</expression>
        </field>
        <field>
            <id>ref_dep.id</id>
            <domain>integer</domain>
            <name>Отделение</name>
            <display/>
            <expression>mr.ref_department_id</expression>
        </field>
        <field>
            <id>ref_doc.id</id>
            <domain>integer</domain>
            <name>Специалист</name>
            <display/>
            <!--<expression>mr.ref_doctor_id</expression>-->
            <expression>pepr.id</expression>
        </field>

        <field>
            <id>recv_org.id</id>
            <domain>integer</domain>
            <name>Организация</name>
            <display/>
            <expression>mr.recv_organization_id</expression>
        </field>
        <field>
            <id>recv_dep.id</id>
            <domain>integer</domain>
            <name>Отделение</name>
            <display/>
            <expression>mr.department_id</expression>
        </field>

        <field>
            <id>ref_service.id</id>
            <domain>integer</domain>
            <display/>
            <expression>mrs.id</expression>
        </field>
        
        <!--<field>-->
            <!--<id>ref_servise*.id</id>-->
            <!--<domain>integer[]</domain>-->
            <!--<display/>-->
            <!--<expression>mrs.id</expression>-->
            <!--<filters>-->
                <!--<filter type="in" filter-field="ref_services*.id">-->
                    <!--:expression in (ref_servise*.id)-->
                <!--</filter>-->
            <!--</filters>-->
        <!--</field>-->
        
        <field>
            <id>research.id</id>
            <domain>integer</domain>
            <name>Исследование</name>
            <display/>
            <expression>ss.id</expression>
        </field>
        <!--<field>-->
            <!--<id>research.defBiomaterial</id>-->
            <!--<domain>integer</domain>-->
        <!--</field>-->
        <field>
            <id>biomaterial.id</id>
            <domain>integer</domain>
            <name>Биоматериал</name>
            <display/>
            <expression>mcb.id</expression>
        </field>

        <field>
            <id>pat_param.id</id>
            <domain>integer</domain>
            <display/>
            <expression>mppfr.id</expression>
        </field>
        
        <field>
            <id>phase.id</id>
            <domain>integer</domain>
            <name>Фаза цикла</name>
            <display/>
            <expression>mppfr.phase_id</expression>
        </field>
        <field>
            <id>gestational_age</id>
            <domain>integer</domain>
            <name>Срок беременности (недель)</name>
            <display/>
            <expression>mppfr.gestational_age</expression>
        </field>

        <field>
            <id>ref_doc_status.id</id>
            <domain>integer</domain>
            <display/>
            <expression>mr.status_id</expression>
        </field>
        
        <field>
            <id>is_done</id>
            <domain>boolean</domain>
            <display/>
            <expression>
                case when mr.status_id = (select id from public.md_ref_document_status where trim(code) = '4')
                    then true
                    else false
                end
            </expression>
        </field>

        <field>
            <id>stepId</id>
            <domain>integer</domain>
            <display/>
            <expression>mr.step_id</expression>
        </field>

        <field>
            <id>orgRole</id>
            <domain>integer</domain>
            <display/>
            <expression>
                (select id from public.pim_party_role where upper(trim(code)) = 'MD_LABORATORY')
            </expression>
        </field>

        <field>
            <id>depRole</id>
            <domain>integer</domain>
            <display/>
            <expression>
                (select id from public.pim_department_type where trim(code) = '11')
            </expression>
        </field>
        <field>
            <id>isComplex</id>
            <domain>boolean</domain>
            <display/>
            <expression>
                exists(select 1
                from md_referral_service xmrs
                where xmrs.referral_id = mr.id AND xmrs.main_complex = true)
            </expression>
        </field>

        <field>
            <id>complexResearch</id>
            <domain>object</domain>
            <display/>
            <expression>
                (select row_to_json(r) from(
                select
                ss1.id as id,
                (concat('[+] ',ss1.code,' ', ss1.name)) as name,
                (
                select array_agg(s1.id) from sr_service s1
                join sr_srv_composition sc1 on s1.id = sc1.service_id
                where sc1.complex_id = ss1.id and sc1.is_required = true
                ) as "requiredFieldsIds"
                from md_referral_service mrs
                left join sr_service ss1 on ( mrs.service_id = ss1.id )
                where mrs.main_complex is true and mrs.referral_id = mr.id
                order by mrs.id limit 1)r)
            </expression>
        </field>

        <field>
            <id>researchChild</id>
            <domain>object[]</domain>
            <display/>
            <expression>
                (select array_to_json(array_agg(r)) from (
                select
                ss1.id as id,
                (case
                    when (exists(select 1 from md_referral_service xmrs
                                 where xmrs.referral_id = mr.id AND xmrs.main_complex = true)) is true
                    then
                        (case when sc.is_required is true then concat('[!] ',ss1.code,' ', ss1.name) else concat(ss1.code,' ', ss1.name)
                end )
                else concat(ss1.code,' ', ss1.name)
                end) as name
                from md_referral_service mrs
                left join sr_service ss1 on ( mrs.service_id = ss1.id )
                left join sr_srv_composition sc on mrs.service_id = sc.service_id and sc.complex_id = ss.id
                where mrs.main_complex is not true and mrs.referral_id = mr.id and mrs.service_id is not null
                order by mrs.id) as r)
            </expression>
        </field>

        <field>
            <id>serviceIdList</id>
            <domain>integer[]</domain>
            <display/>
            <expression>(select array_to_json(array_agg(r)) from (
                select
                mrs.id as id
                from md_referral_service mrs
                where mrs.referral_id = mr.id
                order by mrs.id) as r)
            </expression>
        </field>
    </fields>
</query>