<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">

    <object-id>movePatient</object-id>

    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select from hsp_record rec
                inner join mc_step step on step.id = rec.id
                inner join mc_case c on c.id = step.case_id
                inner join pci_patient pat on pat.id = c.patient_id
                inner join pim_individual i on i.id = pat.id
                left outer join pim_department dep on dep.id = rec.department_id
                left outer join fin_funding_source_type fun on fun.id = rec.funding_id
                left outer join md_profile p on p.id = step.profile_id
                left outer join mc_diagnosis cd on cd.id = step.main_diagnosis_id
                left outer join md_diagnosis d on d.id = cd.diagnos_id
                left outer join mc_step_result stepResult on stepResult.id = step.result_id
                left outer join mc_step_care_result stepCareResult on stepCareResult.id = step.outcome_id
                left outer join md_standard standard on standard.id = step.standard_id
                left outer join md_clinical_statistical_group csg on csg.id = step.csg_id
                left outer join sr_res_group rg on rg.id = step.res_group_id
                left outer join pim_employee_position_resource epr on epr.employee_position_id = rg.responsible_id
                left outer join md_bed_profile bf on bf.id = rec.bed_profile_id
                where :where
                order by :order
            </n2o:items-query>

            <n2o:count-query>
                select count(1) from hsp_record rec
                inner join mc_step step on step.id = rec.id
                inner join mc_case c on c.id = step.case_id
                inner join pci_patient pat on pat.id = c.patient_id
                inner join pim_individual i on i.id = pat.id
                left outer join pim_department dep on dep.id = rec.department_id
                left outer join fin_funding_source_type fun on fun.id = rec.funding_id
                left outer join md_profile p on p.id = step.profile_id
                left outer join mc_diagnosis cd on cd.id = step.main_diagnosis_id
                left outer join md_diagnosis d on d.id = cd.diagnos_id
                left outer join mc_step_result stepResult on stepResult.id = step.result_id
                left outer join mc_step_care_result stepCareResult on stepCareResult.id = step.outcome_id
                left outer join md_standard standard on standard.id = step.standard_id
                left outer join md_clinical_statistical_group csg on csg.id = step.csg_id
                left outer join sr_res_group rg on rg.id = step.res_group_id
                left outer join pim_employee_position_resource epr on epr.employee_position_id = rg.responsible_id
                left outer join md_bed_profile bf on bf.id = rec.bed_profile_id
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>

        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>id</name>
            <expression>rec.id</expression>
            <search>:expression = :id</search>
        </field>

        <!--Отделение-->
        <field>
            <id>admissionDepartment.id</id>
            <domain>integer</domain>
            <expression>dep.id</expression>
        </field>

        <field>
            <id>admissionDepartment.name</id>
            <domain>string</domain>
            <expression>dep.name</expression>
        </field>

        <!--Профиль-->
        <field>
            <id>profile.id</id>
            <domain>integer</domain>
            <expression>p.id</expression>
        </field>

        <field>
            <id>profile.name</id>
            <domain>string</domain>
            <expression>p.name</expression>
        </field>

        <!--Условие оказания-->
        <field>
            <id>careRegimen.id</id>
            <domain>integer</domain>
            <expression>step.regimen_id</expression>
        </field>

        <!--Лечащий врач-->
        <field>
            <id>resGroupId</id>
            <domain>integer</domain>
            <expression>step.res_group_id</expression>
        </field>

        <field>
            <id>doctor.id</id>
            <domain>integer</domain>
            <expression>epr.id</expression>
        </field>

        <!--Вид оплаты-->
        <field>
            <id>financialType.id</id>
            <domain>integer</domain>
            <expression>fun.id</expression>
        </field>

        <field>
            <id>financialType.name</id>
            <domain>string</domain>
            <expression>fun.name</expression>
        </field>

        <!--Дата поступления-->
        <field>
            <id>admissionDate</id>
            <domain>date</domain>
            <expression>
                step.admission_date + coalesce(step.admission_time, '00:00')
            </expression>
        </field>

        <!--Диагноз по МКБ-->
        <field>
            <id>diagnosis.id</id>
            <domain>integer</domain>
            <expression>d.id</expression>
        </field>

        <field>
            <id>caseDiagnosisId</id>
            <domain>integer</domain>
            <expression>cd.id</expression>
        </field>

        <!--Дата выписки-->
        <field>
            <id>outcomeDate</id>
            <domain>date</domain>
            <expression>
                (case when step.outcome_time is null then step.outcome_date else
                step.outcome_date + step.outcome_time end)
            </expression>
        </field>

        <!--Результат госпитализации-->
        <field>
            <id>stepResult.id</id>
            <domain>integer</domain>
            <expression>stepResult.id</expression>
        </field>

        <field>
            <id>stepResult.name</id>
            <domain>string</domain>
            <expression>stepResult.name</expression>
        </field>

        <!--Исход госпитализации-->
        <field>
            <id>outcome.id</id>
            <domain>integer</domain>
            <expression>stepCareResult.id</expression>
        </field>

        <field>
            <id>outcome.name</id>
            <domain>string</domain>
            <expression>stepCareResult.name</expression>
        </field>

        <!--Код стандарта-->
        <field>
            <id>standard.id</id>
            <domain>integer</domain>
            <expression>standard.id</expression>
        </field>

        <field>
            <id>standard.name</id>
            <domain>string</domain>
            <expression>standard.name</expression>
        </field>

        <!--Следующий ЗОГ-->
        <field>
            <id>nextHospitalRecordId</id>
            <domain>integer</domain>
            <expression>(select id from hsp_record where previous_id = rec.id)</expression>
        </field>

        <!--<field>-->
            <!--<id>nextDepartment.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>-->
                <!--(select d.id from hsp_record r-->
                <!--inner join pim_department d on r.department_id = d.id and r.previous_id = rec.id)-->
            <!--</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>nextDepartment.name</id>-->
            <!--<domain>string</domain>-->
            <!--<expression>-->
                <!--(select d.name from hsp_record r-->
                <!--inner join pim_department d on r.department_id = d.id and r.previous_id = rec.id)-->
            <!--</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>nextCareRegimen.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>-->
                <!--(select cr.id from hsp_record r-->
                <!--inner join mc_step st on st.id = r.id and  r.previous_id = rec.id-->
                <!--inner join mc_care_regimen cr on st.regimen_id = cr.id )-->
            <!--</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>nextCareRegimen.name</id>-->
            <!--<domain>string</domain>-->
            <!--<expression>-->
                <!--(select cr.name from hsp_record r-->
                <!--inner join mc_step st on st.id = r.id and  r.previous_id = rec.id-->
                <!--inner join mc_care_regimen cr on st.regimen_id = cr.id)-->
            <!--</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>nextFinancialType.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>-->
                <!--(select f.id from hsp_record r-->
                <!--inner join fin_funding_source_type f on r.funding_id = f.id and r.previous_id = rec.id)-->
            <!--</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>nextFinancialType.name</id>-->
            <!--<domain>string</domain>-->
            <!--<expression>-->
                <!--(select f.name from hsp_record r-->
                <!--inner join fin_funding_source_type f on r.funding_id = f.id and r.previous_id = rec.id)-->
            <!--</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>nextProfile.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>-->
                <!--(select p.id from hsp_record r-->
                <!--inner join mc_step st on st.id = r.id and  r.previous_id = rec.id-->
                <!--inner join md_profile p on st.profile_id = p.id)-->
            <!--</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>nextProfile.name</id>-->
            <!--<domain>string</domain>-->
            <!--<expression>-->
                <!--(select p.name from hsp_record r-->
                <!--inner join mc_step st on st.id = r.id and  r.previous_id = rec.id-->
                <!--inner join md_profile p on st.profile_id = p.id)-->
            <!--</expression>-->
        <!--</field>-->

        <field>
            <id>mes.id</id>
            <domain>integer</domain>
            <expression>step.mes_id</expression>
        </field>

        <field>
            <id>mesQualityCriterion.id</id>
            <domain>integer</domain>
            <expression>step.mes_quality_criterion_id</expression>
        </field>

        <field>
            <id>csg.id</id>
            <domain>integer</domain>
            <expression>step.csg_id</expression>
        </field>

        <field>
            <id>csg.name</id>
            <domain>string</domain>
            <expression>csg.name</expression>
        </field>

        <field>
            <id>vmp.id</id>
            <domain>integer</domain>
            <expression>step.vmp_type_id</expression>
        </field>

        <field>
            <id>vmpMethod.id</id>
            <domain>integer</domain>
            <expression>step.vmp_method_id</expression>
        </field>

        <field>
            <id>ageGroupId</id>
            <domain>integer</domain>
            <expression><![CDATA[(case when i.birth_dt is null then 3 else case when extract(year from AGE(NOW(), i.birth_dt)) <= 17 then 2 else 1 end end)]]></expression>
        </field>

        <field>
            <id>patientId</id>
            <domain>integer</domain>
            <expression>c.patient_id</expression>
        </field>

        <field>
            <id>caseId</id>
            <domain>integer</domain>
            <expression>c.id</expression>
        </field>


        <field>
            <id>create</id>
            <domain>boolean</domain>
            <display>:create</display>
            <search unavailable="true"/>
            <sorting unavailable="true"/>
        </field>

        <field>
            <id>previousId</id>
            <domain>integer</domain>
            <expression>rec.previous_id</expression>
        </field>

        <field>
            <id>bedProfile.id</id>
            <domain>integer</domain>
            <expression>bf.id</expression>
        </field>


        <!--&lt;!&ndash;todo Проброс параметров &ndash;&gt;-->
        <!--<field>-->
            <!--<id>case.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>step.case_id</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>case.patient.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>(select patient_id from mc_case where id = step.case_id)</expression>-->
        <!--</field>-->
        <field>
            <id>clinicId</id>
            <domain>integer</domain>
            <expression>c.clinic_id</expression>
        </field>

        <field>
            <id>missedDaysAmount</id>
            <domain>integer</domain>
            <expression>rec.missed_days_amount</expression>
        </field>

        <field>
            <id>diagnosis</id>
            <domain>object</domain>
            <expression>(select get_diagnosis_init(d.id, (select array_agg(attr_value_id) from mc_diag_attr where diagnosis_id = cd.id)))</expression>
        </field>

        <field>
            <id>deviationReason.id</id>
            <domain>integer</domain>
            <expression>step.deviation_reason_id</expression>
        </field>
        <field>
            <id>complexityLevel.id</id>
            <domain>integer</domain>
            <expression>rec.complexity_level_id</expression>
        </field>
        <field>
            <id>setMesByDiagnosis</id>
            <domain>boolean</domain>
            <expression>(select coalesce((select sv.value::boolean from cmn_setting s
                join cmn_setting_value sv on sv.setting_id = s.id
                join cmn_scope sc on sc.id = sv.scope_id
                join cmn_scope_type st on st.id = sc.type_id
                where st.code = 'Global' and s.code='cz.atria.medcase.ui.MedicalCaseUISettings.setMesByDiagnosis' limit 1), s.default_value::boolean) from cmn_setting s
                where s.code='cz.atria.medcase.ui.MedicalCaseUISettings.setMesByDiagnosis' limit 1)
            </expression>
        </field>

        <field>
            <id>isFinanceTypeControl</id>
            <domain>boolean</domain>
            <expression>coalesce(c.is_finance_type_control, false)</expression>
        </field>
    </fields>


</query>