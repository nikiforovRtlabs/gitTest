<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:n2o="http://n2oapp.net/framework/config/schema/action-invocation-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <name>Настройка печати</name>

    <fields>
        <field id="id" domain="integer"/>
        <field id="isMain" domain="boolean"/>
        <field id="block1top" domain="string"/>
        <field id="block1left" domain="string"/>
        <field id="block2top" domain="string"/>
        <field id="block2left" domain="string"/>
        <field id="block3top" domain="string"/>
        <field id="block3left" domain="string"/>
        <field id="registratorId" domain="integer"/>

    </fields>

    <actions>

        <action id="createPrintSetting">
            <invocation>
                <sql:sql>
                    select sickdoc.print_setting_create_or_update(
                    :id::integer,
                    :block1top::integer,
                    :block1left::integer,
                    :block2top::integer,
                    :block2left::integer,
                    :block3top::integer,
                    :block3left::integer,
                    :registrator_id::integer
                    );
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="block1top" mapping="['block1top']"/>
                <param name="block1left" mapping="['block1left']"/>
                <param name="block2top" mapping="['block2top']"/>
                <param name="block2left" mapping="['block2left']"/>
                <param name="block3top" mapping="['block3top']"/>
                <param name="block3left" mapping="['block3left']"/>
                <param name="registratorId" mapping="['registrator_id']" value="#{}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
        </action>

        <action id="deletePrintSetting">
            <invocation>
                <sql:sql>
                    select sickdoc.print_setting_delete(:id::integer);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
        </action>

        <action id="setMain">
            <invocation>
                <sql:sql>
                    select sickdoc.print_setting_set_main(:id::integer);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
        </action>

    </actions>

    <validations>
        <condition id="isNumberConditionBlock1top" level="error">
            <message>Значение должно быть числовым.</message>
            <expression on="quantity">
                <![CDATA[(typeof block1top == 'undefined') || (block1top == null) || (/^[0-9]*$/.test(block1top) == true)]]></expression>
        </condition>

        <condition id="isNumberConditionBlock2top" level="error">
            <message>Значение должно быть числовым.</message>
            <expression on="quantity">
                <![CDATA[(typeof block2top == 'undefined') || (block2top == null) || (/^[0-9]*$/.test(block2top) == true)]]></expression>
        </condition>

        <condition id="isNumberConditionBlock3top" level="error">
            <message>Значение должно быть числовым.</message>
            <expression on="quantity">
                <![CDATA[(typeof block3top == 'undefined') || (block3top == null) || (/^[0-9]*$/.test(block3top) == true)]]></expression>
        </condition>

        <condition id="isNumberConditionBlock1left" level="error">
            <message>Значение должно быть числовым.</message>
            <expression on="quantity">
                <![CDATA[(typeof block1left == 'undefined') || (block1left == null) || (/^[0-9]*$/.test(block1left) == true)]]></expression>
        </condition>

        <condition id="isNumberConditionBlock2left" level="error">
            <message>Значение должно быть числовым.</message>
            <expression on="quantity">
                <![CDATA[(typeof block2left == 'undefined') || (block2left == null) || (/^[0-9]*$/.test(block2left) == true)]]></expression>
        </condition>

        <condition id="isNumberConditionBlock3left" level="error">
            <message>Значение должно быть числовым.</message>
            <expression on="quantity">
                <![CDATA[(typeof block3left == 'undefined') || (block3left == null) || (/^[0-9]*$/.test(block3left) == true)]]></expression>
        </condition>

    </validations>
</object>
