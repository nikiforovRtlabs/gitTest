<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <object-id>itSystem</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from it_system s
                left join it_system_type st on st.id=s.type_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(s)
                from it_system s
                left join it_system_type st on st.id=s.type_id
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>s.id</expression>
            <filters auto-generate="true"/>
            <display/>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>s.name</expression>
            <display/>
            <sorting/>
            <filters>
                <filter type="eq" filter-field="name">
                    upper(:expression) like '%'||upper(:name)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>org_id</id>
            <domain>integer</domain>
            <expression>s.org_id</expression>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>type.oid</id>
            <domain>integer</domain>
            <expression>st.id</expression>
            <display/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>type.name</id>
            <domain>string</domain>
            <expression>st.name</expression>
            <display/>
            <sorting/>
        </field>
        <field>
            <id>developer_name</id>
            <domain>string</domain>
            <expression>s.developer_name</expression>
            <display/>
            <sorting/>
            <filters>
                <filter type="eq" filter-field="developer_name">
                    upper(:expression) like '%'||upper(:developer_name)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>implementation_date</id>
            <domain>date</domain>
            <expression>s.implementation_date</expression>
            <display/>
            <sorting/>
            <filters>
                <filter type="eq" filter-field="period">
                    <![CDATA[
                    ( :expression isnull or
                      ((:period.begin::date is null or :expression >= :period.begin) and
                      (:period.end::date is null or :expression <= :period.end))
                    )
                     ]]>
                </filter>
            </filters>
        </field>
        <field>
            <id>cost</id>
            <domain>numeric</domain>
            <expression>s.cost</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>is_on_support</id>
            <domain>boolean</domain>
            <expression>s.is_on_support</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>yearly_maintenance_cost</id>
            <domain>numeric</domain>
            <expression>s.yearly_maintenance_cost</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>period.begin</id>
            <domain>date</domain>
            <filters auto-generate="false"/>
        </field>
        <field>
            <id>period.end</id>
            <domain>date</domain>
            <filters auto-generate="false"/>
        </field>
    </fields>
</query>