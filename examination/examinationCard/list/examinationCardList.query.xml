<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">

    <object-id>examinationCard</object-id>

    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from qos_examination_card qec
                join mc_case c on c.id = qec.case_id
                join pci_patient p on p.id = c.patient_id
                join pim_individual i on i.id = p.id

                left join mc_step lastClinicStep on lastClinicStep.case_id = c.id
                    and lastClinicStep.admission_date + lastClinicStep.admission_time =
                    (select max(s1.admission_date + s1.admission_time) from mc_step s1
                    where s1.case_id = c.id) and c.case_type_id = 1

                left join (select s.id, s.case_id, hr.department_id, s.res_group_id
                from hsp_record hr
                join mc_step s on s.id = hr.id
                where not exists (select 1 from hsp_record h2 inner join mc_step s2 on s2.id = h2.id and h2.previous_id = hr.id)
                ) lastHspStep on lastHspStep.case_id = c.id and c.case_type_id = 2

                left join mc_step lastStep on (lastStep.id = lastClinicStep.id and c.case_type_id = 1) or (lastStep.id = lastHspStep.id and c.case_type_id = 2)
                left join sr_res_group lastStepResGroup on lastStepResGroup.id = lastStep.res_group_id
                left join pim_department lastStepDep on (lastStepDep.id = lastStepResGroup.department_id and c.case_type_id = 1) or (lastStepDep.id = lastHspStep.department_id and c.case_type_id = 2)

                left join mc_diagnosis mcdiag on mcdiag.id = c.main_diagnos_id
                left join md_diagnosis diag on diag.id = mcdiag.diagnos_id

                left join sr_res_group res on res.id = qec.res_group_id
                left join qos_exam_card_control_level cl on cl.id = qec.control_level_id

                LEFT JOIN sr_resource sr ON qec.resource_id = sr.id

                where :where and c.case_type_id in (1, 2)
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(qec)
                from qos_examination_card qec
                join mc_case c on c.id = qec.case_id
                join pci_patient p on p.id = c.patient_id
                join pim_individual i on i.id = p.id

                left join mc_step lastClinicStep on lastClinicStep.case_id = c.id
                    and lastClinicStep.admission_date + lastClinicStep.admission_time =
                    (select max(s1.admission_date + s1.admission_time) from mc_step s1
                    where s1.case_id = c.id) and c.case_type_id = 1

                left join (select s.id, s.case_id, hr.department_id, s.res_group_id
                from hsp_record hr
                join mc_step s on s.id = hr.id
                where not exists (select 1 from hsp_record h2 inner join mc_step s2 on s2.id = h2.id and h2.previous_id = hr.id)
                ) lastHspStep on lastHspStep.case_id = c.id and c.case_type_id = 2

                left join mc_step lastStep on (lastStep.id = lastClinicStep.id and c.case_type_id = 1) or (lastStep.id = lastHspStep.id and c.case_type_id = 2)
                left join sr_res_group lastStepResGroup on lastStepResGroup.id = lastStep.res_group_id
                left join pim_department lastStepDep on (lastStepDep.id = lastStepResGroup.department_id and c.case_type_id = 1) or (lastStepDep.id = lastHspStep.department_id and c.case_type_id = 2)

                left join mc_diagnosis mcdiag on mcdiag.id = c.main_diagnos_id
                left join md_diagnosis diag on diag.id = mcdiag.diagnos_id

                left join sr_res_group res on res.id = qec.res_group_id
                left join qos_exam_card_control_level cl on cl.id = qec.control_level_id

                where :where and c.case_type_id in (1, 2)
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>

        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>qec.id</expression>
        </field>

        <field>
            <id>patient.id</id>
            <domain>integer</domain>
            <expression>p.id</expression>
        </field>

        <field>
            <id>patient.name</id>
            <domain>string</domain>
            <name>Пациент</name>
            <expression>i.surname
                || ' ' || case coalesce(substring(i.name for 1), '') when '' then '' else substring(i.name for 1) || '.' end
                || ' ' || case coalesce(substring(i.patr_name for 1), '') when '' then '' else substring(i.patr_name for 1) || '.' end
            </expression>
            <sorting>upper(i.surname), upper(i.name), upper(i.patr_name)</sorting>
            <search unavailable="true"/>
        </field>

        <field>
            <id>createDate</id>
            <domain>date</domain>
            <name>Дата проведения</name>
            <expression>qec.create_dt</expression>
            <sorting>:expression</sorting>
            <search><![CDATA[
                (:createDate.begin::date is null and :createDate.end::date is null or
                ((:createDate.begin::date is null or qec.create_dt >= :createDate.begin) and
                 (:createDate.end::date is null or qec.create_dt <= :createDate.end)
                ))
                ]]></search>
        </field>

        <field>
            <id>createDate.end</id>
            <domain>date</domain>
            <search value="null" unavailable="true"/>
            <display unavailable="true"/>
        </field>

        <field>
            <id>createDate.begin</id>
            <domain>date</domain>
            <search value="null" unavailable="true"/>
            <display unavailable="true"/>
        </field>

        <field>
            <id>buttons.id</id>
            <domain>integer</domain>
            <expression>1</expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>resGroup.name</id>
            <name>Ресурс</name>
            <domain>string</domain>
            <expression>res.name</expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>expert.id</id>
            <domain>integer</domain>
            <expression>(select id from pim_employee_position_resource where employee_position_id = res.responsible_id)</expression>
        </field>

        <field>
            <id>resource.id</id>
            <domain>integer</domain>
            <expression>qec.resource_id</expression>
        </field>

        <field>
            <id>department.name</id>
            <domain>string</domain>
            <name>Отделение</name>
            <expression>lastStepDep.name</expression>
        </field>

        <field>
            <id>department.id</id>
            <domain>integer</domain>
            <expression>lastStepDep.id</expression>
        </field>

        <field>
            <id>doctor.id</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search>
                (
                :doctor.id is null or :doctor.id = (
                    select epr.id from (
                        select distinct on (group_id) group_id, resource_id
                        from sr_res_group_relationship
                        where role_id = (select id from sr_res_role where code = 'DOCTOR' limit 1)
                        order by group_id, id
                    ) as firstDoctorRelation
                    left join sr_resource srr on srr.id = firstDoctorRelation.resource_id
                    left join pim_employee_position_resource epr on epr.id = srr.id
                    where firstDoctorRelation.group_id = lastStepResGroup.id
                    )
                )
            </search>
        </field>

        <field>
            <id>doctorName</id>
            <name>Лечащий врач</name>
            <domain>string</domain>
            <expression>
                (select
                    coalesce(ei.surname, '') ||
                    coalesce(' ' || substring(ei.name for 1) || '.', '') ||
                    coalesce(' ' || substring(ei.patr_name for 1) || '.', '')
                from (
                    select distinct on (group_id) group_id, resource_id
                    from sr_res_group_relationship
                    where role_id = (select id from sr_res_role where code = 'DOCTOR' limit 1)
                    order by group_id, id
                ) as firstDoctorRelation
                left join sr_resource srr on srr.id = firstDoctorRelation.resource_id
                left join pim_employee_position_resource epr on epr.id = srr.id
                left join pim_employee_position epos on epos.id = epr.employee_position_id
                left join pim_employee e on e.id = epos.employee_id
                left join pim_individual ei on e.individual_id = ei.id
                where firstDoctorRelation.group_id = lastStepResGroup.id
                )
            </expression>
        </field>

        <field>
            <id>diagnosis</id>
            <domain>string</domain>
            <name>Диагноз</name>
            <expression>diag.code || ' ' || diag.name</expression>
        </field>

        <field>
            <id>duration</id>
            <domain>integer</domain>
            <name>Длительность</name>
            <expression>
                (case when c.case_type_id = 2 then (select get_bed_day_amount_n2o(c.id))
                    else (case when c.closing_step_id is not null then close_date - open_date else now()::date - open_date end )
                end)
            </expression>
        </field>

        <field>
            <id>defectsExist</id>
            <domain>boolean</domain>
            <name>Обнаружены дефекты</name>
            <expression>(select count(1) > 0 from qos_exam_card_criteria_value where examination_card_id = qec.id)
            </expression>
        </field>

        <field>
            <id>ql_condition.name</id>
            <domain>string</domain>
            <display unavailable="true"/>
            <search unavailable="true"/>
        </field>

        <field>
            <id>qualityLevel</id>
            <domain>string</domain>
            <name>УКЛ</name>
            <expression>qec.quality_level</expression>
            <search>
                case when :ql_condition.name = '&lt;' then :expression &lt; :qualityLevel::double precision
                     when :ql_condition.name = '&gt;' then :expression &gt; :qualityLevel::double precision
                     when :ql_condition.name = '&lt;=' then :expression &lt;= :qualityLevel::double precision
                     when :ql_condition.name = '&gt;=' then :expression &gt;= :qualityLevel::double precision
                     else :expression = :qualityLevel::double precision end
            </search>
        </field>

        <field>
            <id>orgId</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search value="#{org.id?}">c.clinic_id = :orgId</search>
        </field>

        <field>
            <id>controlLevel.id</id>
            <domain>integer</domain>
            <expression>qec.control_level_id</expression>
        </field>

        <field>
            <id>controlLevelName</id>
            <name>Ступень</name>
            <domain>string</domain>
            <expression>coalesce(cl.code, cl.name)</expression>
        </field>

        <field>
            <id>regimenName</id>
            <domain>string</domain>
            <name>Условия оказания</name>
            <expression>(select name from mc_care_regimen where id = lastStep.regimen_id)</expression>
        </field>

        <field>
            <id>templateId</id>
            <domain>integer</domain>
            <expression>template_id</expression>
        </field>

    </fields>
</query>