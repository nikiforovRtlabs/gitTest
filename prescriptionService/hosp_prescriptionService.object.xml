<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-2.0">
    <name>Назначения</name>

    <actions>
        <action id="save" form-submit-label="Сохранить" name="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription-service
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="name" mapping="['name']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="duration" mapping="['duration']"/>
                <param name="srvDurationUnit.id" mapping="['srvDurationUnitId']"/>
                <param name="count" mapping="['count']"/>
                <param name="periodicity.id" mapping="['periodicityId']"/>
                <param name="visitTerm.id" mapping="['visitTermId']"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']"/>
                <param name="periodEndDt" mapping="['periodEndDt']"/>
                <param name="note" mapping="['note']"/>
                <param name="execution.id" mapping="['execution']"/>
                <param name="caseId" mapping="['caseId']"/>
                <param name="stepId" mapping="['stepId']"/>
                <param name="patientId" mapping="['patientId']"/>
                <param name="doctor.id" mapping="['doctorId']" value="#{emplPosRes.id?}"/>
                <param name="prescriptionId" mapping="['prescriptionId']"/>

            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="confirm" form-submit-label="Подтвердить" name="Подтвердить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription-service/confirm?prescriptionId={prescriptionId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="prescriptionId" mapping="['prescriptionId']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="cancel" form-submit-label="Сохранить" name="Отмена">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription-service/cancel
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="prescriptionId" mapping="['id']"/>
                <param name="cancelDt" mapping="['cancelDt']"/>
                <param name="cancelReason" mapping="['cancelReason']"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="delete" form-submit-label="Удалить" name="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription-service?prescriptionId={prescriptionId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="prescriptionId" mapping="['prescriptionId']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>


    </actions>

    <validations>
        <condition id="prescriptionPeriodValidation" level="error">
            <expression on="periodBeginDt,periodEndDt"><![CDATA[
                    moment(periodBeginDt, 'DD.MM.YYYY HH:mm').isBefore(moment(periodEndDt, 'DD.MM.YYYY HH:mm')) ||
                    moment(periodBeginDt, 'DD.MM.YYYY HH:mm').isSame(moment(periodEndDt, 'DD.MM.YYYY HH:mm')) ]]>
            </expression>
            <message>Дата начала не должна быть больше даты окончания</message>

        </condition>

    </validations>


</object>