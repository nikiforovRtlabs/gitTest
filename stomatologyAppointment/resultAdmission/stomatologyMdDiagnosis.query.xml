<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-2.0">
    <name>md_diagnosis</name>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from md_diagnosis md
                left join stomatology.tooth_disease_md_diagnosis tdmd on (md.id = tdmd.md_diagnosis_id)
                left join stomatology.tooth_disease tdisease on (tdisease.id = tdmd.tooth_disease_id)
                where is_leaf = true and md.stomat = true and :where
                order by md.code ASC
            </n2o:items-query>
            <n2o:count-query>select count(md)
                from md_diagnosis md
                where is_leaf = true and md.stomat = true and :where
            </n2o:count-query>
            <n2o:alias>md</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
        </field>

        <field>
            <id>code</id>
            <domain>string</domain>
            <expression>md.code</expression>
        </field>

        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>md.code || ' ' || md.name
            </expression>
            <search>(upper(md.code || ' ' || md.name) like '%' || upper(:name) || '%'
                or upper(md.code) like upper(:name || '%')
                or upper(md.name) like upper('%' || :name || '%')
                or upper(md.code) like translate(upper(:name), 'ЙЦУКЕНГШЩЗФЫВАПРОЛДЯЧСМИТЬ',
                'QWERTYUIOPASDFGHJKLZXCVBNM')||'%'
                or upper(md.name) like '%' || translate(upper(:name),
                'QWERTYUIOP[]ASDFGHJKL;''ZXCVBNM,.','ЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ') || '%')
            </search>
        </field>

        <field>
            <id>isDAccounting</id>
            <domain>boolean</domain>
            <name>Подлежит Д-учёту</name>
            <expression>
                (case
                when (select count(mnrd.id) from md_nosol_registr_diagnosis mnrd
                join md_diagnosis md1 on md1.id = mnrd.init_diagnosis_id
                join md_diagnosis md2 on md2.id = mnrd.final_diagnosis_id
                where md.code between md1.code and md2.code) = 0
                then false
                else true end)
            </expression>
        </field>

        <field>
            <id>isInjury</id>
            <domain>boolean</domain>
            <expression>(md.is_injury is true)</expression>
        </field>

        <field>
            <id>patientId</id>
            <domain>integer</domain>
            <expression>:patientId</expression>
            <search unavailable="true"/>
        </field>

        <!--<field>-->
            <!--<id>toothDiseaseId</id>-->
            <!--<domain>integer[]</domain>-->
            <!--<expression>-->
                <!--(-->
                <!--select array_agg(tdttd1.tooth_disease_tooth_id) from stomatology.tooth_disease_tooth_tooth_diagnosis tdttd1-->
                <!--where tdttd1.tooth_diagnosis_id = td.id-->
                <!--)-->
            <!--</expression>-->
            <!--<display/>-->
        <!--</field>-->

        <field>
            <id>toothDiseaseId</id>
            <domain>integer[]</domain>
            <expression>
                (
                select array_agg(tdisease1.id) from stomatology.tooth_disease_md_diagnosis tdmd1
                left join stomatology.tooth_disease tdisease1 on (tdisease1.id = tdmd1.tooth_disease_id) where md.id = tdmd1.md_diagnosis_id
                )
            </expression>
            <display/>
        </field>

        <field>
            <id>oneToothDiseaseId</id>
            <domain>integer</domain>
            <expression>
                (select tdisease1.id from stomatology.tooth_disease_md_diagnosis tdmd1
                left join stomatology.tooth_disease tdisease1 on (tdisease1.id = tdmd1.tooth_disease_id)
                where tdmd1.md_diagnosis_id = md.id ORDER BY tdisease1.priority DESC LIMIT 1)
            </expression>
            <display>:expression</display>
        </field>

        <field>
            <id>repeatCount</id>
            <domain>object</domain>
            <expression>
                (select row_to_json(r) from (
                select
                mrc.id as id,
                mrc.name as name
                from mc_repeat_count mrc where mrc.id = (case when (select count(mccount.id) from mc_case mccount
                left join mc_diagnosis mdcount on ( mccount.main_diagnos_id = mdcount.id )
                where mdcount.diagnos_id = md.id and
                mccount.patient_id = :patientId and date_part('year', now()) = date_part('year', mccount.create_date)) >
                0 then 2 else 1
                end)) as r)
            </expression>
        </field>

    </fields>
</query>
