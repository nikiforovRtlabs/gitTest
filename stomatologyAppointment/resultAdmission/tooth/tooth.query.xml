<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-3.0">
    <object-id>tooth</object-id>
    <name>tooth</name>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select from stomatology.tooth t
                left join stomatology.tooth_number tn on tn.id = t.tooth_number_id
                inner join stomatology.tooth_dental_formula tdf on tdf.tooth_id = t.id
                inner join stomatology.dental_formula df on df.id = tdf.dental_formula_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(t) from stomatology.tooth t
                left join stomatology.tooth_number tn on tn.id = t.tooth_number_id
                inner join stomatology.tooth_dental_formula tdf on tdf.tooth_id = t.id
                inner join stomatology.dental_formula df on df.id = tdf.dental_formula_id
                where :where
            </n2o:count-query>
            <n2o:alias>t</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>

        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>t.id</expression>
            <display>:expression</display>
            <filters>
                <filter type="eq" filter-field="id">:expression = :id</filter>
            </filters>
        </field>

        <field>
            <id>active</id>
            <domain>boolean</domain>
            <expression>t.active</expression>
        </field>

        <field>
            <id>deleted</id>
            <domain>boolean</domain>
            <expression>t.deleted</expression>
        </field>

        <field>
            <id>toothNumberId</id>
            <domain>integer</domain>
            <expression>tn.id</expression>
            <display>:expression</display>
            <filters auto-generate="true"/>
        </field>

        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>tn.name</expression>
            <sorting/>
            <display>:expression</display>
            <filters>
                <filter type="eq" filter-field="name">
                    upper(:expression) like '%' || upper(:name) || '%'
                </filter>
            </filters>
        </field>

        <field>
            <id>dentalFormulaId</id>
            <domain>integer</domain>
            <expression>df.id</expression>
            <display>:expression</display>
            <filters>
                <filter type="eq" filter-field="dentalFormulaId">:expression = :dentalFormulaId</filter>
            </filters>
        </field>

    </fields>
</query>