<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <object-id>stomatologyDiagnosis</object-id>
    <name>stomatologyDiagnosis</name>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from stomatology.tooth_diagnosis td
                inner join stomatology.tooth t on t.id = td.tooth_id
                left join stomatology.tooth_number tn on tn.id = t.tooth_number_id
                inner join stomatology.tooth_dental_formula tdf on tdf.tooth_id = t.id
                inner join stomatology.dental_formula df on df.id = tdf.dental_formula_id

                left join md_clinical_statistical_group csg on csg.id = td.stg_id
                left join mc_diagnosis md on md.id = td.mc_diagnosis_id

                left join plc_visit pv on pv.id = md.step_id
                left join mc_step ms on ms.id = pv.id
                left join mc_case mc on ( ms.case_id = mc.id )
                left join md_tooth_surface ts on ts.id = td.md_tooth_surface_id

                left join md_diagnosis md1 on ( md.diagnos_id = md1.id )

                left join
                (SELECT tooth_disease_id, md_diagnosis_id FROM stomatology.tooth_disease_md_diagnosis LIMIT 1) tdmd
                on ( md1.id = tdmd.md_diagnosis_id )
                <!--left join stomatology.tooth_disease_md_diagnosis tdmd on (md1.id = tdmd.md_diagnosis_id)-->
                left join stomatology.tooth_disease tdisease on (tdisease.id = tdmd.tooth_disease_id)

                left join mc_diagnosis_type mdt on ( md.type_id = mdt.id )
                left join mc_stage mst on ( md.stage_id = mst.id )
                left join md_employee_position mep on ( md.doctor_id = mep.id )
                left join pim_employee_position pep on ( mep.id = pep.id )
                left join pim_employee pe on ( pep.employee_id = pe.id )
                left join pim_individual pi on ( pe.individual_id = pi.id )
                left join mc_injury_type mit on ( md.injury_type_id = mit.id )
                left join mc_disease_type mcdt on ( md.disease_type_id = mcdt.id )
                left join sr_res_group srgrg on ( ms.res_group_id = srgrg.id )
                left join pim_employee_position peprg on ( srgrg.responsible_id = peprg.id )
                left join pim_employee perg on ( peprg.employee_id = perg.id )
                left join pim_individual pirg on ( perg.individual_id = pirg.id )
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(td)
                from stomatology.tooth_diagnosis td
                inner join stomatology.tooth t on t.id = td.tooth_id
                left join stomatology.tooth_number tn on tn.id = t.tooth_number_id
                inner join stomatology.tooth_dental_formula tdf on tdf.tooth_id = t.id
                inner join stomatology.dental_formula df on df.id = tdf.dental_formula_id
                <!--left join plc_visit pv on pv.dental_formula_id = df.id
                left join mc_step ms on ms.id = pv.id
                left join mc_case mc on ( ms.case_id = mc.id )
                left join md_tooth_surface ts on ts.id = md.md_tooth_surface_id-->
                left join md_clinical_statistical_group csg on csg.id = td.stg_id
                left join mc_diagnosis md on md.id = td.mc_diagnosis_id

                left join plc_visit pv on pv.id = md.step_id
                left join mc_step ms on ms.id = pv.id
                left join mc_case mc on ( ms.case_id = mc.id )
                left join md_tooth_surface ts on ts.id = td.md_tooth_surface_id

                left join md_diagnosis md1 on ( md.diagnos_id = md1.id )
                left join mc_diagnosis_type mdt on ( md.type_id = mdt.id )
                left join mc_stage mst on ( md.stage_id = mst.id )
                left join md_employee_position mep on ( md.doctor_id = mep.id )
                left join pim_employee_position pep on ( mep.id = pep.id )
                left join pim_employee pe on ( pep.employee_id = pe.id )
                left join pim_individual pi on ( pe.individual_id = pi.id )
                left join mc_injury_type mit on ( md.injury_type_id = mit.id )
                left join mc_disease_type mcdt on ( md.disease_type_id = mcdt.id )
                left join sr_res_group srgrg on ( ms.res_group_id = srgrg.id )
                left join pim_employee_position peprg on ( srgrg.responsible_id = peprg.id )
                left join pim_employee perg on ( peprg.employee_id = perg.id )
                left join pim_individual pirg on ( perg.individual_id = pirg.id )
                where :where
            </n2o:count-query>
            <n2o:alias>td</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>td.id</expression>
            <display>:expression</display>
            <filters>
                <filter type="eq" filter-field="id"/>
            </filters>
        </field>

        <field>
            <id>tooth.id</id>
            <domain>integer</domain>
            <expression>t.id</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>tooth.name</id>
            <domain>string</domain>
            <name>Номер зуба</name>
            <expression>tn.name</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>tooth.toothNumberId</id>
            <domain>integer</domain>
            <expression>tn.id</expression>
            <display/>
        </field>

        <field>
            <id>toothSurface.id</id>
            <domain>integer</domain>
            <expression>ts.id</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>toothSurface.name</id>
            <domain>string</domain>
            <name>Поверхность</name>
            <expression>ts.name</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>dentalFormulaId</id>
            <domain>integer</domain>
            <expression>df.id</expression>
            <filters>
                <filter type="eq" filter-field="dentalFormulaId">:expression = :dentalFormulaId</filter>
            </filters>
            <display>:expression</display>
        </field>

        <field>
            <id>diagnosisType.id</id>
            <domain>integer</domain>
            <expression>mdt.id</expression>
            <display/>
        </field>

        <field>
            <id>diagnosisType.name</id>
            <domain>string</domain>
            <name>Вид</name>
            <expression>mdt.name</expression>
            <display/>
        </field>

        <field>
            <id>diagnosisTypeName</id>
            <domain>string</domain>
            <name>Вид</name>
            <expression>
                case when md.is_main  != true  then mdt.name
                else 'Основной'
                end
            </expression>
            <display>:expression</display>
        </field>

        <field>
            <id>stage.id</id>
            <domain>integer</domain>
            <expression>
                <!--default значение для этап установления -->
                (case when mst.id = null then 3 else mst.id end)
            </expression>
            <display/>
        </field>

        <field>
            <id>stage.name</id>
            <domain>string</domain>
            <name>Этап установления</name>
            <expression>mst.name</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>mcDiagnosis.id</id>
            <domain>integer</domain>
            <expression>md.id</expression>
        </field>

        <field>
            <id>diagnosis.id</id>
            <domain>integer</domain>
            <expression>md1.id</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>diagnosis.name</id>
            <domain>string</domain>
            <name>Установленный диагноз (МКБ10)</name>
            <expression>md1.code || ' ' || md1.name</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>diagnosis.code</id>
            <domain>integer</domain>
            <expression>md1.code</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>diagnosis.toothDiseaseId</id>
            <domain>integer[]</domain>
            <expression>
                (
                select array_agg(tdisease2.id) from stomatology.tooth_disease_md_diagnosis tdmd2
                left join stomatology.tooth_disease tdisease2 on (tdisease2.id = tdmd2.tooth_disease_id) where md1.id = tdmd2.md_diagnosis_id
                )
            </expression>
            <display/>
        </field>

        <!--<field>-->
            <!--<id>diagnosis.toothDiseaseId</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>td.diagnosis_tooth_disease_id</expression>-->
            <!--<display/>-->
        <!--</field>-->

        <field>
            <id>stg.id</id>
            <domain>integer</domain>
            <expression>csg.id</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>stg.name</id>
            <domain>string</domain>
            <name>СТГ</name>
            <expression>csg.name</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>doctor.name</id>
            <domain>string</domain>
            <name>Врач</name>
            <expression>
                (coalesce(pi.surname, '') || ' ' || coalesce(pi.name, '') || ' ' || coalesce(pi.patr_name, '')|| ' ' ||
                coalesce(pe.note, ''))
            </expression>
            <display>:expression</display>
        </field>

        <field>
            <id>resGroup.id</id>
            <domain>integer</domain>
            <expression>peprg.id</expression>
            <display/>
        </field>

        <field>
            <id>resGroup.name</id>
            <domain>string</domain>
            <name>Врач</name>
            <expression>
                (coalesce(pirg.surname, '') || ' ' || coalesce(pirg.name, '') || ' ' || coalesce(pirg.patr_name, '')|| '
                ' || coalesce(perg.note, ''))
            </expression>
            <display>:expression</display>
        </field>

        <field>
            <id>patient.id</id>
            <domain>integer</domain>
            <expression>md.patient_id</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>isMainDiagnos</id>
            <domain>boolean</domain>
            <expression>(case when md.is_main is not null then md.is_main else false end)</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>isMainDiagnosColor</id>
            <domain>string</domain>
            <expression>
                (case when md.id = mc.main_diagnos_id then 'text-info' else '' end)
            </expression>
        </field>

        <field>
            <id>diseaseType.id</id>
            <domain>integer</domain>
            <expression>mcdt.id</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>diseaseType.name</id>
            <domain>string</domain>
            <expression>mcdt.code || ' - ' || mcdt.name</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>diagnosis.oneToothDiseaseId</id>
            <domain>integer</domain>
            <expression>
                (select tdisease2.id from stomatology.tooth_disease_md_diagnosis tdmd2
                left join stomatology.tooth_disease tdisease2 on (tdisease2.id = tdmd2.tooth_disease_id)
                where tdmd2.md_diagnosis_id = md1.id ORDER BY tdisease2.priority DESC LIMIT 1)
            </expression>
            <display>:expression</display>
        </field>

        <field>
            <id>bdate</id>
            <domain>date</domain>
            <expression>md.establishment_date</expression>
            <display>:expression</display>
        </field>

        <field>
            <id>infoBdate</id>
            <domain>string</domain>
            <expression>to_char(md.establishment_date, 'DD.MM.YYYY')</expression>
        </field>

        <field>
            <id>diagnosis.isDAccounting</id>
            <domain>boolean</domain>
            <name>Подлежит Д-учёту</name>
            <expression>
                (case
                when (select count(mnrd.id) from md_nosol_registr_diagnosis mnrd
                join md_diagnosis md2 on md2.id = mnrd.init_diagnosis_id
                join md_diagnosis md3 on md3.id = mnrd.final_diagnosis_id
                where md1.code between md2.code and md3.code) = 0
                then false
                else true end)
            </expression>
            <display>:expression</display>
        </field>

        <field>
            <id>diagnosisServices</id>
            <domain>string</domain>
            <name>Услуги</name>
            <expression>
                (select array_to_string(array_agg(s.serviceName), '\n') from (
                select (s.code || ' ' || s.name) as serviceName from md_srv_tooth_surface sts
                join sr_srv_rendered ssr on sts.srv_rendered_id = ssr.id
                join sr_service s on s.id = ssr.service_id
                where sts.tooth_id = t.id and tooth_surface_id = ts.id
                ) s)
            </expression>
            <display>:expression</display>
        </field>

        <field>
            <id>injuryType.id</id>
            <domain>integer</domain>
            <expression>mit.id</expression>
        </field>

        <field>
            <id>injuryType.name</id>
            <domain>integer</domain>
            <name>Вид травмы</name>
            <expression>mit.name</expression>
        </field>

        <field>
            <id>caseDiagnosisId</id>
            <domain>integer</domain>
            <expression>md.id</expression>
            <display/>
        </field>

        <field>
            <id>isCaseState</id>
            <domain>boolean</domain>
            <expression>
                (case when mc.closing_step_id is null then false
                else true end)
            </expression>
            <display/>
        </field>

        <field>
            <id>visit.id</id>
            <domain>integer</domain>
            <expression>ms.id</expression>
            <filters>
                <filter type="eq" filter-field="visit.id"/>
            </filters>
            <display/>
        </field>

        <field>
            <id>mcCase</id>
            <domain>integer</domain>
            <expression>mc.id</expression>
            <display/>
        </field>

        <!--<field>
            <id>org.id</id>
            <domain>integer</domain>
            <expression>srgrg.org_id</expression>
        </field>

        <field>
            <id>orgId</id>
            <domain>integer</domain>
            <expression>:orgId</expression>
            <search value="#{org.id?}">:expression = :orgId</search>
        </field>

        <field>
            <id>emplContext</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search value="#{emplPos.id?}"/>
            <expression>:emplContext</expression>
        </field>

        <field>
            <id>mainDiagnosis.name</id>
            <domain>string</domain>
            <expression>
                (select md11.code || ' ' || md11.name
                from mc_diagnosis md1
                left join md_diagnosis md11 on ( md1.diagnos_id = md11.id )
                where mc.main_diagnos_id = md1.id)
            </expression>
        </field>

        <field>
            <id>mainDiagnosis.id</id>
            <domain>integer</domain>
            <expression>
                (select md1.id
                from mc_diagnosis md1
                left join md_diagnosis md11 on ( md1.diagnos_id = md11.id )
                where mc.main_diagnos_id = md1.id)
            </expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>stage.id</id>
            <domain>integer</domain>
            <expression>
                &lt;!&ndash;default значение для этап установления &ndash;&gt;
                (case when mst.id = null then 3 else mst.id end)
            </expression>
        </field>











        <field>
            <id>nosolRegistr</id>
            <domain>boolean</domain>
            <expression>
                (select mnrd.id from md_nosol_registr_diagnosis mnrd where md.id between mnrd.init_diagnosis_id and
                mnrd.final_diagnosis_id limit 1)
            </expression>
        </field>

        <field>
            <id>diagnosis.isInjury</id>
            <domain>boolean</domain>
            <expression>(md1.code between 'S00' and 'T98')</expression>
        </field>

        <field>
            <id>badge</id>
            <domain>string</domain>
            <expression>
                case when md.is_main  != true then
                (case when mdt.id = (select id from mc_diagnosis_type where code = '2') then 'badge badge-info'
                when mdt.id = (select id from mc_diagnosis_type where code = '3') then 'badge badge-warning'
                else ''
                end)
                else
                'badge badge-success'
                end
            </expression>
        </field>-->

    </fields>
</query>
