<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-2.0">
    <object-id>clinicAppointment</object-id>
    <name>caseType</name>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from sr_service s
                where
                <!--(current_date between s.from_dt and s.to_dt or s.to_dt is null or  s.to_dt >= current_date and current_date >= s.from_dt)
                and ((exists(select 1 form sr_res_group_service sr join sr_res_group g on g.id = sr.group_id where g.responsible_id = :emplContext and g.is_system = false)
                and exists (select 1 form sr_res_group_service srgp join sr_res_group srg on srgp.group_id = srg.id
                where s.id = srgp.srv_type_id and srg.responsible_id = :emplContext and srg.is_system = false))
                or not exists(select 1 form sr_res_group_service sr join sr_res_group g on g.id = sr.group_id where g.responsible_id = :emplContext and g.is_system = false))
                and -->s.org_id = :orgId and
                s.is_stomat = true and
                :where
            </n2o:items-query>
            <n2o:count-query>select count(s)
                from sr_service s
                where
                (current_date between s.from_dt and s.to_dt or s.to_dt is null or  s.to_dt >= current_date and current_date >= s.from_dt)
                and ((exists(select 1 from sr_res_group_service sr join sr_res_group g on g.id = sr.group_id where g.responsible_id = :emplContext and g.is_system = false)
                and exists (select 1 from sr_res_group_service srgp join sr_res_group srg on srgp.group_id = srg.id
                where s.id = srgp.srv_type_id and srg.responsible_id = :emplContext and srg.is_system = false))
                or not exists(select 1 from sr_res_group_service sr join sr_res_group g on g.id = sr.group_id where g.responsible_id = :emplContext and g.is_system = false))
                and s.org_id = :orgId and
                s.is_stomat = true and
                :where
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>s.id</expression>
            <search>:expression = :id</search>
        </field>

        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>(coalesce(s.code, '') || ' ' || coalesce(s.name, ''))</expression>
            <search>upper(:expression) like '%'||upper(:name)||'%'</search>
        </field>

        <field>
            <id>service_id</id>
            <domain>integer</domain>
            <expression>s.id</expression>
            <search>:expression = :id</search>
        </field>

        <field>
            <id>service_name</id>
            <domain>string</domain>
            <expression>(coalesce(s.code, '') || ' ' || coalesce(s.name, ''))</expression>
            <search>upper(:expression) like '%'||upper(:name)||'%'</search>
        </field>

        <field>
            <id>emplContext</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search value="#{emplPos.id?}"/>
            <expression>:emplContext</expression>
        </field>

        <field>
            <id>orgId</id>
            <domain>integer</domain>
            <expression>:orgId</expression>
            <search value="#{org.id?}">(:expression = :orgId or :orgId is null)</search>
        </field>

        <field>
            <id>prescriptionName</id>
            <domain>string</domain>
            <expression>s.name</expression>
        </field>

        <field>
            <id>cul</id>
            <domain>numeric</domain>
            <expression>s.cul</expression>
        </field>

    </fields>
</query>
