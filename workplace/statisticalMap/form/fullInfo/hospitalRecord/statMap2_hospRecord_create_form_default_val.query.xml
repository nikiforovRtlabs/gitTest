<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">

    <object-id>statMap_hospRecord</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select from mc_case mc
                inner join pci_patient pat on pat.id = mc.patient_id
                inner join pim_individual i on i.id = pat.id
                where :where
            </n2o:items-query>

            <n2o:count-query>
                select count(1) from mc_case mc
                inner join pci_patient pat on pat.id = mc.patient_id
                inner join pim_individual i on i.id = pat.id
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>

        <field>
            <id>case.id</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search>mc.id = :case.id</search>
        </field>

        <field>
            <id>previous.name</id>
            <domain>string</domain>
            <expression>
                (select d.name || '(' || to_char(s.admission_date + coalesce(s.admission_time, '00:00'), 'DD.MM.YYYY HH24:MI') || coalesce(' - ' ||
                to_char(s.outcome_date + coalesce(s.outcome_time, '00:00'), 'DD.MM.YYYY HH24:MI'), '') || ')'
                from hsp_record r
                inner join mc_step s on s.id = r.id and s.case_id = mc.id
                inner join pim_department d on d.id = r.department_id
                where not exists(select 1 from hsp_record r2
                inner join mc_step s2 on r2.id=s2.id
                where s2.case_id = s.case_id and r2.previous_id = r.id))
            </expression>
        </field>

        <field>
            <id>admissionDate</id>
            <domain>date</domain>
            <expression>
                (select case when s.outcome_date is not null then
                            s.outcome_date + coalesce(s.outcome_time, '00:00') + INTERVAL '1 minute'
                        else
                            s.admission_date + coalesce(s.admission_time, '00:00') + INTERVAL '5 minute'
                        end
                from hsp_record r
                inner join mc_step s on s.id = r.id and s.case_id = mc.id
                where not exists(select 1 from hsp_record r2
                inner join mc_step s2 on r2.id=s2.id
                where s2.case_id = s.case_id and r2.previous_id = r.id))
            </expression>
        </field>

        <field>
            <id>ageGroupId</id>
            <domain>integer</domain>
            <expression><![CDATA[(case when i.birth_dt is null then 3 else case when extract(year from AGE(NOW(), i.birth_dt)) <= 17 then 2 else 1 end end)]]></expression>
        </field>

        <field>
            <id>organizationId</id>
            <domain>integer</domain>
            <expression>mc.clinic_id</expression>
        </field>

        <field>
            <id>financialType.id</id>
            <domain>integer</domain>
            <expression>mc.funding_id</expression>
        </field>


    </fields>
</query>