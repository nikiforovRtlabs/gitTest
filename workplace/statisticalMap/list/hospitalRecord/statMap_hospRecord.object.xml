<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-1.0"
        xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns:n2o="http://n2oapp.net/framework/config/schema/action-invocation-1.0">
    <name>Движение по отделениям</name>

    <actions>
        <action id="create" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/hospital/stat-map/hospital-record
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="case.id" mapping="['caseId']"/>
                <param name="case.patient.id" mapping="['patientId']"/>
                <param name="stepDepartment.id" mapping="['departmentId']"/>
                <param name="profile.id" mapping="['profileId']"/>
                <param name="doctor.id" mapping="['doctorId']"/>
                <param name="doctor.employeePositionId" mapping="['employeePositionId']" domain="integer"/>
                <param name="resGroupId" mapping="['resGroupId']" domain="integer"/>
                <param name="financialType.id" mapping="['financialTypeId']" domain="integer"/>
                <param name="admissionDate" mapping="['admissionDate']"/>
                <param name="outcomeDate" mapping="['outcomeDate']"/>
                <param name="diagnosis.id" mapping="['diagnosisId']"/>
                <param name="stepResult.id" mapping="['stepResultId']"/>
                <param name="stepResult.closed" mapping="['closed']" domain="boolean"/>
                <param name="outcome.id" mapping="['outcomeId']"/>
                <param name="standard.id" mapping="['standardId']"/>
                <param name="csg.id" mapping="['csgId']"/>
                <param name="careRegimen.id" mapping="['careRegimenId']"/>
                <param name="caseDiagnosisId" mapping="['caseDiagnosisId']"/>
                <param name="mes.id" mapping="['mesId']"/>
                <param name="vmp.id" mapping="['vmpId']"/>
                <param name="vmpMethod.id" mapping="['vmpMethodId']"/>
                <param name="bedProfile.id" mapping="['bedProfileId']"/>
                <param name="missedDaysAmount" mapping="['missedDaysAmount']"/>
                <param name="mesQualityCriterion.id" mapping="['mesQualityCriterionId']"/>
                <param name="deviationReason.id" mapping="['deviationReasonId']"/>

                <param name="finalDiagnosis.id" mapping="['finalDiagnosisId']"/>
                <param name="finalCaseDiagnosisId" mapping="['finalCaseDiagnosisId']"/>

                <param name="attr*.id" mapping="['diagnosisAttributes']" domain="integer[]"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
        </action>

        <action id="update" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/hospital/stat-map/hospital-record
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="case.id" mapping="['caseId']"/>
                <param name="case.patient.id" mapping="['patientId']"/>
                <param name="stepDepartment.id" mapping="['departmentId']"/>
                <param name="profile.id" mapping="['profileId']"/>
                <param name="doctor.id" mapping="['doctorId']"/>
                <param name="doctor.employeePositionId" mapping="['employeePositionId']" domain="integer"/>
                <param name="resGroupId" mapping="['resGroupId']" domain="integer"/>
                <param name="financialType.id" mapping="['financialTypeId']" domain="integer"/>
                <param name="admissionDate" mapping="['admissionDate']"/>
                <param name="outcomeDate" mapping="['outcomeDate']"/>
                <param name="diagnosis.id" mapping="['diagnosisId']"/>
                <param name="stepResult.id" mapping="['stepResultId']"/>
                <param name="stepResult.closed" mapping="['closed']" domain="boolean"/>
                <param name="outcome.id" mapping="['outcomeId']"/>
                <param name="standard.id" mapping="['standardId']"/>
                <param name="csg.id" mapping="['csgId']"/>
                <param name="careRegimen.id" mapping="['careRegimenId']"/>
                <param name="caseDiagnosisId" mapping="['caseDiagnosisId']"/>
                <param name="mes.id" mapping="['mesId']"/>
                <param name="vmp.id" mapping="['vmpId']"/>
                <param name="vmpMethod.id" mapping="['vmpMethodId']"/>
                <param name="bedProfile.id" mapping="['bedProfileId']"/>
                <param name="missedDaysAmount" mapping="['missedDaysAmount']"/>
                <param name="attr*.id" mapping="['diagnosisAttributes']" domain="integer[]"/>
                <param name="mesQualityCriterion.id" mapping="['mesQualityCriterionId']"/>
                <param name="deviationReason.id" mapping="['deviationReasonId']"/>

                <param name="finalDiagnosis.id" mapping="['finalDiagnosisId']"/>
                <param name="finalCaseDiagnosisId" mapping="['finalCaseDiagnosisId']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="blackList">
                <validation ref-id="checkCaseIsClosed"/>
            </validations>
        </action>

        <action id="delete" form-submit-label="Удалить" name="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    ${n2o.backend.path}/hospital/stat-map/hospital-record?recordId={recordId}
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['recordId']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
            <confirmation-text>Вы уверены, что хотите удалить последний ЗОГ ?</confirmation-text>
        </action>
    </actions>

    <validations>
        <condition id="checkAdmissionOutcomeDates" level="error">
            <expression on="admissionDate,outcomeDate"><![CDATA[ outcomeDate == null ||
                     outcomeDate != null && moment(admissionDate, 'DD.MM.YYYY HH:mm').isBefore(moment(outcomeDate, 'DD.MM.YYYY HH:mm'))]]></expression>
            <message>Дата выписки меньше или равна дате поступления.</message>
        </condition>

        <constraint id="checkAdmissionDateInNextAndOutcomeInCurrent" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[select case when s.admission_time is not null then s.admission_date + s.admission_time else s.admission_date end >= :outcomeDate
                    from hsp_record r
                    inner join mc_step s on s.id = r.id
                     where r.previous_id = :id]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="outcomeDate" mapping="['outcomeDate']"/>
            </in-parameters>
            <result expression="[0].length == 0 or [0][0][0] == true"/>
            <message>Дата поступления в следующее отделение меньше даты выписки из текущего.</message>
        </constraint>

        <constraint id="checkOutcomeDateInPreviousAndAdmissionInCurrent" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[select (case when s.outcome_date is null then true else
                    case when s.outcome_time is not null then s.outcome_date + s.outcome_time else s.outcome_date end <= :admissionDate end)
                    from hsp_record r
                    inner join mc_step s on s.id = r.id
                    where r.previous_id is not null and r.id = (case when :previousId::int4 is null then
                    (select s2.id from mc_step s2 inner join hsp_record h2 on h2.id = s2.id
                    where s2.case_id = :caseId  order by s2.admission_date desc, s2.admission_time desc, s2.id desc limit 1) else :previousId end)]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="previous.id" mapping="['previousId']"/>
                <param name="admissionDate" mapping="['admissionDate']"/>
                <param name="case.id" mapping="['caseId']"/>
            </in-parameters>
            <result expression="[0].length == 0 or [0][0][0] == true"/>
            <message>Дата поступления в отделение меньше даты выбытия из предыдущего отделения.</message>
        </constraint>

        <!--Создание ЗОГа. Если в последнем ЗОГе не указана дата выбытия, то проверяем её дату поступления.-->
        <constraint id="checkAdmissionDateInPreviousAndAdmissionInCurrent" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[select
                    (case when s.admission_time is not null then s.admission_date + s.admission_time else s.admission_date end) <= :admissionDate
                    from hsp_record r
                    inner join mc_step s on s.id = r.id
                    where r.id = (case when :previousId::int4 is null then
                    (select s2.id from mc_step s2 inner join hsp_record h2 on h2.id = s2.id
                    where s2.case_id = :caseId  order by s2.admission_date desc, s2.admission_time desc, s2.id desc limit 1)
                    else :previousId::int4 end)
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="previous.id" mapping="['previousId']"/>
                <param name="admissionDate" mapping="['admissionDate']"/>
                <param name="case.id" mapping="['caseId']"/>
            </in-parameters>
            <result expression="[0].length == 0 or [0][0][0] == true"/>
            <message>Дата поступления в отделение меньше даты поступления в предыдущем отделении.</message>
        </constraint>

        <constraint id="checkCaseIsClosed" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[select closing_step_id is null from mc_case where :id is null and id = :caseId]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="case.id" mapping="['caseId']"/>
            </in-parameters>
            <result expression="[0].length == 0 or [0][0][0] == true"/>
            <message>Случай закрыт.</message>
        </constraint>

        <constraint id="validExistingParallelCase" level="warning">
            <invocation>
                <n2o:rest method="POST">
                    <n2o:query>
                        ${n2o.backend.path}/hospital/hospital-record/valid
                    </n2o:query>
                </n2o:rest>
            </invocation>
            <in-parameters>
                <param name="case.id" mapping="['id']"/>
                <param name="case.patient.id" mapping="['patientId']"/>
                <param name="admissionDate" mapping="['admissionDate']"/>
            </in-parameters>
            <out-parameters>
                <param name="message" mapping="['message']"/>
            </out-parameters>
            <result expression="['success']"/>
            <message>{message}</message>
        </constraint>
    </validations>


</object>