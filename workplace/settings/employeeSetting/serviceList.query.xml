<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">

    <object-id>employeeSetting</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select from sr_service s
                left join sr_srv_prototype sp on sp.id = s.prototype_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*) from sr_service s
                left join sr_srv_prototype sp on sp.id = s.prototype_id
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>s.id</expression>
        </field>

        <field>
            <id>code</id>
            <name>Код</name>
            <domain>string</domain>
            <expression>s.code</expression>
        </field>

        <field>
            <id>name</id>
            <name>Наименование</name>
            <domain>string</domain>
            <expression>s.name</expression>
        </field>

        <field>
            <id>prototypeName</id>
            <name>Прототип услуги</name>
            <domain>string</domain>
            <expression>sp.name</expression>
        </field>

        <field>
            <id>orgId</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <expression>s.org_id</expression>
            <search value="#{org.id?}">(:expression = :orgId or :orgId is null)</search>
        </field>

        <field>
            <id>type.id</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search>s.type_id = :type.id</search>
        </field>

        <field>
            <id>category.id</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search>s.category_id = :category.id</search>
        </field>

        <field>
            <id>prototype.id</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search>s.prototype_id = :prototype.id</search>
        </field>

        <field>
            <id>employeePositionResourceId</id>
            <domain>integer</domain>
            <expression>:employeePositionResourceId</expression>
        </field>

        <field>
            <id>resourceServiceId</id>
            <domain>integer</domain>
            <expression>(select id from sr_resource_service where resource_id = :employeePositionResourceId and service_id = s.id)</expression>
        </field>

        <field>
            <id>choice.id</id>
            <domain>string</domain>
            <display unavailable="true"/>
            <search>
               ((:choice.id = 'my' and s.id in (select service_id from sr_resource_service where resource_id = :employeePositionResourceId)) or
                (:choice.id = 'besidesMy' and s.id not in (select service_id from sr_resource_service where resource_id = :employeePositionResourceId)))
            </search>
        </field>

        <field>
            <id>createOrDeleteResourceService</id>
            <domain>boolean</domain>
            <name> </name>
            <expression>(s.id in (select service_id from sr_resource_service where resource_id = :employeePositionResourceId))</expression>
        </field>

        <field>
            <id>serviceNameCode</id>
            <domain>string</domain>
            <display unavailable="true"/>
            <search>(s.code like '%'||:serviceNameCode||'%' or s.name like '%'||:serviceNameCode||'%' or s.code || ' ' || s.name  like '%'||:serviceNameCode||'%')</search>
        </field>

    </fields>
</query>
