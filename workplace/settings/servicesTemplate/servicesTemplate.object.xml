<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-2.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <name>Шаблоны модели лечения</name>

    <actions>
        <action id="saveServiceTemplate" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/service-template
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="name" mapping="['name']"/>
                <param name="note" mapping="['note']"/>
                <param name="clinicId" mapping="['clinicId']" value="#{org.id}"/>
                <param name="period.begin" mapping="['beginDate']"/>
                <param name="period.end" mapping="['endDate']"/>
                <param name="type.is_service" mapping="['isService']" domain="boolean"/>
                <param name="type.is_holding" mapping="['isHolding']" domain="boolean"/>
                <param name="standard.id" mapping="['standardId']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
        </action>

        <action id="deleteServiceTemplate" form-submit-label="Удалить" name="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/service-template/{id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
            <confirmation-text>Вы уверены, что хотите удалить шаблон модели лечения ?</confirmation-text>
        </action>


        <!--ServicesTemplateService full form-->
        <action id="saveServicesTemplateService" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/service-template/service
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="templateId" mapping="['templateId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="resGroup.id" mapping="['resGroupId']"/>
                <param name="department.id" mapping="['departmentId']"/>
                <param name="speciality.id" mapping="['specialityId']"/>
                <param name="profile.id" mapping="['profileId']"/>
                <param name="district.id" mapping="['districtId']"/>
                <param name="funding.id" mapping="['fundingId']"/>
                <param name="scheduleSelectionType.id" mapping="['scheduleSelectionTypeId']"/>
                <param name="restriction" mapping="['restriction']"/>
                <param name="queue" mapping="['queue']"/>
                <param name="indent" mapping="['indent']"/>
                <param name="indentMeasure.id" mapping="['indentMeasureId']"/>
                <param name="maxInterval" mapping="['maxInterval']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="deleteServicesTemplateService" form-submit-label="Удалить" name="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/service-template/service/{id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
            <confirmation-text>Вы уверены, что хотите удалить шаблон услуги ?</confirmation-text>
        </action>

        <!--ServicesTemplateService short form-->
        <action id="createOrDeleteServicesTemplateService" name="Добавить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/service-template/service/short
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="templateId" mapping="['templateId']" domain="integer"/>
                <param name="id" mapping="['serviceId']" domain="integer"/>
                <param name="servicesTemplateServiceId" mapping="['servicesTemplateServiceId']" domain="integer"/>
            </in-parameters>
        </action>


        <!--servicesTemplateDiagnosis-->
        <action id="createOrDeleteServicesTemplateDiagnosis" name="Добавить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/service-template/diagnosis
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="templateId" mapping="['templateId']" domain="integer"/>
                <param name="id" mapping="['diagnosisId']" domain="integer"/>
                <param name="servicesTemplateDiagnosisId" mapping="['servicesTemplateDiagnosisId']" domain="integer"/>
            </in-parameters>
        </action>
        <action id="deleteServicesTemplateDiagnosis" name="Удалить">
            <invocation>
                <sql:sql>
                    delete from services_template_diagnosis where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <success-text>Диагноз удаленен.</success-text>
            <confirmation-text>Вы уверены, что хотите удалить диагноз шаблона ?</confirmation-text>
        </action>

        <!--servicesTemplatePrescriptionHolding-->
        <action id="saveServicesTemplatePrescriptionHolding" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/service-template/holding
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <param name="administrationRoute.id" mapping="['administrationRouteId']"/>
                <param name="prescriptionPeriodicity.id" mapping="['periodicityId']"/>
                <param name="visitTerm.id" mapping="['visitTermId']"/>
                <param name="templateId" mapping="['templateId']"/>
                <param name="note" mapping="['note']"/>
                <param name="beginDay" mapping="['beginDay']"/>
                <param name="countDay" mapping="['countDay']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="copyServicesTemplatePrescriptionHolding" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    <rest:query>
                        ${n2o.backend.path}/hospital/service-template/holding
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <param name="administrationRoute.id" mapping="['administrationRouteId']"/>
                <param name="prescriptionPeriodicity.id" mapping="['periodicityId']"/>
                <param name="visitTerm.id" mapping="['visitTermId']"/>
                <param name="templateId" mapping="['templateId']"/>
                <param name="note" mapping="['note']"/>
                <param name="beginDay" mapping="['beginDay']"/>
                <param name="countDay" mapping="['countDay']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="deleteServicesTemplatePrescriptionHolding" form-submit-label="Удалить" name="Удаление">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/service-template/holding/{id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
            <success-text>Препарат удаленен</success-text>
            <confirmation-text>Вы уверены, что хотите удалить препарат?</confirmation-text>
        </action>

    </actions>

    <validations>

        <constraint id="checkBeginDateAndHospitalPeriod" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[select admission_date + coalesce(admission_time, '00:00:00') <= :beginDateTime
                     and (outcome_date is null or outcome_date + coalesce(outcome_time, '23:59:59') >= :beginDateTime)
                     from mc_step where id=:hospitalRecordId]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="hospitalRecordId" mapping="['hospitalRecordId']"/>
                <param name="beginDateTime" mapping="['beginDateTime']"/>
            </in-parameters>
            <result expression="[0].length == 0 or [0][0][0] == true"/>
            <message>Дата начала должна соответствовать датам пребывания в отделении.</message>
        </constraint>

        <condition id="restrictionValidation" level="error">
            <message>Введенное значение должно быть числом!</message>
            <expression><![CDATA[
                var regex = new RegExp('\^[0-9]+\$');
                var b = true;
                if(typeof restriction != 'undefined' && restriction != null && restriction != '')
                    b = regex.test(restriction);
                b;
                ]]>
            </expression>
        </condition>

        <condition id="queueValidation" level="error">
            <message>Введенное значение должно быть числом!</message>
            <expression><![CDATA[
                var regex = new RegExp('\^[0-9]+\$');
                var b = true;
                if(typeof queue != 'undefined' && queue != null && queue != '')
                    b = regex.test(queue);
                b;
                ]]>
            </expression>
        </condition>

        <condition id="maxIntervalValidation" level="error">
            <message>Введенное значение должно быть числом!</message>
            <expression><![CDATA[
                var regex = new RegExp('\^[0-9]+\$');
                var b = true;
                if(typeof maxInterval != 'undefined' && maxInterval != null && maxInterval != '')
                    b = regex.test(maxInterval);
                b;
                ]]>
            </expression>
        </condition>

        <condition id="indentValidation" level="error">
            <message>Введенное значение должно быть целым или дробным числом!</message>
            <expression><![CDATA[
                var regex = new RegExp('\^[0-9]+(\.)?([0-9]+)?\$');
                var b = true;
                if(typeof indent != 'undefined' && indent != null && indent != '')
                    b = regex.test(indent);
                b;
                ]]>
            </expression>
        </condition>

        <constraint id="validateServicesPeriods"  level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[
                    select string_agg(t.name, ', ') from (select
                    coalesce(code || ' ' || name, name) as name
                    from sr_service s join services_template_service sts on sts.service_id = s.id
                    where :templateId::int4 is not null and sts.template_id = :templateId and
                    (:beginDate::date is not null and s.to_dt is not null and to_date(:beginDate, 'yyyy-MM-dd') > s.to_dt or
                    :endDate::date is not null and s.from_dt is not null and to_date(:endDate, 'yyyy-MM-dd') < s.from_dt)) t
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="period.begin" mapping="['beginDate']"/>
                <param name="period.end" mapping="['endDate']"/>
                <param name="id" mapping="['templateId']"/>
            </in-parameters>
            <out-parameters>
                <param name="names" mapping="[0][0][0]" domain="string"/>
            </out-parameters>
            <result expression="[0][0][0] == null"/>
            <message>Шаблон содержит недействительные услуги: {names} </message>
        </constraint>

        <condition id="checkHolding0" level="error">
            <expression>
                typeof holdings != 'undefined' &amp;&amp; holdings != null &amp;&amp;
                typeof holdings[0] != 'undefined' &amp;&amp; holdings[0] != null &amp;&amp;
                typeof holdings[0].holding != 'undefined' &amp;&amp; holdings[0].holding != null &amp;&amp;
                typeof holdings[0].holding.id != 'undefined' &amp;&amp; holdings[0].holding.id != null
            </expression>
            <message>Заполните поле</message>
        </condition>

        <constraint id="validateCountDay" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[
                        select case when end_date is not null and begin_date is not null
                                and (CAST(end_date AS date) - CAST(begin_date AS date) + 1) < :countDay then true else false end
                        from services_template
                        where id = :templateId
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="countDay" mapping="['countDay']" domain="integer"/>
                <param name="templateId" mapping="['templateId']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="names" mapping="[0][0][0]" domain="string"/>
            </out-parameters>
            <result expression="[0][0][0] == false"/>
            <message>Превышает количество дней действия шаблона</message>
        </constraint>

        <constraint id="validateBeginDay" level="error">
            <invocation>
                <sql:sql>
                    <![CDATA[
                        select case when end_date is not null and begin_date is not null
                                and (CAST(end_date AS date) - CAST(begin_date AS date) + 1) < :beginDay then true else false end
                        from services_template
                        where id = :templateId
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="beginDay" mapping="['beginDay']" domain="integer"/>
                <param name="templateId" mapping="['templateId']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="names" mapping="[0][0][0]" domain="string"/>
            </out-parameters>
            <result expression="[0][0][0] == false"/>
            <message>Превышает количество дней действия шаблона</message>
        </constraint>

        <condition id="beginDayFormat" level="error">
            <message>Введенное значение должно быть целым числом</message>
            <expression><![CDATA[
                var regex = new RegExp('^[0-9]*[1-9][0-9]*$');
                var v = true;
                if(typeof beginDay != 'undefined' && beginDay != null && beginDay != '')
                    v = regex.test(beginDay);
                v;
                ]]>
            </expression>
        </condition>

        <condition id="countDayFormat" level="error">
            <message>Введенное значение должно быть целым числом</message>
            <expression><![CDATA[
                var regex = new RegExp('^[0-9]*[1-9][0-9]*$');
                var v = true;
                if(typeof countDay != 'undefined' && countDay != null && countDay != '')
                    v = regex.test(countDay);
                v;
                ]]>
            </expression>
        </condition>

    </validations>

</object>
