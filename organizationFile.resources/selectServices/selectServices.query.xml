<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-3.0">
    <object-id>selectServices</object-id>
    <name>selectServices</name>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from sr_service s
                inner join sr_srv_prototype sp on sp.id=s.prototype_id
                left join sr_srv_category sc on sc.id=s.category_id
                left join (select * from sr_resource_service where :resource_id is null or resource_id=:resource_id) rs on rs.service_id=s.id
                left join pim_employee_position_resource epr on epr.id=rs.resource_id
                where s.org_id=:org_id and :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(s)
                from sr_service s
                inner join sr_srv_prototype sp on sp.id=s.prototype_id
                left join sr_srv_category sc on sc.id=s.category_id
                left join (select * from sr_resource_service where :resource_id is null or resource_id=:resource_id) rs on rs.service_id=s.id
                left join pim_employee_position_resource epr on epr.id=rs.resource_id
                where s.org_id=:org_id and :where
            </n2o:count-query>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>oid</id>
            <domain>integer</domain>
            <expression>s.id</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>code</id>
            <domain>string</domain>
            <expression>s.code</expression>
            <display/>
            <sorting/>
            <filters>
                <filter type="eq" filter-field="code">
                    upper(:expression) like '%'||upper(:code)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>s.name</expression>
            <display/>
            <sorting/>
            <filters>
                <filter type="eq" filter-field="name">
                    upper(:expression) like '%'||upper(:name)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>prototype.oid</id>
            <domain>integer</domain>
            <expression>sp.id</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>prototype.name</id>
            <domain>string</domain>
            <expression>sp.name</expression>
            <display/>
        </field>
        <field>
            <id>prototype_name</id>
            <domain>string</domain>
            <expression>sp.code || ' ' || sp.name</expression>
            <display/>
        </field>
        <field>
            <id>category.oid</id>
            <domain>integer</domain>
            <expression>sc.id</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>category.name</id>
            <domain>string</domain>
            <expression>sc.name</expression>
            <display/>
        </field>
        <field>
            <id>already_assigned</id>
            <domain>boolean</domain>
            <expression>epr.employee_position_id is not null</expression>
            <display/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>employee_position_id</id>
            <domain>integer</domain>
            <expression>epr.employee_position_id</expression>
            <display/>
            <filters auto-generate="true"/>
        </field>
        <field>
            <id>resource_id</id>
            <domain>integer</domain>
            <expression>:resource_id</expression>
            <filters>
                <filter type="eq" filter-field="resource_id"/>
            </filters>
        </field>
        <field>
            <id>checked</id>
            <domain>boolean</domain>
            <expression>false</expression>
            <display/>
        </field>
        <field>
            <id>org_id</id>
            <domain>integer</domain>
            <expression>:org_id</expression>
            <filters>
                <filter type="eq" filter-field="org_id" default-value="#{stocks.orgId}"/>
            </filters>
        </field>
    </fields>
</query>
