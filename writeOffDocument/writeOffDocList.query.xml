<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <object-id>writeOffDoc</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from inventory.write_off_document wdoc
                left outer join inventory.document doc on wdoc.id=doc.id
                left outer join inventory.store s on s.id=wdoc.send_store_id
                left outer join inventory.store_opr opr on opr.id=wdoc.store_opr_id
                left outer join inventory.funding_source fs on fs.id=wdoc.fund_source_id
                left outer join inventory.write_off_reason r on r.id=wdoc.reason_id
                left outer join inventory.commodity_group cg on cg.id=wdoc.com_group_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(doc)
                from inventory.write_off_document wdoc
                left outer join inventory.document doc on wdoc.id=doc.id
                left outer join inventory.store s on s.id=wdoc.send_store_id
                left outer join inventory.store_opr opr on opr.id=wdoc.store_opr_id
                left outer join inventory.funding_source fs on fs.id=wdoc.fund_source_id
                left outer join inventory.write_off_reason r on r.id=wdoc.reason_id
                left outer join inventory.commodity_group cg on cg.id=wdoc.com_group_id
                where :where
            </n2o:count-query>
            <n2o:alias>wdoc</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <expression>s.org_id</expression>
            <search value="#{org.id?}">(:expression = :org.id or :org.id is null)</search>
        </field>
        <field>
            <id>docNumber</id>
            <domain>string</domain>
            <name>№ документа</name>
            <expression>doc.int_doc_number</expression>
            <search>(:expression like '%'||'-'||:docNumber or :expression=:docNumber)</search>
        </field>
        <field>
            <id>docDate</id>
            <domain>date</domain>
            <name>Дата</name>
            <expression>doc.int_doc_dt</expression>
            <search type="between">
                <![CDATA[(:expression >= :docDate.begin and :expression <= :docDate.end) ]]>
            </search>
            <sorting>:expression</sorting>
        </field>
        <field>
            <id>docDateString</id>
            <domain>string</domain>
            <expression>to_char(doc.int_doc_dt, 'DD.MM.YYYY')</expression>
        </field>
        <field>
            <id>docDate.end</id>
            <domain>date</domain>
            <search unavailable="true"/>
            <display unavailable="true"/>
        </field>
        <field>
            <id>docDate.begin</id>
            <domain>date</domain>
            <search unavailable="true"/>
            <display unavailable="true"/>
        </field>
        <field>
            <id>status.id</id>
            <domain>integer</domain>
            <expression>doc.doc_status_id</expression>
            <search>(:expression = :status.id or :status.id=3)</search>
        </field>
        <field>
            <id>statusTooltip</id>
            <domain>string</domain>
            <display>
                case when doc.doc_status_id=1 then 'не проведен' else 'проведен' end
            </display>
            <search unavailable="true"/>
        </field>
        <field>
            <id>isExecuted</id>
            <domain>string</domain>
            <expression>(case when doc.doc_status_id=1 then 'false' else 'true' end)</expression>
        </field>
        <field>
            <id>isExecutedSimbol</id>
            <domain>string</domain>
            <name> </name>
            <expression>(case when doc.doc_status_id=1 then '&#10008;' else '&#10004;' end)</expression>
        </field>
        <field>
            <id>isExecutedColor</id>
            <domain>string</domain>
            <expression>case when doc.doc_status_id=2 then 'success' end</expression>
        </field>
        <field>
            <id>executedSpecExists</id>
            <domain>boolean</domain>
            <expression>(select exists(select 1 from inventory.write_off_spec where doc_id=wdoc.id and status_id=2))</expression>
        </field>
        <field>
            <id>executedDate</id>
            <domain>date</domain>
            <name>Проведен</name>
            <expression>doc.execute_dt</expression>
        </field>
        <field>
            <id>sendStore.id</id>
            <domain>integer</domain>
            <expression>s.id</expression>
            <search>:expression = :sendStore.id</search>
        </field>
        <field>
            <id>sendStore.name</id>
            <domain>string</domain>
            <name>Отправитель</name>
            <expression>s.name</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>storeOpr.name</id>
            <domain>string</domain>
            <name>Операция</name>
            <expression>opr.name</expression>
        </field>
        <field>
            <id>fundSource.id</id>
            <domain>integer</domain>
            <expression>fs.id</expression>
            <search>:expression= :fundSource.id</search>
        </field>
        <field>
            <id>fundSource.name</id>
            <domain>string</domain>
            <name>Финансирование</name>
            <expression>fs.name</expression>
        </field>
        <field>
            <id>reason.id</id>
            <domain>integer</domain>
            <expression>r.id</expression>
        </field>
        <field>
            <id>reason.name</id>
            <domain>string</domain>
            <name>Причина списания</name>
            <expression>r.short_name</expression>
        </field>
        <field>
            <id>comGroup.id</id>
            <domain>integer</domain>
            <expression>cg.id</expression>
        </field>
        <field>
            <id>comGroup.name</id>
            <domain>string</domain>
            <name>Тов. группа</name>
            <expression>cg.name</expression>
        </field>
        <field>
            <id>canBeRemoved</id>
            <domain>boolean</domain>
            <expression>case when doc.doc_status_id=2 or
                exists(select 1 from inventory.write_off_spec spec where spec.doc_id = wdoc.id and spec.status_id=2)
                then false else true end
            </expression>
        </field>
        <field>
            <id>docType.name</id>
            <domain>string</domain>
            <expression>'WRITE_OFF_DOC'</expression>
        </field>
        <field>
            <id>countOfSpec</id>
            <domain>integer</domain>
            <expression>
                (select count(*) from inventory.write_off_spec s where s.doc_id=wdoc.id)
            </expression>
        </field>
        <field>
            <id>copiedDoc.id</id>
            <domain>integer</domain>
            <expression>doc.id</expression>
        </field>
    </fields>
</query>