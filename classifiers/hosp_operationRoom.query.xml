<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
        >
    <!--<id>room</id>-->
    <name>Помещение</name>
    <object-id>hosp_classifier</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from pim_room_resource rr
                join pim_room pr on pr.id = rr.room_id
                join pim_department pd on pr.department_id = pd.id
                join pim_organization po on pd.org_id = po.id
                join pim_room_type rt on pr.type_id = rt.id
                left join sr_resource sr on rr.id=sr.id
                left join sr_resource_service srs on sr.id = srs.resource_id
                left join sr_service s on srs.service_id = s.id
                where rt.id = 6  and sr.res_kind_id = 6 and :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(1)
                from pim_room_resource rr
                join pim_room pr on pr.id = rr.room_id
                join pim_department pd on pr.department_id = pd.id
                join pim_organization po on pd.org_id = po.id
                join pim_room_type rt on pr.type_id = rt.id
                left join sr_resource sr on rr.id=sr.id
                left join sr_resource_service srs on sr.id = srs.resource_id
                left join sr_service s on srs.service_id = s.id
                where rt.id = 6  and sr.res_kind_id = 6 and :where
            </n2o:count-query>
            <n2o:alias>pr</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>rr.id</expression>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>pr.name</expression>
            <search>upper(pr.name) like upper(:name||'%')</search>
        </field>
        <field>
            <id>organizationId</id>
            <domain>integer</domain>
            <expression>po.id</expression>
        </field>

        <field>
            <id>serviceId</id>
            <domain>integer</domain>
            <expression>s.id</expression>
            <search>(
                (CASE
                (SELECT count(1) FROM sr_resource srx
                LEFT JOIN  sr_resource_service srsx ON srx.id = srsx.resource_id
                LEFT JOIN  sr_service sx ON srsx.service_id = sx.id
                WHERE srx.id = rr.id)
                WHEN 0 THEN TRUE
                ELSE
                exists(SELECT 1 FROM  sr_resource srx
                LEFT JOIN  sr_resource_service srsx ON srx.id = srsx.resource_id
                LEFT JOIN  sr_service sx ON srsx.service_id = sx.id
                WHERE srx.id = rr.id AND sx.id = :serviceId)
                END)
            </search>
        </field>

    </fields>
</query>