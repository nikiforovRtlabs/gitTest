<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">

    <object-id>pm_classifier</object-id>

    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from fin_price_list pl
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(1)
                from fin_price_list pl
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>pl.id</expression>
            <search>:expression = :id</search>
        </field>

        <field>
            <id>pricelistIds</id>
            <domain>integer[]</domain>
            <display unavailable="true"/>
            <search>pl.id in (:pricelistIds)</search>
        </field>

        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>pl.name</expression>
            <search>(upper(pl.name) like '%' || upper(:name) || '%')</search>
        </field>

        <field>
            <id>clinicId</id>
            <domain>integer</domain>
            <expression>pl.clinic_id</expression>
            <search>:expression = :clinicId</search>
        </field>
        <field>
            <id>periodTo</id>
            <domain>date</domain>
            <expression>pl.to_dt</expression>
            <search>(:expression &gt; :periodTo or :expression is null)</search>
        </field>
        <field>
            <id>periodFrom</id>
            <domain>date</domain>
            <expression>pl.from_dt</expression>
            <search>(:expression &lt; :periodFrom or :expression is null)</search>
        </field>

        <field>
            <id>contract</id>
            <domain>integer</domain>
            <search>(exists(select 1 from  fin_contract fc where fc.price_list_id = pl.id
                and fc.id = :contract) or ((select fc.price_list_id from fin_contract fc where fc.id = :contract) is null))
            </search>
            <display unavailable="true"/>
        </field>
        <field>
            <id>finType</id>
            <domain>integer</domain>
            <search>(exists(select 1 from fin_pl_to_fin_type fp where fp.price_list_id = pl.id and fp.financing_type_id = :finType) or :finType is null)
            </search>
            <display unavailable="true"/>
        </field>

    </fields>

</query>