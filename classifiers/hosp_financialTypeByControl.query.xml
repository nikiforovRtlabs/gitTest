<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">

    <object-id>hosp_classifier</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select from (
                    select f.id, f.name, oft.organization_id, true as fund_type_control
                      from fin_funding_source_type f
                           join pim_org_funding_type oft on oft.funding_source_type_id = f.id
                     union all
                    select f.id, f.name, null as organization_id, false as fund_type_control
                      from fin_funding_source_type f
                       ) t
                 where :where
                 order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*) from (
                    select f.id, f.name, oft.organization_id, true as fund_type_control
                      from fin_funding_source_type f
                           join pim_org_funding_type oft on oft.funding_source_type_id = f.id
                     union all
                    select f.id, f.name, null as organization_id, false as fund_type_control
                      from fin_funding_source_type f
                       ) t
                 where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>t.id</expression>
            <search>:expression = :id</search>
            <sorting>:expression asc</sorting>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>t.name</expression>
            <search>upper(:expression) like '%'||upper(:name)||'%'</search>
        </field>
        <field>
            <id>orgId</id>
            <domain>integer</domain>
            <expression>t.organization_id</expression>
            <search>(:expression is null or :expression = :organizationId)</search>
        </field>
        <field>
            <id>isFundCtr</id>
            <domain>boolean</domain>
            <expression>t.fund_type_control</expression>
            <search>:expression = coalesce(:fundTypeCtr, false)</search>
        </field>
    </fields>
</query>