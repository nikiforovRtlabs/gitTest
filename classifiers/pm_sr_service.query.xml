<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">

    <object-id>pm_classifier</object-id>

    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from public.sr_service d
                join fin_pl_pos_to_clinic_srv fpcs on fpcs.clinic_service_id = d.id
                left join public.sr_srv_category cat on cat.id = d.category_id
                left join public.sr_srv_type typ on typ.id = d.type_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(1)
                from public.sr_service d
                join fin_pl_pos_to_clinic_srv fpcs on fpcs.clinic_service_id = d.id
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>d.id</expression>
            <search>:expression = :id</search>
        </field>

        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>d.name</expression>
            <search>(upper(d.name) like '%' || upper(:name) || '%')</search>
        </field>

        <field>
            <id>discount.org.id</id>
            <domain>integer</domain>
            <name>МО</name>
            <expression>d.org_id</expression>
            <search>(:expression = :discount.org.id)</search>
        </field>

        <field>
            <id>orgId</id>
            <domain>integer</domain>
            <name>МО</name>
            <expression>d.org_id</expression>
            <search>(:expression = :orgId)</search>
        </field>

        <field>
            <id>code</id>
            <domain>string</domain>
            <name>Код услуги</name>
            <expression>d.code</expression>
            <search>(upper(d.code) like '%' || upper(:code) || '%')</search>
        </field>

        <field>
            <id>type.id</id>
            <domain>integer</domain>
            <name>Тип услуги</name>
            <expression>d.type_id</expression>
            <search>:expression = :type.id</search>
        </field>

        <field>
            <id>type.name</id>
            <domain>string</domain>
            <name>Тип услуги</name>
            <expression>typ.name</expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>category.id</id>
            <domain>integer</domain>
            <name>Категория услуги</name>
            <expression>d.category_id</expression>
            <search>:expression = :category.id</search>
        </field>

        <field>
            <id>category.name</id>
            <domain>string</domain>
            <name>Категория услуги</name>
            <expression>cat.name</expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>finContractId</id>
            <domain>integer</domain>
            <search>(:finContractId is null or not exists (select 1 from fin_service_contract fsc where fsc.contract_id = :finContractId)
                or exists (select 1 from fin_service_contract fsc where fsc.contract_id = :finContractId and fsc.service_id = d.id))</search>
            <display unavailable="true"/>
        </field>
        
        <field>
            <id>fundingTypeId</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search>(:fundingTypeId is null
                or exists (select 1 from sr_service_fin_type sft where sft.funding_id = :fundingTypeId and sft.service_id = d.id
                    and current_date between coalesce(sft.bdate, current_date) and coalesce(sft.edate, current_date)))</search>
        </field>
    </fields>

</query>