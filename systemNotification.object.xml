<?xml version="1.0" encoding="UTF-8"?>
    <object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns:sp="http://n2oapp.net/framework/config/schema/action-stored-procedure-1.0"
            xmlns:rmi="http://n2oapp.net/framework/config/schema/action-java-method-1.0"
            xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-1.0"
            xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
            xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
            xsi:schemaLocation="http://n2oapp.net/framework/config/schema/object-1.0">

    <name>Системное оповещение</name>

    <actions>
        <action id="create" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/notification/system/create
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="enabled" mapping="['enabled']"/>
                <param name="conditionExpression" mapping="['conditionExpression']" domain="string"/>
                <param name="event.id" mapping="['eventId']" domain="string"/>
                <param name="recipientQuery" mapping="['recipientQuery']" domain="string"/>
                <param name="description" mapping="['description']" domain="string"/>
                <param name="caption" mapping="['caption']" domain="string"/>
                <param name="text" mapping="['text']" domain="string"/>
                <param name="level.id" mapping="['levelId']" domain="integer"/>
                <param name="alertType.id" mapping="['alertTypeId']" domain="integer"/>
                <param name="messageBySelect" mapping="['messageBySelect']"/>
                <param name="messageQuerySelect" mapping="['messageQuerySelect']" domain="string"/>
                <param name="messageQueryParams" mapping="['messageQueryParams']" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="nothing">
            </validations>
        </action>

        <action id="update" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    ${n2o.backend.path}/notification/system/update
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="enabled" mapping="['enabled']"/>
                <param name="conditionExpression" mapping="['conditionExpression']" domain="string"/>
                <param name="event.id" mapping="['eventId']" domain="string"/>
                <param name="consumer.id" mapping="['consumerId']" domain="integer"/>
                <param name="recipientQuery" mapping="['recipientQuery']" domain="string"/>
                <param name="description" mapping="['description']" domain="string"/>
                <param name="caption" mapping="['caption']" domain="string"/>
                <param name="text" mapping="['text']" domain="string"/>
                <param name="level.id" mapping="['levelId']" domain="integer"/>
                <param name="alertType.id" mapping="['alertTypeId']" domain="integer"/>
                <param name="messageBySelect" mapping="['messageBySelect']"/>
                <param name="messageQuerySelect" mapping="['messageQuerySelect']" domain="string"/>
                <param name="messageQueryParams" mapping="['messageQueryParams']" domain="string"/>
                <param name="actionId" mapping="['actionId']" domain="integer"/>
                <param name="conditionId" mapping="['conditionId']" domain="integer"/>
                <param name="messageId" mapping="['messageId']" domain="integer"/>
                <param name="recipientTypeId" mapping="['recipientTypeId']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="nothing">
            </validations>
        </action>

        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    select messenger.delete_action_handler(:id);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="consumer.id" mapping="['consumerId']" domain="integer"/>
            </in-parameters>
            <confirmation-text>Вы уверены, что хотите удалить оповещение '{name}'?</confirmation-text>
            <fail-text>Не удалось удалить оповещение '{name}'</fail-text>
            <validations activate="whiteList">
                <validation ref-id="consumerActionUniq"/>
            </validations>
        </action>

        <action id="enable" name="Включить">
            <invocation>
                <sql:sql>
                    update messenger.action_handler set is_enabled=true where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
        </action>

        <action id="disable" name="Отключить">
            <invocation>
                <sql:sql>
                    update messenger.action_handler set is_enabled=false where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
        </action>
    </actions>

    <validations>
        <constraint id="consumerActionUniq" level="error" moment="before-action">
            <invocation>
                <sql:sql>
                    select count(ac.id) from event_handler.action ac where ac.consumer_id = :consumerId;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="consumer.id" mapping="['consumerId']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 1"/>
            <message>Невозможно удалить оповещение '{name}' (consumer связан с более чем одним action)</message>
        </constraint>
    </validations>

</object>