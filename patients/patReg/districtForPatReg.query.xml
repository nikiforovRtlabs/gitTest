<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-3.0">
    <!--<id>district</id>-->
    <object-id>patReg</object-id>
    <name>Участок</name>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from public.md_clinic_district mcd
                join public.md_clinic_separation mcs on mcs.id = mcd.separation_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from public.md_clinic_district mcd
                join public.md_clinic_separation mcs on mcs.id = mcd.separation_id
                where :where
            </n2o:count-query>
            <n2o:alias>mcd</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <display/>
            <expression>mcd.id</expression>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <display/>
            <expression>mcd.name</expression>
            <filters>
                <filter type="eq" filter-field="name">
                    (upper(:expression) like '%' || upper(:name) || '%')
                </filter>
            </filters>
        </field>

        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <display/>
            <expression>
                mcs.clinic_id
            </expression>
            <filters>
                <filter type="eq" filter-field="org.id">
                    mcs.clinic_id = :org.id
                </filter>
            </filters>
        </field>

        <field>
            <id>sep.from_dt</id>
            <domain>date</domain>
            <display/>
            <name>Дата начала действия Разбивки на участки</name>
            <expression>
                mcs.from_dt
            </expression>
        </field>
        <field>
            <id>sep.to_dt</id>
            <domain>date</domain>
            <display/>
            <name>Дата окончания действия Разбивки на участки</name>
            <expression>
                mcs.to_dt
            </expression>
        </field>

        <field>
            <id>from_dt</id>
            <domain>date</domain>
            <display/>
            <name>Дата начала действия Участка</name>
            <expression>
                mcd.from_dt
            </expression>
            <filters>
                <filter type="more" filter-field="from_dt">
                    ( (mcd.from_dt is null or :from_dt >= mcd.from_dt) and (mcd.to_dt is null or mcd.to_dt >= :from_dt) )
                </filter>
            </filters>
        </field>
        <field>
            <id>to_dt</id>
            <domain>date</domain>
            <display/>
            <name>Дата окончания действия Участка</name>
            <expression>
                mcd.to_dt
            </expression>
            <filters>
                <filter type="less" filter-field="to_dt">
                    (mcd.to_dt is null or mcd.to_dt >= :to_dt)
                </filter>
            </filters>
        </field>
        <field>
            <id>reg_type_id</id>
            <domain>integer</domain>
            <expression>mcs.reg_type_id</expression>
            <filters>
                <filter type="eq" filter-field="reg_type_id">
                    (mcs.reg_type_id = :reg_type_id)
                </filter>
            </filters>
        </field>
    </fields>
</query>
