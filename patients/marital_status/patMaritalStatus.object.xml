<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>patMaritalStatus</id>-->
    <name>Семейное положение пациента</name>
    <actions>
        <action id="create" name="Создать">
            <invocation>
                <sql:sql>
                    <![CDATA[
                        UPDATE pim_indiv_marital_status
                        SET to_dt = cast(cast(:from_date as date) - cast('1 day' as interval) as date)
                        WHERE id in
                            (select pims.id
                            from pim_indiv_marital_status pims
                            WHERE pims.individual_id = :party_id
                                and :id is null
                                and pims.from_dt < :from_date
                                and pims.to_dt is null);

                        insert into public.pim_indiv_marital_status (id,individual_id,status_id,from_dt,to_dt)
                            values (nextval('public.pim_indiv_marital_status_seq'),:party_id,:status,:from_date,:to_date)
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="patient.id" mapping="['party_id']" domain="integer"/>
                <param name="status.id" mapping="['status']" domain="integer"/>
                <param name="from_date" mapping="['from_date']" domain="date"/>
                <param name="to_date" mapping="['to_date']" domain="date"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[1][0]" domain="integer"/>
            </out-parameters>
            <success-text>
                Запись о семейном положении пациента сохранена в системе
            </success-text>
        </action>
        <action id="update" name="Изменить">
            <invocation>
                <sql:sql>
                    update public.pim_indiv_marital_status set status_id = :status,from_dt = :from_date,to_dt = :to_date where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="status.id" mapping="['status']" domain="integer"/>
                <param name="from_date" mapping="['from_date']" domain="date"/>
                <param name="to_date" mapping="['to_date']" domain="date"/>
            </in-parameters>
            <success-text>
                Изменение записи о семейном положении пациента сохранено в системе
            </success-text>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    delete from public.pim_indiv_marital_status where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="status.name" mapping="['status']" domain="string"/>
                <param name="from_date" mapping="['from_date']" domain="date"/>
                <param name="to_date" mapping="['to_date']" domain="date"/>
                <param name="full_name" mapping="['full_name']" domain="string"/>
            </in-parameters>
            <confirmation-text>
                Вы уверены, что запись о семейном положении "{full_name}" должна быть удалена?
            </confirmation-text>
            <success-text>
                Запись о семейном положении "{full_name}" успешно удалена.
            </success-text>
            <validations activate="blackList">
                <validation ref-id="checkDate"/>
            </validations>
        </action>
    </actions>
    <validations>
        <constraint id="checkUniqueMarSt" level="error" moment="before-action">
            <message>Для указанного периода дат уже существуют записи о семейном положении.</message>
            <invocation>
                <sql:sql>
                    <![CDATA[
                    select count(*)
                    from pim_indiv_marital_status pims
                    where pims.individual_id = :pat
                        and not (pims.from_dt > :to_dt and cast(:to_dt as date) is not null and pims.from_dt is not null
                        or pims.to_dt < :from_dt and pims.to_dt is not null)
                        and (:id is null or pims.id!=:id)
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="patient.id" mapping="['pat']" domain="integer"/>
                <param name="from_date" mapping="['from_dt']" domain="date"/>
                <param name="to_date" mapping="['to_dt']" domain="date"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>

        <condition id="checkDate" level="error" moment="before-action">
            <message>Дата окончания должна быть позже даты начала.</message>
            <expression on="to_date"><![CDATA[
                ((to_date == null) ||
                (moment(to_date, 'DD.MM.YYYY') >= moment(from_date, 'DD.MM.YYYY'))
                )
                ]]>
            </expression>
        </condition>

        <constraint id="messMarSt" level="warning" moment="before-action">
            <message>Действующие записи будут закрыты датой {date}.</message>
            <invocation>
                <sql:sql>
                    <![CDATA[
                    select count(*), to_char(cast(cast(:from_dt as date) - cast('1 day' as interval) as date),'dd.mm.yyyy')
                    from pim_indiv_marital_status pims
                    where
                        pims.individual_id = :pat
                        and :id is null
                        and pims.from_dt < :from_dt
                        and pims.to_dt is null
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="patient.id" mapping="['pat']" domain="integer"/>
                <param name="from_date" mapping="['from_dt']" domain="date"/>
                <param name="to_date" mapping="['to_dt']" domain="date"/>
            </in-parameters>
            <out-parameters>
                <param name="date" mapping="[0][0][1]" domain="date"/>
            </out-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
    </validations>
</object>
