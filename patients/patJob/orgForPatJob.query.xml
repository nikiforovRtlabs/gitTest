<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>orgForPatJob</id>-->
    <name>МО</name>
    <object-id>orgForPatJob</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from pim_organization po
                left join pim_party_role_to_party pprtp on pprtp.party_id = po.id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from pim_organization po
                left join pim_party_role_to_party pprtp on pprtp.party_id = po.id
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <display/>
            <expression>po.id</expression>
            <!--<search unavailable="true"/>-->
        </field>
        <field>
            <id>full_name</id>
            <domain>string</domain>
            <name>Полное наименование</name>
            <display/>
            <expression>po.full_name</expression>
        </field>
        <field>
            <id>short_name</id>
            <domain>string</domain>
            <name>Краткое наименование</name>
            <display/>
            <expression>po.short_name</expression>
        </field>

        <field>
            <id>name</id>
            <domain>string</domain>
            <display/>
            <expression>coalesce(po.short_name, po.full_name)</expression>
            <filters>
                <filter type="eq" filter-field="name">
                    upper(:expression) like '%'||upper(:name)||'%'
                </filter>
            </filters>
            <!--<search>upper(:expression) like '%'||upper(:name)||'%'</search>-->
        </field>

        <field>
            <id>is_forbidden_org</id>
            <domain>boolean</domain>
            <expression>
                case when exists (select * from public.sec_forbidden_org where id = po.id)
                    then true
                    else false
                end
            </expression>
            <filters>
                <filter type="eq" filter-field="is_forbidden_org"/>
            </filters>
        </field>

        <field>
            <id>role_id</id>
            <domain>integer</domain>
            <name>Роль</name>
            <display/>
            <expression>
                pprtp.role_id
            </expression>
            <filters>
                <filter type="eq" filter-field="role_id"/>
            </filters>
        </field>
        
    </fields>

</query>