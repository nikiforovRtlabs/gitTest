<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-3.0">
    <!--<id>employeeJob</id>-->
    <name>Сотрудник</name>
    <object-id>patJob</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from pim_employee pe
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from pim_employee pe
                where :where
            </n2o:count-query>
            <n2o:alias>pe</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <display/>
            <expression>pe.id</expression>
            <filters>
                <filter type="eq" filter-field="id"/>
            </filters>
        </field>

        <field>
            <id>indiv.id</id>
            <domain>integer</domain>
            <display/>
            <expression>pe.individual_id</expression>
            <filters>
                <filter type="eq" filter-field="indiv.id"/>
            </filters>
        </field>

        <field>
            <id>number</id>
            <domain>string</domain>
            <name>Табельный номер</name>
            <display/>
            <expression>pe.number</expression>
            <filters>
                <filter type="eq" filter-field="number">
                    <!--upper(:expression) like '%'||:code||'%'-->
                </filter>
            </filters>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <name>Наименование</name>
            <display/>
            <expression>pe.note</expression>
            <filters>
                <filter type="eq" filter-field="name">
                    upper(:expression) like '%'||upper(:name)||'%'
                </filter>
            </filters>
        </field>

        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <name>Организация</name>
            <display/>
            <expression>pe.organization_id</expression>
            <filters>
                <filter type="eq" filter-field="org.id"/>
            </filters>
        </field>

        <field>
            <id>employment_dt</id>
            <domain>date</domain>
            <display/>
            <expression>pe.employment_dt</expression>
            <filters>
                <filter type="less" filter-field="employment_dt">
                    <![CDATA[
                    :expression <= :employment_dt or :expression is null
                    ]]>
                </filter>
            </filters>
        </field>
        <field>
            <id>dismissal_dt</id>
            <domain>date</domain>
            <display/>
            <expression>pe.dismissal_dt</expression>
            <filters>
                <filter type="more" filter-field="dismissal_dt">
                    <![CDATA[
                    :expression > :dismissal_dt or :expression is null
                    ]]>
                </filter>
            </filters>
        </field>

        <field>
            <id>is_dismissed</id>
            <domain>boolean</domain>
            <name>Сотрудник уволен</name>
            <display/>
            <expression>
                case when (pe.is_dismissed = true and (pe.dismissal_dt is null or pe.dismissal_dt > cast(now() as date)))
                    then true
                    else false
                end
            </expression>
        </field>

        <field>
            <id>note</id>
            <domain>string</domain>
            <name>Информация</name>
            <display/>
            <expression>pe.note</expression>
        </field>
    </fields>
</query>