<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-3.0">

    <name>Кем выдан</name>

    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from pim_organization o
                inner join pim_party_doc_org_issued doi ON doi.org_id=o.id
                inner join pim_doc_type dt ON doi.type_id=dt.id
                left join pim_org_code oc ON o.id=oc.org_id and (select ct.code from pim_code_type ct where ct.id = oc.type_id) = 'CODE_OMS'
                where (o.close_dt is null or o.close_dt > now()) and :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(o)
                from pim_organization o
                inner join pim_party_doc_org_issued doi ON doi.org_id=o.id
                inner join pim_doc_type dt ON doi.type_id=dt.id
                left join pim_org_code oc ON o.id=oc.org_id and (select ct.code from pim_code_type ct where ct.id = oc.type_id) = 'CODE_OMS'
                where (o.close_dt is null or o.close_dt > now()) and :where
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>o.id</expression>
            <display>:expression</display>
            <filters>
                <filter type="eq" filter-field="id"/>
            </filters>
        </field>

        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>o.short_name</expression>
            <display>concat(oc.code, ' ', o.short_name)</display>
            <filters auto-generate="true">
                <filter filter-field="name" type="eq">upper(trim(concat(oc.code, ' ', o.short_name))) like '%'||upper(trim(:name))||'%'</filter>
            </filters>
        </field>

        <field>
            <id>type_id</id>
            <expression>dt.id</expression>
            <domain>integer</domain>
            <filters>
                <filter type="eq" filter-field="type_id"/>
            </filters>
        </field>

        <field>
            <id>seriesMessagePattern</id>
            <domain>string</domain>
            <display>doi.series_message_pattern</display>
        </field>

        <field>
            <id>numberMessagePattern</id>
            <domain>string</domain>
            <display>doi.number_message_pattern</display>
        </field>
    </fields>
</query>