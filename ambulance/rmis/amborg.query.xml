<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>amborg</id>-->
    <name>Станция</name>
    <object-id>amb_org</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from pim_organization o
                left join pim_party_role_to_party prtp on o.id = prtp.party_id
                left join pim_party_role ppr on prtp.role_id = ppr.id
                left join pim_party_address ppa on o.id = ppa.party_id and ppa.is_valid = true
                left join pim_party_addr_to_addr_type ppatat on ppa.id = ppatat.party_address_id and ppatat.address_type_id = 6
                left join address_element toael on ppa.addr_id = toael.id
                left join address_element_data aed on aed.id = toael.id
                where
                <!--(select path from address_element_data where id = :addr_parent) @> aed.path-->
                <!--and -->
                :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from pim_organization o
                left join pim_party_role_to_party prtp on o.id = prtp.party_id
                left join pim_party_role ppr on prtp.role_id = ppr.id
                left join pim_party_address ppa on o.id = ppa.party_id and ppa.is_valid = true
                left join pim_party_addr_to_addr_type ppatat on ppa.id = ppatat.party_address_id and ppatat.address_type_id = 6
                left join address_element toael on ppa.addr_id = toael.id
                left join address_element_data aed on aed.id = toael.id
                where
                <!--(select path from address_element_data where id = :addr_parent) @> aed.path-->
                <!--and -->
                :where
            </n2o:count-query>
            <n2o:alias>o</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <expression>o.id</expression>
        </field>
        <field>
            <id>full_name</id>
            <domain>string</domain>
            <name>Полное наименование</name>
            <expression>o.full_name</expression>
            <search>upper(o.full_name) like upper(:full_name||'%')</search>
        </field>
        <field>
            <id>short_name</id>
            <domain>string</domain>
            <name>Краткое наименование</name>
            <expression>o.short_name</expression>
            <search>upper(o.short_name) like upper('%'||:short_name||'%')</search>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <name>Наименование</name>
            <expression>coalesce(o.short_name,o.full_name)</expression>
            <search>upper(:expression) like upper('%'||:name||'%')</search>
        </field>
        <field>
            <id>PRId</id>
            <domain>integer</domain>
            <expression>ppr.id</expression>
        </field>
        <field>
            <id>party_role.id</id>
            <domain>integer</domain>
            <expression>ppr.id</expression>
        </field>
        <field>
            <id>party_role.name</id>
            <domain>string</domain>
            <name>Роль организации</name>
            <expression>ppr.name</expression>
            <!--<search>upper(prr.name) like upper(:party_role.name||'%')</search>-->
            <search unavailable="true"/>
        </field>
        
        <field>
            <id>ppa_id</id>
            <domain>integer</domain>
            <expression>ppa.id</expression>
        </field>
        <field>
            <id>addr</id>
            <domain>integer</domain>
            <name>Адрес</name>
            <expression>ppa.addr_id</expression>
        </field>
        <field>
            <id>addrname</id>
            <domain>string</domain>
            <name>Адрес</name>
            <expression>aed.search_name</expression>
        </field>
        <field>
            <id>address_type_id</id>
            <domain>integer</domain>
            <expression>ppatat.address_type_id</expression>
            <search unavailable="true"/>
        </field>

        <!--добавить поле, которое позволит определить, относиться ли данная МО к территории обслуживания станции-->

        <field>
            <id>addr_parent</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <sorting unavailable="true"/>
            <!--<search value="#{addr_parent}">
                case when :id is null
                    then (select path from address_element_data where id = cast(:addr_parent as integer)) @> aed.path
                    else true
                end
            </search>-->
        </field>
    </fields>
</query>