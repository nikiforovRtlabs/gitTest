<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xsi:schemaLocation="http://n2oapp.net/framework/config/schema/query-1.0 http://localhost:8080/n2o/config/schema/query/query-1.0.xsd">
    <!--<id>individual</id>-->
    <name>Люди</name>
    <object-id>individuall</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from pci_patient pat
                left join pim_individual i on pat.id = i.id
                left join pim_gender g on g.id = i.gender_id
                left join md_ethnic_group eg on eg.id = pat.ethnic_group_id
                left join md_soc_group sg on sg.id = pat.social_group_id
                left join pim_nationality n on n.id = i.nationality_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(i)
                from pim_individual i
                left join pci_patient pat on pci.id = i.id
                left join pim_gender g on g.id = i.gender_id
                left join md_ethnic_group eg on eg.id = pci.ethnic_group_id
                left join md_soc_group sg on sg.id = pci.social_group_id
                where :where
            </n2o:count-query>
            <n2o:alias>i</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>pat.id</expression>
        </field>
        <field>
            <id>surname</id>
            <domain>string</domain>
            <name>Фамилия</name>
            <expression>i.surname</expression>
            <search>upper(i.surname) like upper('%'||:surname||'%')</search>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <name>Имя</name>
            <expression>i.name</expression>
            <search>upper(i.name) like upper('%'||:name||'%')</search>
            <sorting>i.name</sorting>
        </field>
        <field>
            <id>patrName</id>
            <domain>string</domain>
            <name>Отчество</name>
            <expression>i.patr_name</expression>
            <search>upper(i.patr_name) like upper('%'||:patrName||'%')</search>
            <sorting>i.patr_name</sorting>
        </field>
        <field>
            <id>indiv</id>
            <domain>string</domain>
            <name>Пациент</name>
            <expression>i.surname||' '||i.name||' '||i.patr_name</expression>
            <search>upper(:expression) like upper ('%'||:indiv||'%')</search>
        </field>
        <field>
            <id>birthday</id>
            <domain>Date</domain>
            <name>Дата рождения</name>
            <expression>i.birth_dt</expression>
            <search>i.birth_dt = :birthday</search>
            <sorting>i.birth_dt</sorting>
        </field>
        <field>
            <id>age</id>
            <domain>integer</domain>
            <name>Возраст</name>
            <display>date_part('year', age(i.birth_dt))</display>
            <search unavailable="true"/>
            <sorting>date_part('year', age(i.birth_dt))</sorting>
        </field>
        <field>
            <id>gender.id</id>
            <name>Пол</name>
            <domain>integer</domain>
            <expression>g.id</expression>
        </field>
        <field>
            <id>gender.name</id>
            <name>Пол</name>
            <domain>string</domain>
            <expression>g.name</expression>
        </field>
        <field>
            <id>vip</id>
            <name>VIP</name>
            <domain>Boolean</domain>
            <expression>pci.vip</expression>
        </field>
        <field>
            <id>ethnicGroupName</id>
            <name>Этническая группа</name>
            <domain>string</domain>
            <expression>eg.name</expression>
        </field>
        <field>
            <id>socialGroupName</id>
            <name>Социальная группа</name>
            <domain>string</domain>
            <expression>sg.name</expression>
        </field>
        <field>
            <id>nationality.name</id>
            <name>Пол</name>
            <domain>string</domain>
            <expression>n.name</expression>
        </field>
        <field>
            <id>nationality.id</id>
            <domain>integer</domain>
            <expression>n.id</expression>
        </field>
    </fields>
</query>