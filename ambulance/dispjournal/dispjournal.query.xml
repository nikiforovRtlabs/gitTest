<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <name>Журнал диспетчера</name>
    <object-id>dispjournal</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query><![CDATA[
                select :select
                from amb.md_ambulance_call cal
                join amb.md_ambulance_change mac on mac.id = cal.call_dt
                join amb.md_ambulance_call_kind ck on ck.id = cal.call_kind_id
                left join amb.md_ambulance_caller_reason cr on cr.id = cal.caller_reason_id
                left join amb.md_ambulance_call_reason macr on macr.id = cr.call_reason_id
                left join amb.md_ambulance_reason_accident mara on mara.id = cr.reason_accident_id
                left join md_diagnosis dia on dia.id = cal.reason_diag

                left join address_element ael on ael.id = cal.address_id
                left join address_element_type aet on aet.id = ael.type_id

                join pim_individual pip on pip.id = cal.patient_id
                JOIN LATERAL ( SELECT
                                CASE
                                    WHEN (COALESCE(t.age_yy, 0) = 0) THEN
                                    CASE
                                        WHEN (COALESCE(t.age_mm, 0) < 1) THEN tdd.day_str
                                        ELSE tmm.month_str
                                    END
                                    WHEN (COALESCE(t.age_yy, 0) < 18) THEN
                                    CASE
                                        WHEN (COALESCE(t.age_mm, 0) = 0) THEN tyy.year_str
                                        ELSE concat(tyy.year_str, ' ', tmm.month_str)
                                    END
                                    ELSE tyy.year_str
                                END AS age_txt,
                            NULL::integer AS age_sort
                           FROM (((( SELECT COALESCE((date_part('year'::text, t_1.age))::integer, pip.age_year) AS age_yy,
                                    COALESCE((date_part('month'::text, t_1.age))::integer, pip.age_month) AS age_mm,
                                    COALESCE((date_part('day'::text, t_1.age))::integer, pip.age_day) AS age_dd
                                   FROM ( SELECT age((COALESCE((pip.death_dt)::date, ('now'::text)::date))::timestamp with time zone, (pip.birth_dt)::timestamp with time zone) AS age) t_1) t
                             LEFT JOIN LATERAL ( SELECT format('%s %s.'::text, t.age_yy,
                                        CASE
                                            WHEN ((t.age_yy <> ALL (ARRAY[11, 12, 13, 14])) AND ((t.age_yy % 10) = ANY (ARRAY[1, 2, 3, 4]))) THEN 'г'::text
                                            ELSE 'л'::text
                                        END) AS year_str
                                  WHERE (t.age_yy IS NOT NULL)
                                 LIMIT 1) tyy ON (true))
                             LEFT JOIN LATERAL ( SELECT format('%s мес.'::text, t.age_mm) AS month_str
                                  WHERE (t.age_mm IS NOT NULL)
                                 LIMIT 1) tmm ON (true))
                             LEFT JOIN LATERAL ( SELECT format('%s дн.'::text, t.age_dd) AS day_str
                                  WHERE (t.age_dd IS NOT NULL)
                                 LIMIT 1) tdd ON (true))
                         LIMIT 1) p_age on TRUE

                left join amb.md_ambulance_priority ap on ap.id = cal.priority_id
                join pim_employee_position pep on pep.id = cal.registrator_id
                join pim_employee pe on pe.id = pep.employee_id
                join pim_individual pi on pi.id = pe.individual_id
                join pim_position ppos on ppos.id = pep.position_id

                left join amb.sr_res_team_job srtj on srtj.id = cal.brg_id
                left join amb.sr_res_team srt on srt.id = srtj.team_id
                left join SR_RES_GROUP srg on srg.id = srt.resource_id
                join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id desc limit 1)
                join amb.md_ambulance_call_state macs on macs.id = mash.state_id

                left join amb.md_ambulance_call_result calres on calres.id = cal.id
                left join mc_case ccase on ccase.id = calres.case_id
                left join sr_srv_rendered ssr_res on ssr_res.id = calres.srv_rendered_id
                left join amb.md_ambulance_call_services cserv on cserv.call_id = calres.id and (select for_upload from sr_srv_rendered where id = cserv.service_id)
                left join sr_srv_rendered ssr on ssr.id = cserv.service_id

                left join sr_res_group rensrg on rensrg.id = ssr.res_group_id

                left join mc_step step on step.id = ccase.closing_step_id

                left join mc_diagnosis masterd on masterd.id = step.main_diagnosis_id
                left join md_diagnosis masterdiag on masterdiag.id = masterd.diagnos_id

                left join mc_diagnosis accompd on accompd.case_id = ccase.id and  accompd.is_main is false
                left join md_diagnosis accompdiag on accompdiag.id = accompd.diagnos_id

                where :where
                order by :order
               ]]>
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from amb.md_ambulance_call cal
                join amb.md_ambulance_change mac on mac.id = cal.call_dt
                join amb.md_ambulance_call_kind ck on ck.id = cal.call_kind_id
                left join amb.md_ambulance_caller_reason cr on cr.id = cal.caller_reason_id
                left join amb.md_ambulance_call_reason macr on macr.id = cr.call_reason_id
                left join amb.md_ambulance_reason_accident mara on mara.id = cr.reason_accident_id
                left join md_diagnosis dia on dia.id = cal.reason_diag

                left join address_element ael on ael.id = cal.address_id
                left join address_element_type aet on aet.id = ael.type_id

                join pim_individual pip on pip.id = cal.patient_id
                left join amb.md_ambulance_priority ap on ap.id = cal.priority_id
                join pim_employee_position pep on pep.id = cal.registrator_id
                join pim_employee pe on pe.id = pep.employee_id
                join pim_individual pi on pi.id = pe.individual_id
                join pim_position ppos on ppos.id = pep.position_id

                left join amb.sr_res_team_job srtj on srtj.id = cal.brg_id
                left join amb.sr_res_team srt on srt.id = srtj.team_id
                left join SR_RES_GROUP srg on srg.id = srt.resource_id
                join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id desc limit 1)
                join amb.md_ambulance_call_state macs on macs.id = mash.state_id

                left join amb.md_ambulance_call_result calres on calres.id = cal.id
                left join mc_case ccase on ccase.id = calres.case_id
                left join sr_srv_rendered ssr_res on ssr_res.id = calres.srv_rendered_id
                left join amb.md_ambulance_call_services cserv on cserv.call_id = calres.id and (select for_upload from sr_srv_rendered where id = cserv.service_id)
                left join sr_srv_rendered ssr on ssr.id = cserv.service_id

                left join sr_res_group rensrg on rensrg.id = ssr.res_group_id

                left join mc_step step on step.id = ccase.closing_step_id

                left join mc_diagnosis masterd on masterd.id = step.main_diagnosis_id
                left join md_diagnosis masterdiag on masterdiag.id = masterd.diagnos_id

                left join mc_diagnosis accompd on accompd.case_id = ccase.id and  accompd.is_main is false
                left join md_diagnosis accompdiag on accompdiag.id = accompd.diagnos_id

                where :where
            </n2o:count-query>
            <n2o:alias>cal</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <expression>cal.id</expression>
            <search>cal.id = :id</search>
        </field>
        <field>
            <id>number</id>
            <domain>integer</domain>
            <name>№</name>
            <expression>cal.call_number</expression>
        </field>
        <field>
            <id>change.id</id>
            <domain>integer</domain>
            <expression>mac.id</expression>
            <!--<expression>cal.call_dt</expression>-->
        </field>
        <field>
            <id>change_date</id>
            <domain>string</domain>
            <name>Смена</name>
            <expression>to_char(mac.from_data,'DD.MM.YYYY')</expression>
        </field>
        <field>
            <id>call_kind.id</id>
            <domain>integer</domain>
            <expression>ck.id</expression>
        </field>
        <field>
            <id>call_kind.code</id>
            <domain>string</domain>
            <name>Вид</name>
            <expression>ck.code</expression>
            <!--<search>ck.e_code</search>-->
        </field>
        <field>
            <id>call_type.id</id>
            <domain>integer</domain>
            <!--<expression>act.id</expression> -->
            <expression>cal.call_type_id</expression>
        </field>
        <!--<field>-->
            <!--<id>call_type.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Тип вызова</name>-->
            <!--<expression>act.name</expression>-->
        <!--</field>-->

        <field>
            <id>from_time</id>
            <domain>time</domain>
            <name>Время приема вызова</name>
            <expression>cal.from_time</expression>
        </field>
        <field>
            <id>ftime</id>
            <domain>string</domain>
            <name>Принят</name>
            <expression>to_char(cal.from_time,'hh24:mi')</expression>
        </field>
        <!--<field>-->
            <!--<id>from_dt</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Принят</name>-->
            <!--<expression>to_char(cal.from_time,'dd.mm.yyyy')</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>ffrom_dt</id>-->
            <!--<domain>date</domain>-->
            <!--<name>Принят с</name>-->
            <!--<expression>to_char(cal.from_time,'dd.mm.yyyy')</expression>-->
            <!--<search><![CDATA[-->
                <!--cast(cal.from_time as date) >= :ffrom_dt-->
                <!--]]>-->
            <!--</search>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>tfrom_dt</id>-->
            <!--<domain>date</domain>-->
            <!--<name>Принят по</name>-->
            <!--<expression>to_char(cal.from_time,'dd.mm.yyyy')</expression>-->
            <!--<search><![CDATA[-->
                <!--cast(cal.from_time as date) <= :tfrom_dt-->
                <!--]]>-->
            <!--</search>-->
        <!--</field>-->

        <field>
            <id>todayDate.begin</id>
            <domain>date</domain>
            <expression>cal.from_time</expression>
            <search>(case when :isToDay = true then cal.from_time >= cast(:todayDate.begin as timestamp) else true end)</search>
        </field>
        <field>
            <id>todayDate.end</id>
            <domain>date</domain>
            <expression>cal.from_time</expression>
            <search>
                <![CDATA[(case when :isToDay = true then cal.from_time < cast(:todayDate.end as timestamp) else true end)]]>
            </search>
        </field>
        <field>
            <id>yesterdayDate.begin</id>
            <domain>date</domain>
            <expression>cal.from_time</expression>
            <search>(case when :isToDay = false then cal.from_time >= cast(:yesterdayDate.begin as timestamp) else true end) </search>
        </field>
        <field>
            <id>yesterdayDate.end</id>
            <domain>date</domain>
            <expression>cal.from_time</expression>
            <search>
                <![CDATA[(case when :isToDay = false then cal.from_time < cast(:yesterdayDate.end as timestamp) else true end)]]>
            </search>
        </field>

        <!--<field>-->
            <!--<id>date.begin</id>-->
            <!--<domain>date</domain>-->
            <!--<display unavailable="true"/>-->
            <!--<search>cal.from_time >= :date.begin</search>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>date.end</id>-->
            <!--<domain>date</domain>-->
            <!--<display unavailable="true"/>-->
            <!--<search><![CDATA[-->
                <!--cast(cal.from_time as date) <= :date.end-->
                <!--]]>-->
            <!--</search>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>to_time</id>-->
            <!--<domain>time</domain>-->
            <!--<name>Время окончания вызова</name>-->
            <!--<expression>to_char(cal.to_time,'hh24:mi')</expression>-->
        <!--</field>-->
        <field>
            <id>time</id>
            <domain>time</domain>
            <name>Длит-ть</name>
            <expression>
				case when cal.to_time is null then cast((now() - mash.date_time) as time) else null end
			</expression>
        </field>
        <field>
            <id>calltime</id>
            <domain>time</domain>
            <name>Время обслуживания</name>
            <expression>
				case when cal.to_time is not null then cast((cal.to_time - cal.from_time) as time) else null end
			</expression>
        </field>
        <field>
            <id>caller_reason.id</id>
            <domain>integer</domain>
            <expression>cr.id</expression>
        </field>
        <field>
            <id>caller_reason.name</id>
            <domain>string</domain>
            <name>Повод</name>
            <expression>cr.name</expression>
        </field>
        <field>
            <id>diagnosis.id</id>
            <domain>integer</domain>
            <expression>dia.id</expression>
        </field>
        <field>
            <id>diagnosis.codename</id>
            <domain>string</domain>
            <name>Диагноз</name>
            <expression>dia.code || ' ' ||dia.name</expression>
        </field>
        <!--<field>-->
            <!--<id>diagnosis.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Диагноз</name>-->
            <!--<expression>dia.name</expression>-->
        <!--</field>-->
        <field>
            <id>reason</id>
            <domain>string</domain>
            <name>Повод</name>
            <expression>coalesce(cr.name,dia.name)</expression>
        </field>
        <!--<field>-->
            <!--<id>reason_note</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Дополнительный повод</name>-->
            <!--<expression>cal.reason_note</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>is_group</id>-->
            <!--<domain>boolean</domain>-->
            <!--<name>К группе пострадавших</name>-->
            <!--<expression>cal.is_group_sufferer</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>sum_sufferer</id>-->
            <!--<domain>integer</domain>-->
            <!--<name>Количество пострадавших</name>-->
            <!--<expression>cal.sum_sufferer</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <field>
            <id>call_place.id</id>
            <domain>integer</domain>
            <!--<expression>pl.id</expression>-->
            <expression>cal.call_place_id</expression>
        </field>
        <!--<field>-->
            <!--<id>call_place.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Место вызова</name>-->
            <!--<expression>pl.name</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>place_note</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Место вызова: примечания</name>-->
            <!--<expression>cal.call_place_note</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <!--<expression>plorg.id</expression>-->
            <expression>cal.place_org_id</expression>
        </field>
        <!--<field>-->
            <!--<id>org.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Организация места вызова</name>-->
            <!--<expression>coalesce(plorg.short_name,plorg.full_name)</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <field>
            <id>department.id</id>
            <domain>integer</domain>
            <!--<expression>pldep.id</expression>-->
            <expression>cal.place_department_id</expression>
        </field>
        <!--<field>-->
            <!--<id>department.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Подразделение места вызова</name>-->
            <!--<expression>pldep.name</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>myAddress.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>ael.id</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>adressId</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>cal.address_id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>address.id</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Адрес вызова</name>-->
            <!--<expression>-->
                <!--cal.address_id-->
            <!--</expression>-->
        <!--</field>-->
        <field>
            <id>address.id</id>
            <domain>integer</domain>
            <name>Адрес вызова</name>
            <expression>cal.address_id</expression>
            <search>
                (select path from address_element_data where id = cast(:address.id as integer)) @> (select path from address_element_data where id = cal.address_id)
            </search>
        </field>
        <field>
            <id>address.name</id>
            <domain>string</domain>
            <name>Адрес вызова</name>
            <!--<expression>concat (adr__get_element_as_text(cal.address_id, '(4,s,0)(6,s,1)(7,s,1)(8,s,1)'),adr__get_element_as_text(cal.address_id, '(2,s,0)'))</expression>-->
            <!--<search>upper(:expression) like upper('%'||:address||'%')</search>-->
            <!--<expression>coalesce(adr__get_element_as_text(cal.address_id,'(2,s,0)(4,s,0)(6,s,0)(7,s,0)(8,s,0)'),cal.description)</expression>-->
            <!--<expression>coalesce(aed.search_name,cal.description)</expression>-->
            <!--<expression>-->
                <!--case when ael.name is not null then aet.short_name||'. '||ael.name else '' end|| case when cal.house is not null then ' д.'||cal.house else '' end|| case when cal.apartment is not null then ' кв.'||cal.apartment else '' end||case when cal.description is not null then ' /'||cal.description else '' end-->
            <!--</expression>-->
            <expression>
                concat (adr__get_element_as_text(cal.address_id, '(6,s,1)(7,s,1)(8,s,1)'),', ',adr__get_element_as_text(cal.address_id, '(4,s,0)'),' ',cal.description)
            </expression>
            <!--<display unavailable="true"/>-->
            <!--<search unavailable="true"/>-->
            <!--<sorting unavailable="true"/>-->
        </field>
        <!--<field>-->
            <!--<id>addr_data.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>aed.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>addr_data.search_name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Улица</name>-->
            <!--<expression>aed.search_name</expression>-->
            <!--<!-<search>upper(:expression) like upper('%'||:addr_data.search_name||'%')</search>-->-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>addr_data.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Улица</name>-->
            <!--<expression>adr__get_element_as_text(aed.id, '(4,s,0)(6,s,1)(7,s,1)(8,s,1)')</expression>-->
            <!--<!-<search>upper(:expression) like upper('%'||:addr_data.name||'%')</search>-->-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>house</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Дом</name>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>housing</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Корпус</name>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>apartment</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Квартира</name>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>porch</id>-->
            <!--<domain>string\</domain>-->
            <!--<name>Подъезд</name>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>floor</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Этаж</name>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>door_code</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Код подъезда</name>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>addr_descr</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Адрес коментарии</name>-->
            <!--<expression>cal.description</expression>-->
        <!--</field>-->

        <field>
            <id>to_org.id</id>
            <domain>integer</domain>
            <expression>cal.to_org_id</expression>
        </field>
        <!--<field>-->
            <!--<id>to_org.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Организация адреса доставки</name>-->
            <!--<expression>coalesce(tplorg.short_name,tplorg.full_name)</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <field>
            <id>to_department.id</id>
            <domain>integer</domain>
            <!--<expression>tpldep.id</expression>-->
            <expression>cal.to_department_id</expression>
        </field>
        <!--<field>-->
            <!--<id>to_department.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Подразделение адреса доставки</name>-->
            <!--<expression>tpldep.name</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>to_address</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Адрес доставки</name>-->
            <!--<expression>adr__get_element_as_text(cal.to_address_id,'(1,s,0)(2,s,0)(3,s,0)(4,s,0)(5,s,0)(6,s,0)(7,s,0)(8,s,0)(9,s,0)')</expression>-->
            <!--<expression>coalesce(toaed.search_name,cal.to_description)</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_house</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Дом</name>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_housing</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Корпус</name>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_apartment</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Квартира</name>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_porch</id>-->
            <!--<domain>string\</domain>-->
            <!--<name>Подъезд</name>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_addr_descr</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Адрес коментарии</name>-->
            <!--<expression>cal.to_description</expression>-->
            <!--<search>cal.to_description = :id</search>-->
        <!--</field>-->
        <field>
            <id>individual.id</id>
            <domain>integer</domain>
            <expression>pip.id</expression>
        </field>
        <!--<field>-->
            <!--<id>individual.indiv</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Пациент</name>-->
            <!--<expression>pip.surname||' '||pip.name||' '||pip.patr_name</expression>-->
            <!--<search>upper(:expression) like upper ('%'||:individual.indiv||'%')</search>-->
        <!--</field>-->
        <field>
            <id>individual.surname</id>
            <domain>string</domain>
            <name>Фамилия</name>
            <expression>pip.surname</expression>
            <search>upper(pip.surname) like upper('%'||:individual.surname||'%')</search>
        </field>
        <field>
            <id>individual.name</id>
            <domain>string</domain>
            <name>Имя</name>
            <expression>pip.name</expression>
            <search>upper(pip.name) like upper('%'||:individual.name||'%')</search>
        </field>
        <field>
            <id>individual.patrName</id>
            <domain>string</domain>
            <name>Отчество</name>
            <expression>pip.patr_name</expression>
            <search>upper(pip.patr_name) like upper('%'||:individual.patrName||'%')</search>
        </field>
        <!--<field>-->
            <!--<id>individual.age</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Возраст</name>-->
            <!--<expression>case when get_age(cast (pip.birth_dt as date),cast(now() as date)) = -1 then '' else CAST(get_age(cast (pip.birth_dt as date),cast(now() as date)) as varchar(3))||' лет' end</expression>-->
            <!--<expression>get_age(cast (pip.birth_dt as date),cast(now() as date))</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>individual.birth_dt</id>-->
            <!--<domain>date</domain>-->
            <!--<name>ДР</name>-->
            <!--<expression>pip.birth_dt</expression>-->
        <!--</field>-->
        <field>
            <id>patFIO</id>
            <domain>string</domain>
            <name>Пациент</name>
            <expression>pip.surname||' '||pip.name||' '||pip.patr_name||case when pip.birth_dt is not null then ' '||to_char(pip.birth_dt,'dd.mm.yyyy') else '' end</expression>
        </field>
        <field>
            <id>gender.id</id>
            <domain>integer</domain>
            <!--<expression>pg.id</expression>-->
            <expression>pip.gender_id</expression>
        </field>

        <field>
            <id>age</id>
            <domain>integer</domain>
            <name>Возраст</name>
            <expression>p_age.age_txt</expression>
            <search type="eq" unavailable="true"/>
            <search type="more" filter-field="age.alter">
                coalesce(
                case when get_age(cast (pip.birth_dt as date),cast(now() as date)) = -1 then null else get_age(cast (pip.birth_dt as date),cast(now() as date)) end
                ,cal.age_years
                ,case when cal.age_months is not null or cal.age_days is not null then 0 else null end) >= :age.alter
            </search>
            <search type="less" filter-field="age.yunger">
                <![CDATA[
                coalesce(
                case when get_age(cast (pip.birth_dt as date),cast(now() as date)) = -1 then null else get_age(cast (pip.birth_dt as date),cast(now() as date)) end
                ,cal.age_years
                ,case when cal.age_months is not null or cal.age_days is not null then 0 else null end) <= :age.yunger
                ]]>
            </search>
        </field>

        <field>
            <id>phone</id>
            <domain>string</domain>
            <name>Телефон</name>
            <expression>cal.phone_caller</expression>
        </field>
        <field>
            <id>caller.id</id>
            <domain>integer</domain>
            <!--<expression>ac.id</expression>-->
            <expression>cal.caller_id</expression>
        </field>
        <!--<field>-->
            <!--<id>caller.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Вызывающий</name>-->
            <!--<expression>ac.name</expression>-->
        <!--</field>-->
        <field>
            <id>employee_med.id</id>
            <domain>integer</domain>
            <!--<expression>caleremp.id</expression>-->
            <expression>cal.employee_id</expression>
        </field>
        <!--<field>-->
            <!--<id>employee_med.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>ФИО сотрудника</name>-->
            <!--<expression>calerind.surname||' '||left(initcap(calerind.name),1)||'. '||left(initcap(calerind.patr_name),1)||'.'</expression>-->
        <!--</field>-->
        <field>
            <id>caller_note</id>
            <domain>string</domain>
            <expression>cal.caller_note</expression>
        </field>
        <field>
            <id>priority.id</id>
            <domain>integer</domain>
            <expression>ap.id</expression>
        </field>
        <!--<field>-->
            <!--<id>priority.code</id>-->
            <!--<domain>String</domain>-->
            <!--<name>Приоритет</name>-->
            <!--<expression>ap.code</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <field>
            <id>priority.color</id>
            <domain>string</domain>
            <expression>ap.color</expression>
            <search unavailable="true"/>
        </field>
        <!--<field>-->
            <!--<id>priority.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Приоритет</name>-->
            <!--<expression>ap.name</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>priority.number</id>-->
            <!--<domain>integer</domain>-->
            <!--<name>Число</name>-->
            <!--<expression>ap.number</expression>-->
        <!--</field>-->
        <field>
            <id>priorNum</id>
            <domain>integer</domain>
            <name>Приоритет(число)</name>
            <expression>cal.priority</expression>
        </field>
        <field>
            <id>note</id>
            <domain>string</domain>
            <name>Примечание</name>
            <expression>cal.note</expression>
        </field>
        <!--<field>-->
            <!--<id>pim_employee_position</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>pep.id</expression>-->
        <!--</field>-->
        <field>
            <id>employee.id</id>
            <domain>string</domain>
            <name>Принял</name>
            <expression>pep.id</expression>
            <!--<display></display>-->
        </field>
        <!--<field>-->
            <!--<id>employee.full_name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Принял</name>-->
            <!--<expression>pi.surname||' '||pi.name||' '||pi.patr_name</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>employee.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Принял</name>-->
            <!--<expression>pi.surname||' '||left(initcap(pi.name),1)||'. '||left(initcap(pi.patr_name),1)||'.'</expression>-->
        <!--</field>-->
        <field>
            <id>employee.namePos</id>
            <domain>string</domain>
            <name>Принял</name>
            <expression>pi.surname||' '||left(initcap(pi.name),1)||'. '||left(initcap(pi.patr_name),1)||'.'||'('||ppos.name||')'</expression>
        </field>
        <!--<field>-->
            <!--<id>position.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>ppos.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>position.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Должность</name>-->
            <!--<expression>ppos.name</expression>-->
        <!--</field>-->
        <field>
            <id>station.id</id>
            <domain>integer</domain>
            <expression>cal.station_id</expression>
            <search value="#{org.id?}"/>
        </field>
        <!--<field>-->
            <!--<id>station.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Станция</name>-->
            <!--<expression>coalesce(po.short_name,po.full_name)</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <field>
            <id>route.id</id>
            <domain>integer</domain>
            <expression>cal.route_id</expression>
            <!--<expression>rou.id</expression>-->
        </field>
        <!--<field>-->
            <!--<id>route.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Направление</name>-->
            <!--<expression>rou.name</expression>-->
        <!--</field>-->
        <field>
            <id>substation.id</id>
            <domain>integer</domain>
            <expression>cal.substation_id</expression>
            <!--<expression>pd.id</expression>-->
        </field>
        <!--<field>-->
            <!--<id>substation.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Подстанция</name>-->
            <!--<expression>pd.name</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <field>
            <id>brg.id</id>
            <domain>integer</domain>
            <expression>srtj.id</expression>
        </field>
        <field>
            <id>brg.name</id>
            <domain>string</domain>
            <name>Бригада</name>
            <expression>
                case
                    when cal.emp_id is not null then 'АМБ'
                    when cal.brg_id is not null and calres.srv_rendered_id is not null then rensrg.name
                    else srg.name
                end
            </expression>
        </field>

        <field>
            <id>team.id</id>
            <domain>integer</domain>
            <expression>srt.id</expression>
            <!--<search>brg.id = </search>-->
        </field>
        <!--<field>-->
            <!--<id>team.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Бригада</name>-->
            <!--<expression>srg.name</expression>-->
        <!--</field>-->

        <!--поля для расшифровки инфы по вызову-->
        <field>
            <id>descr</id>
            <domain>string</domain>
            <name>Доп.</name>
            <expression>cal.description||','||cal.note</expression>
        </field>
        <!--не надо, функция находит сразу id в истории с информацией по крайнему состоянию-->
        <field>
            <id>state_history.id</id>
            <domain>integer</domain>
            <name>Состояние</name>
            <!--<expression>amb.search_call_state_hist(cal.id)</expression>-->
            <expression>mash.id</expression>
        </field>
        <field>
            <id>state_history.datetime</id>
            <domain>string</domain>
            <name>Время назначения состояния</name>
            <expression>to_char(mash.date_time,'dd.mm.yyyy hh24:mi:ss')</expression>
        </field>
        <field>
            <id>call_state.id</id>
            <domain>integer</domain>
            <expression>macs.id</expression>
        </field>
        <field>
            <id>call_state.name</id>
            <domain>string</domain>
            <name>Состояние</name>
            <expression>macs.name</expression>
        </field>
        <field>
            <id>notes</id>
            <domain>string</domain>
            <name>Отм</name>
            <expression>amb.search_call_note(cal.id)</expression>
        </field>
<!--        <field>
            <id>note.id</id>
            <domain>integer</domain>
            <name>Отметка</name>
            <expression>macn.id</expression>
            <search>macn.id = :note.id</search>
        </field>-->
<!--        <field>
            <id>note.id</id>
            <domain>integer</domain>
            <name>Отметка</name>
            <expression>n.id</expression>
        </field>
        <field>
            <id>noteId</id>
            <domain>integer</domain>
            <name>Отметка</name>
            <expression>n.id</expression>
        </field>
        <field>
            <id>note.name</id>
            <domain>string</domain>
            <name>Отметка</name>
            <expression>n.name</expression>
        </field>-->

        <!--поля фильров-->
        <field>
            <id>call_reason.id</id>
            <domain>integer</domain>
            <expression>macr.id</expression>
        </field>
        <!--<field>-->
            <!--<id>call_reason.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Причина вызова</name>-->
            <!--<expression>macr.name</expression>-->
        <!--</field>-->
        <field>
            <id>reason_accident.id</id>
            <domain>integer</domain>
            <expression>mara.id</expression>
        </field>
        <!--<field>-->
            <!--<id>reason_accident.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Причина НС</name>-->
            <!--<expression>mara.name</expression>-->
        <!--</field>-->
        
        <field>
            <id>rendered.id</id>
            <domain>integer</domain>
            <expression>coalesce(ssr.id, ssr_res.id)</expression>
        </field>

        <field>
            <id>is_rendered</id>
            <domain>integer</domain>
            <expression>case when calres.srv_rendered_id is not null then true else false end</expression>
        </field>

        <field>
            <id>renderedId</id>
            <domain>integer</domain>
            <expression>coalesce(ssr.id, ssr_res.id)</expression>
        </field>

        <field>
            <id>has_note</id>
            <domain>boolean</domain>
            <expression>
                case when (select count(cn.id) from amb.md_ambulance_call_note cn where cn.call_id = cal.id) >0 then true else false end
            </expression>
        </field>

        <field>
            <id>has_note_city</id>
            <domain>boolean</domain>
            <expression>
                case when (select count(*) from amb.md_ambulance_call_note where call_id =cal.id and note_type = true and note_active = true and note_id in (11)) > 0
                    then true else false end
            </expression>
        </field>

        <field>
            <id>has_selfrefused</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%со%') then true else false end</expression>
        </field>
        <field>
            <id>has_docrefused</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%ов%') then true else false end</expression>
        </field>
        <field>
            <id>has_hosp</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%госп%') then true else false end</expression>
        </field>

        <field>
            <id>has_road_acc</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%ДТП%') then true else false end</expression>
        </field>
        <field>
            <id>has_speedUp</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%У%') then true else false end</expression>
        </field>
        <field>
            <id>has_fire</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%ПОЖ%') then true else false end</expression>
        </field>
        <field>
            <id>has_crime</id>
            <domain>boolean</domain>
            <expression>
                <!--case when amb.search_call_note(cal.id) like ('%К%') then true else false end-->
                case when exists (select *
                                    from amb.md_ambulance_call_note cn
                                    join amb.md_ambulance_note n on cn.note_id = n.id
                                    where cn.call_id = cal.id and cn.note_active and cn.note_type
                                    and n.e_code = '6')
                    then true
                    else false
                end
            </expression>
        </field>
        <field>
            <id>has_danger</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%ОПАС%') then true else false end</expression>
        </field>
        <field>
            <id>has_alcohol</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%А%') then true else false end</expression>
        </field>
        <!--<field>-->
            <!--<id>has_chronic</id>-->
            <!--<domain>boolean</domain>-->
            <!--<expression>case when amb.search_call_note(cal.id) like ('%хрон%') then true else false end</expression>-->
        <!--</field>-->
        <field>
            <id>has_psycho</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('П') then true
                when amb.search_call_note(cal.id) like ('П,%') then true
                when amb.search_call_note(cal.id) like ('%, П,%') then true
                when amb.search_call_note(cal.id) like ('%, П') then true
                else false end</expression>
        </field>

        <!--<field>-->
            <!--<id>is_opened</id>-->
            <!--<domain>boolean</domain>-->
            <!--<expression>case when (cal.to_time is null) and (brg.id is null) and (cal.emp_id is null) then true else false end</expression>-->
        <!--</field>-->

        <field>
            <id>case.id</id>
            <domain>integer</domain>
            <expression>calres.case_id</expression>
        </field>
        <field>
            <id>has_card</id>
            <domain>boolean</domain>
            <expression>
                case when (ccase.state_id = (select id from mc_case_state where e_code = '1')) then true else false end
            </expression>
        </field>

        <!--диагноз-->
        <!--так не работает-->
        <!--<field>-->
            <!--<id>masdiags.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<name>Диагноз основной</name>-->
            <!--<!-<expression>masterdiag.id</expression>-->-->
            <!--<search unavailable="true"/>-->
            <!--<display unavailable="true"/>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>masdiags*.id</id>-->
            <!--<domain>integer[]</domain>-->
            <!--<!-<name>Диагноз основной</name>      ambcard-resource-->-->
            <!--<!-<expression>masterdiag.id</expression>-->-->
            <!--<!-<search>masterdiag.id in (:masdiags*.id)</search>-->-->
            <!--<search>masterdiag.id in (:masdiags*.id)</search>-->
            <!--<display unavailable="true"/>-->
        <!--</field>-->

        <field>
            <id>masdiags*.id</id>
            <domain>integer[]</domain>
            <name>Диагноз основной</name>
            <search>masterdiag.id in (:masdiags*.id)</search>
            <display unavailable="true"/>
        </field>

        <field>
            <id>master_diag.id</id>
            <domain>integer</domain>
            <name>Диагноз основной</name>
            <expression>masterdiag.id</expression>
        </field>
        <field>
            <id>master_diag.codename</id>
            <domain>string</domain>
            <name>Код и Наименование</name>
            <expression>masterdiag.code || ' ' ||masterdiag.name</expression>
            <search>upper(:expression) like upper('%'||:master_diag.codename||'%')</search>
        </field>
        <field>
            <id>master_diag.code</id>
            <domain>string</domain>
            <name>Диагноз основной: МКБ</name>
            <expression>masterdiag.code</expression>
        </field>
        <field>
            <id>master_diag.name</id>
            <domain>string</domain>
            <name>Диагноз основной</name>
            <expression>masterdiag.name</expression>
        </field>
        <field>
            <id>accomp_diag.id</id>
            <domain>integer</domain>
            <name>Диагноз сопутствующий</name>
            <expression>accompdiag.id</expression>
        </field>
        <field>
            <id>accomp_diag.codename</id>
            <domain>string</domain>
            <name>Код и Наименование</name>
            <expression>accompdiag.code || ' ' ||accompdiag.name</expression>
            <search>upper(:expression) like upper('%'||:accomp_diag.codename||'%')</search>
        </field>
        <field>
            <id>accomp_diag.code</id>
            <domain>string</domain>
            <name>Диагноз сопутствующий: МКБ</name>
            <expression>accompdiag.code</expression>
        </field>
        <field>
            <id>accomp_diag.name</id>
            <domain>string</domain>
            <name>Диагноз сопутствующий</name>
            <expression>accompdiag.name</expression>
        </field>

        <field>
            <id>road_acc_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '3')
            </expression>
        </field>

        <field>
            <id>road_acc_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '3')
            </expression>
        </field>

        <field>
            <id>alco_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '22')
            </expression>
        </field>

        <field>
            <id>alco_name</id>
            <domain>integer</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '22')
            </expression>
        </field>

        <field>
            <id>fire_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '5')
            </expression>
        </field>

        <field>
            <id>fire_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '5')
            </expression>
        </field>

        <field>
            <id>crime_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '6')
            </expression>
        </field>

        <field>
            <id>crime_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '6')
            </expression>
        </field>

        <field>
            <id>danger_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '12')
            </expression>
        </field>

        <field>
            <id>danger_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '12')
            </expression>
        </field>

        <!--<field>-->
            <!--<id>chronic_id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>-->
                <!--(select id from amb.md_ambulance_note where e_code = '14')-->
            <!--</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>chronic_name</id>-->
            <!--<domain>string</domain>-->
            <!--<expression>-->
                <!--(select name from amb.md_ambulance_note where e_code = '14')-->
            <!--</expression>-->
        <!--</field>-->

        <field>
            <id>psycho_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '15')
            </expression>
        </field>

        <field>
            <id>psycho_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '15')
            </expression>
        </field>

        <field>
            <id>speedUp_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '7')
            </expression>
        </field>

        <field>
            <id>speedUp_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '7')
            </expression>
        </field>

        <field>
            <id>actual_change.id</id>
            <domain>integer</domain>
            <name>Текущая смена</name>
            <!--<display unavailable="true"/>-->
            <expression>
                (select mac.id from amb.md_ambulance_change mac
                    where mac.clinic_id = cal.station_id  and (mac.department_id is null or mac.department_id = cal.substation_id)
                        and mac.state = 1 and mac.to_data + mac.to_time >= now()
                order by mac.department_id
                limit 1)
            </expression>
        </field>
        <field>
            <id>actual_change.data</id>
            <domain>date</domain>
            <name>Cмена</name>
            <!--<display unavailable="true"/>-->
            <expression>
                (select to_char(mac.from_data,'dd.mm.yyyy') from amb.md_ambulance_change mac
                    where mac.clinic_id = cal.station_id and (mac.department_id is null or mac.department_id = cal.substation_id)
                        and mac.state = 1 and mac.to_data + mac.to_time >= now()
                order by mac.department_id
                limit 1)
            </expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>service.id</id>
            <domain>integer</domain>
            <name>Услуга</name>
            <expression>
                coalesce(ssr.service_id, ssr_res.service_id)
            </expression>
        </field>

        <field>
            <id>service.name</id>
            <domain>string</domain>
            <name>Услуга</name>
            <expression>
                coalesce((select name from public.sr_service where id = ssr.service_id), (select name from public.sr_service where id = ssr_res.service_id))
            </expression>
        </field>

        <field>
            <id>step_result.id</id>
            <domain>integer</domain>
            <name>Результат</name>
            <expression>step.result_id</expression>
        </field>

        <field>
            <id>step_result.name</id>
            <domain>string</domain>
            <name>Результат</name>
            <expression>
                (select code||':'||name from public.mc_step_result where id = step.result_id)
            </expression>
        </field>

        <field>
            <id>time_begin</id>
            <domain>string</domain>
            <expression>:time_begin</expression>
        </field>

        <field>
            <id>time_end</id>
            <domain>string</domain>
            <expression>:time_end</expression>
        </field>

        <field>
            <id>isToDay</id>
            <domain>boolean</domain>
            <expression>:isToDay</expression>
        </field>
    </fields>
</query>