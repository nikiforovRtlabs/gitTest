<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>top_journals</id>-->
    <name>Журнал диспетчера</name>
    <object-id>dispjournal</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from amb.md_ambulance_call cal
                join amb.md_ambulance_change mac on mac.id = cal.call_dt
                join amb.md_ambulance_call_kind ck on ck.id = cal.call_kind_id

                left join amb.md_ambulance_caller_reason cr on cr.id = cal.caller_reason_id
                left join md_diagnosis dia on dia.id = cal.reason_diag

                left join address_element ael on ael.id = cal.address_id
                left join address_element_type aet on aet.id = ael.type_id

                join pim_individual pip on pip.id = cal.patient_id

                join pim_employee_position pep on pep.id = cal.registrator_id
                join pim_employee pe on pe.id = pep.employee_id
                join pim_individual pi on pi.id = pe.individual_id
                join pim_position ppos on ppos.id = pep.position_id

                join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id desc limit 1)
                join amb.md_ambulance_call_state macs on macs.id = mash.state_id

                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from amb.md_ambulance_call cal
                join amb.md_ambulance_change mac on mac.id = cal.call_dt
                join amb.md_ambulance_call_kind ck on ck.id = cal.call_kind_id

                left join amb.md_ambulance_caller_reason cr on cr.id = cal.caller_reason_id
                left join md_diagnosis dia on dia.id = cal.reason_diag

                left join address_element ael on ael.id = cal.address_id
                left join address_element_type aet on aet.id = ael.type_id

                join pim_individual pip on pip.id = cal.patient_id

                join pim_employee_position pep on pep.id = cal.registrator_id
                join pim_employee pe on pe.id = pep.employee_id
                join pim_individual pi on pi.id = pe.individual_id
                join pim_position ppos on ppos.id = pep.position_id

                join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id desc limit 1)
                join amb.md_ambulance_call_state macs on macs.id = mash.state_id

                where :where
            </n2o:count-query>
            <n2o:alias>cal</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <expression>cal.id</expression>
            <search>cal.id = :id</search>
        </field>
        <field>
            <id>number</id>
            <domain>integer</domain>
            <name>№</name>
            <expression>cal.call_number</expression>
        </field>
        <field>
            <id>change.id</id>
            <domain>integer</domain>
            <expression>mac.id</expression>
        </field>
        <field>
            <id>change_date</id>
            <domain>string</domain>
            <name>Смена</name>
            <expression>to_char(mac.from_data,'DD.MM.YYYY')</expression>
        </field>
        <field>
            <id>call_kind.id</id>
            <domain>integer</domain>
            <expression>ck.id</expression>
        </field>
        <field>
            <id>call_kind.code</id>
            <domain>string</domain>
            <name>Вид</name>
            <expression>ck.code</expression>
        </field>

        <field>
            <id>from_time</id>
            <domain>time</domain>
            <name>Время приема вызова</name>
            <expression>cal.from_time</expression>
        </field>
        <field>
            <id>ftime</id>
            <domain>string</domain>
            <name>Принят</name>
            <expression>to_char(cal.from_time,'hh24:mi')</expression>
        </field>

        <field>
            <id>time</id>
            <domain>time</domain>
            <name>Длит-ть</name>
            <expression>
				case when cal.to_time is null then cast((now() - mash.date_time) as time) else null end
			</expression>
        </field>
        <field>
            <id>calltime</id>
            <domain>time</domain>
            <name>Время обслуживания</name>
            <expression>
				case when cal.to_time is not null then cast((cal.to_time - cal.from_time) as time) else null end
			</expression>
        </field>

        <field>
            <id>caller_reason.id</id>
            <domain>integer</domain>
            <expression>cr.id</expression>
        </field>
        <field>
            <id>caller_reason.name</id>
            <domain>string</domain>
            <name>Повод</name>
            <expression>cr.name</expression>
        </field>
        <field>
            <id>diagnosis.id</id>
            <domain>integer</domain>
            <expression>dia.id</expression>
        </field>
        <field>
            <id>diagnosis.codename</id>
            <domain>string</domain>
            <name>Диагноз</name>
            <expression>dia.code || ' ' ||dia.name</expression>
        </field>
        <!--<field>-->
            <!--<id>reason</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Повод</name>-->
            <!--<expression>coalesce(cr.name,dia.name)</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>call_place.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>cal.call_place_id</expression>-->
        <!--</field>-->

        <field>
            <id>address.id</id>
            <domain>integer</domain>
            <name>Адрес вызова</name>
            <expression>cal.address_id</expression>
            <search>
                (select path from address_element_data where id = cast(:address.id as integer)) @> (select path from address_element_data where id = cal.address_id)
            </search>
        </field>
        <field>
            <id>address.name</id>
            <domain>string</domain>
            <name>Адрес вызова</name>
            <expression>
                concat (adr__get_element_as_text(cal.address_id, '(6,s,1)(7,s,1)(8,s,1)'),', ',adr__get_element_as_text(cal.address_id, '(4,s,0)'),' ',cal.description)
            </expression>
        </field>

        <!--<field>-->
            <!--<id>individual.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>pip.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>individual.surname</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Фамилия</name>-->
            <!--<expression>pip.surname</expression>-->
            <!--<search>upper(pip.surname) like upper('%'||:individual.surname||'%')</search>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>individual.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Имя</name>-->
            <!--<expression>pip.name</expression>-->
            <!--<search>upper(pip.name) like upper('%'||:individual.name||'%')</search>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>individual.patrName</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Отчество</name>-->
            <!--<expression>pip.patr_name</expression>-->
            <!--<search>upper(pip.patr_name) like upper('%'||:individual.patrName||'%')</search>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>patFIO</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Пациент</name>-->
            <!--<expression>pip.surname||' '||pip.name||' '||pip.patr_name||case when pip.birth_dt is not null then ' '||to_char(pip.birth_dt,'dd.mm.yyyy') else '' end</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>gender.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>pip.gender_id</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>age</id>-->
            <!--<domain>integer</domain>-->
            <!--<name>Возраст</name>-->
            <!--<expression>coalesce(-->
                <!--case when get_age(cast (pip.birth_dt as date),cast(now() as date)) = -1 then null else get_age(cast (pip.birth_dt as date),cast(now() as date)) end-->
                <!--,cal.age_years-->
                <!--,case when cal.age_months is not null or cal.age_days is not null then 0 else null end)-->
            <!--</expression>-->
            <!--<search type="eq" unavailable="true"/>-->
            <!--<search type="more" filter-field="age.alter">-->
                <!--coalesce(-->
                <!--case when get_age(cast (pip.birth_dt as date),cast(now() as date)) = -1 then null else get_age(cast (pip.birth_dt as date),cast(now() as date)) end-->
                <!--,cal.age_years-->
                <!--,case when cal.age_months is not null or cal.age_days is not null then 0 else null end) >= :age.alter-->
            <!--</search>-->
            <!--<search type="less" filter-field="age.yunger">-->
                <!--<![CDATA[-->
                <!--coalesce(-->
                <!--case when get_age(cast (pip.birth_dt as date),cast(now() as date)) = -1 then null else get_age(cast (pip.birth_dt as date),cast(now() as date)) end-->
                <!--,cal.age_years-->
                <!--,case when cal.age_months is not null or cal.age_days is not null then 0 else null end) <= :age.yunger-->
                <!--]]>-->
            <!--</search>-->
        <!--</field>-->

        <field>
            <id>phone</id>
            <domain>string</domain>
            <name>Телефон</name>
            <expression>cal.phone_caller</expression>
        </field>

        <field>
            <id>comment</id>
            <domain>string</domain>
            <name>Примечание</name>
            <expression>cal.note</expression>
        </field>

        <field>
            <id>employee.id</id>
            <domain>string</domain>
            <name>Принял</name>
            <expression>pep.id</expression>
        </field>
        <field>
            <id>employee.namePos</id>
            <domain>string</domain>
            <name>Принял</name>
            <expression>pi.surname||' '||left(initcap(pi.name),1)||'. '||left(initcap(pi.patr_name),1)||'.'||'('||ppos.name||')'</expression>
        </field>

        <field>
            <id>station.id</id>
            <domain>integer</domain>
            <expression>cal.station_id</expression>
            <search value="#{org.id?}"/>
        </field>
        <field>
            <id>route.id</id>
            <domain>integer</domain>
            <expression>cal.route_id</expression>
        </field>
        <field>
            <id>substation.id</id>
            <domain>integer</domain>
            <expression>cal.substation_id</expression>
        </field>

        <!--поля для расшифровки инфы по вызову-->
        <field>
            <id>descr</id>
            <domain>string</domain>
            <name>Доп.</name>
            <expression>cal.description||','||cal.note</expression>
        </field>
        <!--не надо, функция находит сразу id в истории с информацией по крайнему состоянию-->
        <field>
            <id>state_history.id</id>
            <domain>integer</domain>
            <name>Состояние</name>
            <expression>mash.id</expression>
        </field>
        <field>
            <id>state_history.datetime</id>
            <domain>string</domain>
            <name>Время назначения состояния</name>
            <expression>to_char(mash.date_time,'dd.mm.yyyy hh24:mi:ss')</expression>
        </field>
        <field>
            <id>call_state.id</id>
            <domain>integer</domain>
            <expression>macs.id</expression>
        </field>
        <field>
            <id>call_state.name</id>
            <domain>string</domain>
            <name>Состояние</name>
            <expression>macs.name</expression>
        </field>
        <field>
            <id>notes</id>
            <domain>string</domain>
            <name>Отм</name>
            <expression>amb.search_call_note(cal.id)</expression>
        </field>

        <field>
            <id>actual_change.id</id>
            <domain>integer</domain>
            <name>Текущая смена</name>
            <expression>
                (select mac.id from amb.md_ambulance_change mac
                    where mac.clinic_id = cal.station_id  and (mac.department_id is null or mac.department_id = cal.substation_id)
                        and mac.state = 1
                order by mac.department_id
                limit 1)
            </expression>
        </field>
        <field>
            <id>actual_change.data</id>
            <domain>date</domain>
            <name>Cмена</name>
            <expression>
                (select to_char(mac.from_data,'dd.mm.yyyy') from amb.md_ambulance_change mac
                    where mac.clinic_id = cal.station_id and (mac.department_id is null or mac.department_id = cal.substation_id)
                        and mac.state = 1
                order by mac.department_id
                limit 1)
            </expression>
            <search unavailable="true"/>
        </field>
    </fields>
</query>