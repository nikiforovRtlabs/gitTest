<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>dispjournal</id>-->
    <name>Журнал вызовов Диспетчера 03</name>
    <actions>
        <action id="generate114y">
            <invocation>
                <sql:sql>
                    <!--<wgt:a href="${n2o.birt.host}/run?__report=n2o/114y.rptdesign&amp;id=:id:&amp;__format=pdf"/>-->
                    <![CDATA[
                    select '/birt/run?__report=n2o/114y.rptdesign&id='||:id||'&__format=pdf'
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="rep114" mapping="[0][0][0]"/>
            </out-parameters>
        </action>

        <action id="alcohol" name="Алкоголь">
            <invocation>
                <sql:sql>
                    select amb.add_call_note(:call, (select id from amb.md_ambulance_note where code='А'), true, :reason, 'р/у', :reg, null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['call']" domain="integer"/>
                <param name="note_reason.nrId" mapping="['reason']" domain="integer"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id}"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="road_acc" name="ДТП">
            <invocation>
                <sql:sql>
                    select amb.add_call_note(:call,3,true,:reason,'р/у',:reg,null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['call']" domain="integer"/>
                <param name="note.id" mapping="['note']" domain="integer"/>
                <param name="note_reason.nrId" mapping="['reason']" domain="integer"/>
                <param name="descr" mapping="['descr']" domain="string"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="fire" name="Пожар">
            <invocation>
                <sql:sql>
                    select amb.add_call_note(:call,5,true,:reason,'р/у',:reg,null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['call']" domain="integer"/>
                <param name="note.id" mapping="['note']" domain="integer"/>
                <param name="note_reason.nrId" mapping="['reason']" domain="integer"/>
                <param name="descr" mapping="['descr']" domain="string"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="crime" name="Криминал">
            <invocation>
                <sql:sql>
                    select amb.add_call_note(:call,6,true,:reason,'р/у',:reg,null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['call']" domain="integer"/>
                <param name="note.id" mapping="['note']" domain="integer"/>
                <param name="note_reason.nrId" mapping="['reason']" domain="integer"/>
                <param name="descr" mapping="['descr']" domain="string"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="danger" name="Особо опасный объект">
            <invocation>
                <sql:sql>
                    select amb.add_call_note(:call,12,true,:reason,'р/у',:reg,null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['call']" domain="integer"/>
                <param name="note.id" mapping="['note']" domain="integer"/>
                <param name="note_reason.nrId" mapping="['reason']" domain="integer"/>
                <param name="descr" mapping="['descr']" domain="string"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <!--<action id="chronic">-->
        <!--<invocation>-->

        <!--<sql:sql>-->
        <!--select amb.add_call_note(:call,14,true,:reason,:descr,:reg,null);-->
        <!--</sql:sql>-->
        <!--</invocation>-->
        <!--<in-parameters>-->
        <!--<param name="id" mapping="['call']" domain="integer"/>-->
        <!--<param name="note.id" mapping="['note']" domain="integer"/>-->
        <!--<param name="note_reason.nrId" mapping="['reason']" domain="integer"/>-->
        <!--<param name="descr" mapping="['descr']" domain="string"/>-->
        <!--<param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>-->
        <!--</in-parameters>-->
        <!--<out-parameters>-->
        <!--<param name="id" mapping="[0][0][0]"/>-->
        <!--</out-parameters>-->
        <!--</action>-->

        <action id="psycho" name="Психический">
            <invocation>

                <sql:sql>
                    select amb.add_call_note(:call,15,true,:reason,'р/у',:reg,null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['call']" domain="integer"/>
                <param name="note.id" mapping="['note']" domain="integer"/>
                <param name="note_reason.nrId" mapping="['reason']" domain="integer"/>
                <param name="descr" mapping="['descr']" domain="string"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
            <validations activate="nothing"/>
        </action>

        <action id="delete" name="Удаление карты вызова">
            <invocation>
                <sql:sql>
                    select amb.delete_call(:id);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="exists_bill"/>
            </validations>
        </action>
    </actions>
    <validations>
        <condition id="checkTimeBeginNotNull" level="error" moment="before-edit-model">
            <message>Значение поля необходимо заполнить.</message>
            <expression on="timeBegin">
                <![CDATA[
                    (typeof timeBegin != 'undefined' && timeBegin != null && timeBegin != '')
                ]]>
            </expression>
        </condition>
        <condition id="checkTimeBegin" level="error">
            <message>Некорректный формат времени.</message>
            <expression on="timeBegin">
                <![CDATA[
                    var regex = new RegExp('([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]');
                    var b = true;
                    if(typeof timeBegin != 'undefined' && timeBegin != null && timeBegin != '')
                    b = regex.test(timeBegin);
                    b;
                ]]>
            </expression>
        </condition>
        <condition id="checkTimeEndNotNull" level="error" moment="before-action">
            <message>Значение поля необходимо заполнить.</message>
            <expression on="timeEnd">
                <![CDATA[
                (typeof timeEnd != 'undefined' && timeEnd != null && timeEnd != '')
                ]]>
            </expression>
        </condition>
        <condition id="checkTimeEnd" level="error">
            <message>Некорректный формат времени.</message>
            <expression on="timeEnd">
                <![CDATA[
                    var regex = new RegExp('([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]');
                    var b = true;
                    if(typeof timeEnd != 'undefined' && timeEnd != null && timeEnd != '')
                    b = regex.test(timeEnd);
                    b;
                ]]>
            </expression>
        </condition>
        <constraint id="exists_bill" level="error">
            <message>Невозможно удалить, так как на запись ссылается счет</message>
            <invocation>
                <sql:sql>
                    <![CDATA[
                    select count(1) from
                    fin_bill_spec_item item where item.service_id in
                    (select id from md_srv_rendered where case_id in
                    (select case_id from amb.md_ambulance_call_result where id = :id))
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0]==0"/>
        </constraint>
    </validations>
</object>