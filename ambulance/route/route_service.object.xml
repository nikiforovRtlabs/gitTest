<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>route_service</id>-->
    <name>Подстанции в направлении</name>
    <actions>
        <action id="create" name="Добавить">
            <invocation>
                <sql:sql>
                    insert into amb.md_ambulance_route_service(id,route_id,department_id,from_time,to_time)
                    values (nextval('amb.md_ambulance_route_service_id_seq'),:route,:dep,:from_time,:to_time);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="route.id" mapping="['route']" domain="integer"/>
                <param name ="substation.id" mapping = "['dep']" domain="integer"/>
                <param name="from_time" mapping="['from_time']" domain="date"/>
                <param name="to_time" mapping="['to_time']" domain="date"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_route_service set from_time = :from_time,to_time = :to_time where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
                <param name="from_time" mapping="['from_time']" domain="date"/>
                <param name="to_time" mapping="['to_time']" domain="date"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_route_service set to_time = now() where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
                <!--<param name="to_time" mapping="['to_time']" domain="date"/>-->
            </in-parameters>
            <validations activate="nothing"/>
        </action>
    </actions>
    <validations>
        <constraint id="routeserviceUnique" level="error">
            <message>
                Подстанция в направлении уже существует!
            </message>
            <invocation>
                <sql:sql>
                    select count (*)
                    from amb.md_ambulance_route_service
                    where route_id = :route
                    and department_id = :dep
                    and ((to_time >now()) or (to_time is null))
                    and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
                <param name="route.id" mapping="['route']" domain="integer"/>
                <param name ="substation.id" mapping = "['dep']" domain="integer"/>
                <param name="from_time" mapping="['from_time']" domain="date"/>
                <param name="to_time" mapping="['to_time']" domain="date"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
        <constraint id="servicerouteUnique" level="error">
            <message>
                Подстанция в другом направлении!
            </message>
            <invocation>
                <sql:sql>
                    select count (*)
                    from amb.md_ambulance_route_service
                    where route_id != :route
                    and department_id = :dep
                    and ((to_time >now()) or (to_time is null))
                    and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
                <param name="route.id" mapping="['route']" domain="integer"/>
                <param name ="substation.id" mapping = "['dep']" domain="integer"/>
                <param name="from_time" mapping="['from_time']" domain="date"/>
                <param name="to_time" mapping="['to_time']" domain="date"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
    </validations>
</object>