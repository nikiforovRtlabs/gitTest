<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>route_area</id>-->
    <name>Территория обслуживания направления</name>
    <actions>
        <action id="create" name="Добавить">
            <invocation>
                <sql:sql>
                    insert into amb.md_ambulance_route_area(id,route_id,address_id,building_pattent,from_time,to_time)
                    values (nextval('amb.md_ambulance_route_area_id_seq'),:route,:addr,:pattent,:from_time,:to_time);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="route.id" mapping="['route']" domain="integer"/>
                <param name ="addr_data.id" mapping = "['addr']" domain="integer"/>
                <param name="building_pattent" mapping="['pattent']" domain="string"/>
                <param name="from_time" mapping="['from_time']" domain="date"/>
                <param name="to_time" mapping="['to_time']" domain="date"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_route_area set building_pattent = :pattent, from_time = :from_time,to_time = :to_time where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
                <param name="building_pattent" mapping="['pattent']" domain="string"/>
                <param name="from_time" mapping="['from_time']" domain="date"/>
                <param name="to_time" mapping="['to_time']" domain="date"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_route_area set to_time = now() where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
                <!--<param name="to_time" mapping="['to_time']" domain="date" value="today()"/>-->
            </in-parameters>
            <validations activate="nothing"/>
        </action>
    </actions>
    <!--<validations>-->
        <!--<constraint id="routeserviceUnique" level="error">-->
            <!--<message summary ="Подстанция в направлении уже существует">-->
                <!--Подстанция в направлении уже существует!-->
            <!--</message>-->
            <!--<invocation>-->
                <!--<sql:sql>-->
                    <!--select count (*)-->
                    <!--from amb.md_ambulance_route_service-->
                    <!--where route_id = :route-->
                    <!--and department_id = :dep-->
                    <!--and (:id is null or id != :id)-->
                <!--</sql:sql>-->
            <!--</invocation>-->
            <!--<in-parameters>-->
                <!--<param name = "id" mapping = "['id']" domain="integer"/>-->
                <!--<param name="route.id" mapping="['route']" domain="integer"/>-->
                <!--<param name ="substation.id" mapping = "['dep']" domain="integer"/>-->
                <!--<param name="from_time" mapping="['from_time']" domain="date"/>-->
                <!--<param name="to_time" mapping="['to_time']" domain="date"/>-->
            <!--</in-parameters>-->
            <!--<result expression="[0][0][0] == 0"/>-->
        <!--</constraint>-->
        <!--<constraint id="servicerouteUnique" level="error">-->
            <!--<message summary ="Подстанция в другом направлении">-->
                <!--Подстанция в другом направлении!-->
            <!--</message>-->
            <!--<invocation>-->
                <!--<sql:sql>-->
                    <!--select count (*)-->
                    <!--from amb.md_ambulance_route_service-->
                    <!--where route_id != :route-->
                    <!--and department_id = :dep-->
                    <!--and (:id is null or id != :id)-->
                <!--</sql:sql>-->
            <!--</invocation>-->
            <!--<in-parameters>-->
                <!--<param name = "id" mapping = "['id']" domain="integer"/>-->
                <!--<param name="route.id" mapping="['route']" domain="integer"/>-->
                <!--<param name ="substation.id" mapping = "['dep']" domain="integer"/>-->
                <!--<param name="from_time" mapping="['from_time']" domain="date"/>-->
                <!--<param name="to_time" mapping="['to_time']" domain="date"/>-->
            <!--</in-parameters>-->
            <!--<result expression="[0][0][0] == 0"/>-->
        <!--</constraint>-->
    <!--</validations>-->
</object>