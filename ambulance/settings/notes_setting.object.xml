<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>notes_setting</id>-->
    <name>Настройки периодов</name>
    <actions>
        <action id="create" name="Создать">
            <invocation>
                <sql:sql>
                    insert into amb.md_ambulance_notes_setting (id,scope_id,clinic_id,route_id,elapsed_time,often_period)
                    values(nextval('amb.md_ambulance_notes_setting_id_seq'),:scope,:clinic,:route,cast(:elapsed_time||' hour' as interval),cast(:often_period||' day' as interval))
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="scope.id" mapping="['scope']" domain="integer"/>
                <param name="station.id" mapping="['clinic']" domain="integer"/>
                <param name="route.id" mapping="['route']" domain="integer"/>
                <param name="elapsed_time" mapping="['elapsed_time']" domain="string"/>
                <param name="often_period" mapping="['often_period']" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_notes_setting set scope_id=:scope,clinic_id=:clinic,route_id=:route,elapsed_time=cast(:elapsed_time||' hour' as interval),often_period=cast(:often_period||' day' as interval) where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
                <param name="scope.id" mapping="['scope']" domain="integer"/>
                <param name="station.id" mapping="['clinic']" domain="integer"/>
                <param name="route.id" mapping="['route']" domain="integer"/>
                <param name="elapsed_time" mapping="['elapsed_time']" domain="string"/>
                <param name="often_period" mapping="['often_period']" domain="string"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    delete from amb.md_ambulance_notes_setting where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>
    </actions>
    <validations>
        <constraint id="checkUniqueNotessetting" level="error">
            <invocation>
                <sql:sql>
                    select count(*) from amb.md_ambulance_notes_setting
                    where clinic_id = :clinic
                    <!--and (:id is null or id != :id)-->
                </sql:sql>
            </invocation>
            <in-parameters>
                <!--<param name="id" mapping="['id']" domain="integer"/>-->
                <param name="station.id" mapping="['clinic']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Настройка уже существует в системе</message>
        </constraint>
        <condition id="checkChangeRoute" level="error">
            <expression>
                (typeof scope != 'undefined') &amp;&amp; (scope.id != null) &amp;&amp; (scope.code != 'Route')
            </expression>
            <message>Настройка по уровню 'Направление' не доступна, используйте уровень подстанции.</message>
        </condition>
    </validations>
</object>