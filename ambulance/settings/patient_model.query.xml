<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <name>Карточка настройки модели пациентов</name>
    <object-id>patient_model</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from amb.md_amb_patient_model pm
                join amb.md_amb_selecting_to_reason str on pm.selecting_reason_id = str.id
                left join pim_gender pg on pm.gender_id = pg.id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(pm)
                from amb.md_amb_patient_model pm
                join amb.md_amb_selecting_to_reason str on pm.selecting_reason_id = str.id
                left join pim_gender pg on pm.gender_id = pg.id
                where :where
            </n2o:count-query>
            <n2o:alias>pm</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <expression>pm.id</expression>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <name>Наименование</name>
            <expression>pm.name</expression>
        </field>
        <field>
            <id>selecting_reason_id</id>
            <domain>integer</domain>
            <name>Настройка по поводу</name>
            <expression>str.id</expression>
            <search>str.id = :selecting_reason_id</search>
        </field>
        <field>
            <id>gender.id</id>
            <domain>integer</domain>
            <name>Пол</name>
            <expression>pg.id</expression>
        </field>
        <field>
            <id>gender.name</id>
            <domain>string</domain>
            <name>Пол</name>
            <expression>pg.name</expression>
            <search>trim(upper(pg.name)) like trim(upper(:gender.name||'%'))</search>
        </field>
        <field>
            <id>from_day</id>
            <domain>integer</domain>
            <name>C дня/дней</name>
            <expression>pm.from_day</expression>
        </field>
        <field>
            <id>from_month</id>
            <domain>integer</domain>
            <name>месяца/месяцев</name>
            <expression>pm.from_month</expression>
        </field>
        <field>
            <id>from_year</id>
            <domain>integer</domain>
            <name>года/лет</name>
            <expression>pm.from_year</expression>
        </field>
        <field>
            <id>to_day</id>
            <domain>integer</domain>
            <name>до дня/дней</name>
            <expression>pm.to_day</expression>
        </field>
        <field>
            <id>to_month</id>
            <domain>integer</domain>
            <name>месяца/месяцев</name>
            <expression>pm.to_month</expression>
        </field>
        <field>
            <id>to_year</id>
            <domain>integer</domain>
            <name>года/лет</name>
            <expression>pm.to_year</expression>
        </field>
        <field>
            <id>age_group</id>
            <domain>string</domain>
            <name>Возрастная группа</name>
            <expression> (case when pm.from_year is not null or pm.from_month is not null or pm.from_day is not null then 'c ' else '' end)
                || coalesce(pm.from_year||'л.','') || coalesce(pm.from_month||'мес.','')
                || coalesce(pm.from_day||'дн.', '') ||
                (case when pm.to_year is not null or pm.to_month is not null or pm.to_day is not null then ' до ' else '' end)
                || coalesce(pm.to_year||'л.','')
                || coalesce(pm.to_month||'мес.','') || coalesce(pm.to_day||'дн.', '')
            </expression>
        </field>
    </fields>
</query>