<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <name>Журнал настройки подбора и посыла бригады на вызов: поводы</name>
    <object-id>selecting_to_reason</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from amb.md_amb_selecting_to_reason str
                join pim_organization po on str.clinic_id = po.id
                join pim_department pd on str.department_id = pd.id
                join amb.md_ambulance_caller_reason reason on str.caller_reason_id = reason.id
                join amb.md_ambulance_call_kind kind on str.call_kind_id = kind.id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(str)
                from amb.md_amb_selecting_to_reason str
                join pim_organization po on str.clinic_id = po.id
                join pim_department pd on str.department_id = pd.id
                join amb.md_ambulance_caller_reason reason on str.caller_reason_id = reason.id
                join amb.md_ambulance_call_kind kind on str.call_kind_id = kind.id
                where :where
            </n2o:count-query>
            <n2o:alias>str</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <expression>str.id</expression>
        </field>
        <field>
            <id>reason.id</id>
            <domain>integer</domain>
            <expression>reason.id</expression>
        </field>
        <field>
            <id>reason.name</id>
            <domain>string</domain>
            <name>Повод</name>
            <expression>reason.name</expression>
            <search>trim(upper(reason.name)) like trim(upper('%'||:reason.name||'%'))</search>
        </field>
        <field>
            <id>station.id</id>
            <domain>integer</domain>
            <name>Станция</name>
            <expression>po.id</expression>
        </field>
        <field>
            <id>station.name</id>
            <domain>String</domain>
            <name>Станция</name>
            <expression>coalesce(po.short_name,po.full_name)</expression>
            <search unavailable="true">trim(upper(:expression)) like trim(upper(:station.name||'%'))</search>
        </field>
        <field>
            <id>kind.id</id>
            <domain>integer</domain>
            <expression>kind.id</expression>
        </field>
        <field>
            <id>kind.name</id>
            <domain>string</domain>
            <name>Вид вызова</name>
            <expression>kind.name</expression>
            <search>trim(upper(kind.name)) like trim(upper('%'||:kind.name||'%'))</search>
        </field>
        <field>
            <id>substation.id</id>
            <domain>integer</domain>
            <expression>pd.id</expression>
        </field>
        <field>
            <id>substation.name</id>
            <domain>string</domain>
            <name>Подстанция</name>
            <expression>pd.name</expression>
            <search>trim(upper(pd.name)) like trim(upper(:substation.name||'%'))</search>
        </field>
        <field>
            <id>priority</id>
            <domain>integer</domain>
            <name>Приоритет</name>
            <expression>str.priority</expression>
        </field>
        <field>
            <id>isUseProfile</id>
            <domain>boolean</domain>
            <name>Профиль</name>
            <expression>str.is_use_profile</expression>
            <search>str.is_use_profile = :isUseProfile</search>
        </field>
        <field>
            <id>isUseTeam</id>
            <domain>boolean</domain>
            <name>Бригады</name>
            <expression>str.is_use_team</expression>
            <search>str.is_use_team = :isUseTeam</search>
        </field>
        <field>
            <id>isActive</id>
            <domain>boolean</domain>
            <name>Актив</name>
            <expression>str.is_active</expression>
            <search>str.is_active = :isActive</search>
        </field>
    </fields>
</query>