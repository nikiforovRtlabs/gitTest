<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>num_setting</id>-->
    <name>Нумератор</name>
    <actions>
        <action id="create" name="Создать(Ins)">
            <invocation>
                <sql:sql>
                    select amb.ins_numerator(:scope,:clinic,:type);
                    <!--insert into amb.md_ambulance_numb_setting (id,scope_id,clinic_id,type_num)-->
                        <!--values(nextval('amb.md_ambulance_numb_setting_id_seq'),:scope,:clinic,:type);-->
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="scope.id" mapping="['scope']" domain="integer"/>
                <param name="station.id" mapping="['clinic']" domain="integer"/>
                <param name="type.id" mapping="['type']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_numb_setting set type_num = :type where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="type.id" mapping="['type']" domain="integer"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    delete from amb.md_ambulance_numbers where numb_id = :id;
                    delete from amb.md_ambulance_numb_setting where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>
    </actions>
    <validations>
        <condition id="checkNumsettingRoute" level="warning">
            <expression>
                (typeof scope != 'undefined') &amp;&amp; (scope.id != null) &amp;&amp; (scope.code != 'Route')
            </expression>
            <message>Настройка по уровню 'Направление' не доступна, используйте уровень подстанции.</message>
        </condition>
        <constraint id="checkUniqueNumSetting" level="error">
            <invocation>
                <sql:sql>
                    select count(*)
                    from amb.md_ambulance_numb_setting
                    where clinic_id = :station_id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="station.id" mapping="['station_id']"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Настройка для станции уже существует в системе</message>
        </constraint>
    </validations>
</object>