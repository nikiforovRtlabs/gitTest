<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>priority_to_age</id>-->
    <name>Зависимость приоритета от возраста</name>
    <actions>
        <action id="create" name="Добавить">
            <invocation>
                <sql:sql>
                    insert into amb.md_ambulance_priority_to_age (id,priority_id,from_age_day,from_age_month,from_age_year,to_age_day,to_age_month,to_age_year)
                        VALUES (nextval('amb.md_ambulance_priority_to_age_id_seq'),:prior,cast(:from_day as integer),cast(:from_month as integer),cast(:from_year as integer),cast(:to_day  as integer),cast(:to_month as integer),cast(:to_year as integer));
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="priority.id" mapping="['prior']" domain="integer"/>
                <param name="from_day" mapping="['from_day']" domain="string"/>
                <param name="from_month" mapping="['from_month']" domain="string"/>
                <param name="from_year" mapping="['from_year']" domain="string"/>
                <param name="to_day" mapping="['to_day']" domain="string"/>
                <param name="to_month" mapping="['to_month']" domain="string"/>
                <param name="to_year" mapping="['to_year']" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]" domain="integer"/>
            </out-parameters>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_priority_to_age set priority_id = :prior,from_age_day = :from_day,from_age_month = :from_month,from_age_year = :from_year,to_age_day = :to_day,to_age_month = :to_month,to_age_year= :to_year where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="priority.id" mapping="['prior']" domain="integer"/>
                <param name="from_day" mapping="['from_day']" domain="integer"/>
                <param name="from_month" mapping="['from_month']" domain="integer"/>
                <param name="from_year" mapping="['from_year']" domain="integer"/>
                <param name="to_day" mapping="['to_day']" domain="integer"/>
                <param name="to_month" mapping="['to_month']" domain="integer"/>
                <param name="to_year" mapping="['to_year']" domain="integer"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    delete from amb.md_ambulance_priority_to_age where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>
    </actions>
    <validations>
        <constraint id="checkUniquePrioragesetting" level="error">
            <invocation>
                <sql:sql>
                    select count(*) from amb.md_ambulance_priority_to_age
                    where from_age_day = COALESCE (cast(:from_day as integer),0)
                    and from_age_month = COALESCE (cast(:from_month as integer),0)
                    and from_age_year = COALESCE (cast(:from_year as integer),0)
                    and to_age_day = COALESCE (cast(:to_day as integer),0)
                    and to_age_month = COALESCE (cast(:to_month as integer),0)
                    and to_age_year = COALESCE (cast(:to_year as integer),0)
                    and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer" required="false"/>
                <param name="from_day" mapping="['from_day']" domain="integer"/>
                <param name="from_month" mapping="['from_month']" domain="integer"/>
                <param name="from_year" mapping="['from_year']" domain="integer"/>
                <param name="to_day" mapping="['to_day']" domain="integer"/>
                <param name="to_month" mapping="['to_month']" domain="integer"/>
                <param name="to_year" mapping="['to_year']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Такая настройка уже существует в системе</message>
        </constraint>
    </validations>
</object>