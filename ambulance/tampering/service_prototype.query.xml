<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>service_prototype</id>-->
    <name>Прототип услуги</name>
    <object-id>service</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from sr_srv_prototype ssp
                where is_independent and :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from sr_srv_prototype ssp
                where is_independent and :where
            </n2o:count-query>
            <n2o:alias>ssp</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <expression>ssp.id</expression>
        </field>
        <field>
            <id>code</id>
            <domain>string</domain>
            <name>Код</name>
            <expression>ssp.code</expression>
            <search>trim(upper(ssp.code)) like trim(upper('%'||:code||'%'))</search>
        </field>
        <field>
            <id>is_independent</id>
            <domain>boolean</domain>
            <expression>ssp.is_independent</expression>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <name>Наименование</name>
            <expression>ssp.name</expression>
            <search>trim(upper(ssp.name)) like trim(upper('%'||:name||'%'))</search>
        </field>
        <field>
            <id>code_name</id>
            <domain>string</domain>
            <name>Код</name>
            <expression>ssp.code||':'||ssp.name</expression>
            <search>trim(upper(:expression)) like trim(upper('%'||:code_name||'%'))</search>
        </field>
        <field>
            <id>is_remote</id>
            <domain>boolean</domain>
            <expression>ssp.is_remote</expression>
        </field>
        <field>
            <id>terms</id>
            <domain>string</domain>
            <expression>ssp.terms</expression>
        </field>
        <field>
            <id>type_id</id>
            <domain>integer</domain>
            <name>Тип</name>
            <expression>ssp.type_id</expression>
        </field>
        <field>
            <id>anesthesia_type</id>
            <domain>boolean</domain>
            <expression>ssp.anesthesia_type</expression>
        </field>
        <field>
            <id>is_repeated</id>
            <domain>boolean</domain>
            <expression>ssp.is_repeated</expression>
        </field>
        <field>
            <id>is_expendable_materials</id>
            <domain>boolean</domain>
            <expression>ssp.is_expendable_materials</expression>
        </field>
        <field>
            <id>protocol_path</id>
            <domain>string</domain>
            <expression>ssp.protocol_path</expression>
        </field>
        <field>
            <id>report_path</id>
            <domain>string</domain>
            <expression>ssp.report_path</expression>
        </field>
        <field>
            <id>is_complete_protocol</id>
            <domain>boolean</domain>
            <expression>ssp.is_complete_protocol</expression>
        </field>
        <field>
            <id>is_complex</id>
            <domain>boolean</domain>
            <expression>ssp.is_complex</expression>
        </field>

        <field>
            <id>accounting_id</id>
            <domain>integer</domain>
            <expression>ssp.accounting_id</expression>
        </field>
        <field>
            <id>ecode</id>
            <domain>string</domain>
            <name>Код</name>
            <expression>ssp.e_code</expression>
            <search>trim(upper(ssp.e_code)) like trim(upper('%'||:ecode||'%'))</search>
        </field>
        <field>
            <id>from_dt</id>
            <domain>date</domain>
            <name>Дата начала</name>
            <expression>from_dt</expression>
        </field>
        <field>
            <id>to_dt</id>
            <domain>date</domain>
            <name>Дата окончания</name>
            <expression>to_dt</expression>
        </field>
    </fields>
</query>