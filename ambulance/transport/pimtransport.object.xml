<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>pimtransport</id>-->
    <name>Транспортное средство</name>
    <actions>
        <action id="create" name="Добавить">
            <invocation>
                <sql:sql>
                    select amb.ins_transport(:org,:code,upper(:inventory_number),concat(trim(upper(:inventory_code)),'RUS'),:okof_code,:category,:type,:equipment,
                    :brand,:model_id,:model,:manu,:country,:issue_dt,:dep,:purchase_dt,
                    :ownership_pattern,:warranty_dt,:service_period,:measure,:building,:room,
                    case when (:res is null or :res = false) then false else true end,
                    :contract,cast(:from_dt as date),:to_dt,:unit_id);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="station.id" mapping="['org']" domain="integer"/>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="inventory_number" mapping="['inventory_number']" domain="string"/>
                <param name="inventory_code" mapping="['inventory_code']" domain="string"/>
                <param name="okof_code" mapping="['okof_code']" domain="string"/>
                <param name="transport_category.id" mapping="['category']" domain="integer"/>
                <param name="transport_type.id" mapping="['type']" domain="integer"/>
                <param name="transport_equipment.id" mapping="['equipment']" domain="integer"/>
                <param name="transport_brand.id" mapping="['brand']" domain="integer"/>
                <param name="transport_model.id" mapping="['model_id']" domain="integer"/>
                <param name="model" mapping="['model']" domain="string"/>
                <param name="org.id" mapping="['manu']" domain="integer"/>
                <param name="country.id" mapping="['country']" domain="integer"/>
                <param name="issue_dt" mapping="['issue_dt']" domain="date"/>
                <param name="substation.id" mapping="['dep']" domain="integer"/>
                <param name="purchase_dt" mapping="['purchase_dt']" domain="date"/>
                <param name="ownership_pattern.id" mapping="['ownership_pattern']" domain="integer"/>
                <param name="warranty_dt" mapping="['warranty_dt']" domain="date"/>
                <param name="service_period" mapping="['service_period']" domain="integer"/>
                <param name="measure.id" mapping="['measure']" domain="integer"/>
                <param name="building.id" mapping="['building']" domain="integer"/>
                <param name="room.id" mapping="['room']" domain="integer"/>
                <param name="is_res" mapping="['res']" domain="boolean"/>
                <param name="contract.id" mapping="['contract']" domain="integer"/>
                <param name="from_dt" mapping="['from_dt']" domain="date"/>
                <param name="to_dt" mapping="['to_dt']" domain="date"/>
                <param name="unit_id" mapping="['unit_id']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]" domain="integer"/>
            </out-parameters>

        </action>
        <action id="update" name="Изменить" form-submit-label="Сохранить">
            <invocation>
                <sql:sql>
                    update amb.pim_transport set org_id = :org,code = :code,inventory_number = trim(upper(:inventory_number))
                        ,inventory_code = concat(trim(upper(:inventory_code)),'RUS'),okof_code = :okof_code
                        ,category_id = :category,type_id = :type,transport_equipment_id = :equipment,brand_name_id = :brand
                        ,model_id = :model_id,model = :model,manufacturer_id = :manu,country_id = :country,issue_dt = :issue_dt
                        ,department_id = :dep,purchase_dt = :purchase_dt,ownership_pattern_id = :ownership_pattern
                        ,warranty_dt = :warranty_dt,service_period = :service_period,service_measure_id = :measure
                        ,building_id = :building,room_id = :room,contract_id = :contract,from_dt = :from_dt,to_dt = :to_dt
                        ,unit_id = :unit_id where id = :id;
                    select amb.res_transport(case when (:res is null or :res = false) then false else true end,:id,cast(now() as date));
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="station.id" mapping="['org']" domain="integer"/>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="inventory_number" mapping="['inventory_number']" domain="string"/>
                <param name="inventory_code" mapping="['inventory_code']" domain="string"/>
                <param name="okof_code" mapping="['okof_code']" domain="string"/>
                <param name="transport_category.id" mapping="['category']" domain="integer"/>
                <param name="transport_type.id" mapping="['type']" domain="integer"/>
                <param name="transport_equipment.id" mapping="['equipment']" domain="integer"/>
                <param name="transport_brand.id" mapping="['brand']" domain="integer"/>
                <param name="transport_model.id" mapping="['model_id']" domain="integer"/>
                <param name="model" mapping="['model']" domain="string"/>
                <param name="org.id" mapping="['manu']" domain="integer"/>
                <param name="country.id" mapping="['country']" domain="integer"/>
                <param name="issue_dt" mapping="['issue_dt']" domain="date"/>
                <param name="substation.id" mapping="['dep']" domain="integer"/>
                <param name="purchase_dt" mapping="['purchase_dt']" domain="date"/>
                <param name="ownership_pattern.id" mapping="['ownership_pattern']" domain="integer"/>
                <param name="warranty_dt" mapping="['warranty_dt']" domain="date"/>
                <param name="service_period" mapping="['service_period']" domain="integer"/>
                <param name="measure.id" mapping="['measure']" domain="integer"/>
                <param name="building.id" mapping="['building']" domain="integer"/>
                <param name="room.id" mapping="['room']" domain="integer"/>
                <param name="is_res" mapping="['res']" domain="boolean"/>
                <param name="contract.id" mapping="['contract']" domain="integer"/>
                <param name="from_dt" mapping="['from_dt']" domain="date"/>
                <param name="to_dt" mapping="['to_dt']" domain="date"/>
                <param name="unit_id" mapping="['unit_id']" domain="integer"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    select amb.delete_transport(:id);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>
    </actions>
    <validations>
        <condition id="TransportInventoryValid" level="error">
            <expression on="inventory_number"><![CDATA[
            inventory_number.search(/[бгдёжзийлпфцчшщъыьэюяБГДЁЖЗИЙЛПФЦЧШЩЪЫЬЭЮЯ]+/i) == -1
                 ]]>
            </expression>
            <message>Введите корректный гос. номер</message>
        </condition>
        <constraint id="TransportcodeUnique" level="error">
            <message>
                ТС c VIN кодом {%code%} уже зарегистрировано в системе. Проверьте вводимые данные!
            </message>
            <invocation>
                <sql:sql>
                    select count (*) from amb.pim_transport where trim(upper(code)) = trim(upper(:code)) and to_dt is null and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" required="false"/>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="to_dt" mapping="['to_dt']" domain="date"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
        <constraint id="TransportInventoryUnique" level="error">
            <message>ТС с гос. номером '{inventory_number}' уже существует ->
                 Проверьте вводимые данные!
            </message>
            <invocation>
                <sql:sql>
                    select count (*) from amb.pim_transport where trim(upper(inventory_number)) = trim(upper(:inventory_number)) and to_dt is null and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" required="false"/>
                <param name="inventory_number" mapping="['inventory_number']" domain="string"/>
                <param name="to_dt" mapping="['to_dt']" domain="date"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
    </validations>
</object>