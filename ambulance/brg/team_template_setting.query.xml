<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>team_template_setting</id>-->
    <name>Шаблон вида бригады</name>
    <object-id>team_template_setting</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from amb.sr_res_team_template tt
                join pim_organization po on tt.org_id = po.id
                join amb.md_ambulance_team_kind tk on tt.team_kind_id = tk.id
                join amb.md_ambulance_job_kind jk on tt.job_kind_id = jk.id
                left join amb.md_ambulance_team_type tety on tt.team_type_id = tety.id

                left join amb.sr_res_team_template_profile ttp on tt.id = ttp.team_template_id
                left join md_profile mp on ttp.profile_id = mp.id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from amb.sr_res_team_template tt
                join pim_organization po on tt.org_id = po.id
                join amb.md_ambulance_team_kind tk on tt.team_kind_id = tk.id
                join amb.md_ambulance_job_kind jk on tt.job_kind_id = jk.id
                left join amb.md_ambulance_team_type tety on tt.team_type_id = tety.id

                left join amb.sr_res_team_template_profile ttp on tt.id = ttp.team_template_id
                left join md_profile mp on ttp.profile_id = mp.id
                where :where
            </n2o:count-query>
            <n2o:alias>tt</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <display>tt.id</display>
            <name>Идентификатор</name>
            <expression>tt.id</expression>
        </field>
        <field>
            <id>code</id>
            <domain>string</domain>
            <name>Код</name>
            <expression>tt.code</expression>
            <search>upper(trim(tt.code)) like upper(trim(:code||'%'))</search>
        </field>
        <field>
            <id>codename</id>
            <domain>string</domain>
            <name>Код</name>
            <expression>tt.code || ' ' || tt.name</expression>
            <search>trim(upper(:expression)) like trim(upper('%'||:codename||'%'))</search>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <name>Наименование</name>
            <expression>tt.name</expression>
            <search>upper(trim(tt.name)) like upper(trim('%'||:name||'%'))</search>
        </field>
        <field>
            <id>station.name</id>
            <domain>String</domain>
            <name>Станция</name>
            <expression>coalesce(po.short_name,po.full_name)</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>station.id</id>
            <domain>integer</domain>
            <name>Станция</name>
            <expression>po.id</expression>
            <search type="eq" value="#{org.id?}"/>
        </field>
        <field>
            <id>team_kind.name</id>
            <domain>string</domain>
            <name>Вид бригады</name>
            <expression>tk.name</expression>
        </field>
        <field>
            <id>team_kind.id</id>
            <domain>integer</domain>
            <expression>tk.id</expression>
        </field>
        <field>
            <id>tkId</id>
            <domain>integer</domain>
            <expression>tk.id</expression>
        </field>
        <field>
            <id>job_kind.name</id>
            <domain>string</domain>
            <name>Вид наряда</name>
            <expression>jk.name</expression>
        </field>
        <field>
            <id>job_kind.id</id>
            <domain>integer</domain>
            <expression>jk.id</expression>
        </field>
        <field>
            <id>jkId</id>
            <domain>integer</domain>
            <expression>jk.id</expression>
        </field>
        <field>
            <id>team_type.name</id>
            <domain>string</domain>
            <name>Тип бригады</name>
            <expression>tety.name</expression>
        </field>
        <field>
            <id>team_type.id</id>
            <domain>integer</domain>
            <expression>tety.id</expression>
        </field>
        <field>
            <id>ttId</id>
            <domain>integer</domain>
            <expression>tety.id</expression>
        </field>
        
        <field>
            <id>md_profile.id</id>
            <domain>integer</domain>
            <expression>mp.id</expression>
        </field>
        <field>
            <id>medprofile</id>
            <domain>integer</domain>
            <expression>mp.id</expression>
        </field>
        <field>
            <id>md_profile.name</id>
            <domain>string</domain>
            <name>Профиль</name>
            <expression>mp.name</expression>
        </field>

        <field>
            <id>close_dt</id>
            <domain>date</domain>
            <name>Дата закрытия действия</name>
            <expression>tt.close_dt</expression>
        </field>

        <field>
            <id>color</id>
            <domain>string</domain>
            <expression>
                case when ((tt.close_dt is not null) and (now() > tt.close_dt)) then 'muted' else 'text' end
            </expression>
        </field>

        <field>
            <id>isDeleted</id>
            <domain>boolean</domain>
            <expression>
                case when ((tt.close_dt is not null) and (now() > tt.close_dt)) then true else false end
            </expression>
            <search value="false">((:isDeleted::boolean = true) OR ((tt.close_dt is null) OR (tt.close_dt > now())))</search>
        </field>
    </fields>
</query>