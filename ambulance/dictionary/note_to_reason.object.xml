<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>note_to_reason</id>-->
    <name>Соответствие причины и отметки</name>
    <actions>
        <action id="create" name="Создать">
            <invocation>
                <sql:sql>
                    insert into amb.md_ambulance_note_to_reason (note_id,reason_id,note_type)
                    values(:note,:reason,:type)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="note.id" mapping="['note']" domain="integer"/>
                <param name ="note_reason.id" mapping = "['reason']" domain="integer"/>
                <param name="note_type.code" mapping="['type']" domain="boolean"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_note_to_reason set note_id = :note, reason_id = :reason,note_type = :type where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
                <param name="note.id" mapping="['note']" domain="integer"/>
                <param name ="note_reason.id" mapping = "['reason']" domain="integer"/>
                <param name="note_type.code" mapping="['type']" domain="boolean"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    delete from amb.md_ambulance_note_to_reason where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>
    </actions>
    <validations>
        <constraint id="note_to_reasonUnique" level="error">
            <invocation>
                <sql:sql>
                    select count(*) from amb.md_ambulance_note_to_reason
                    where note_id = :note
                    and reason_id=:reason
                    and note_type=:type
                    and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer" required="false"/>
                <param name="note.id" mapping="['note']" domain="integer"/>
                <param name ="note_reason.id" mapping = "['reason']" domain="integer"/>
                <param name="note_type.code" mapping="['type']" domain="boolean"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Такая настройка уже существует в системе</message>
        </constraint>
    </validations>
</object>