<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>job_kind</id>-->
    <name>Вид наряда на работы</name>
    <object-id>job_kind</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query> select :select
                from amb.md_ambulance_job_kind jk
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(*)
                from amb.md_ambulance_job_kind jk
                where :where
            </n2o:count-query>
            <n2o:alias>jk</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <display/>
            <expression>jk.id</expression>
            <filters>
                <filter type="eq" filter-field="id">
                    :expression = :id
                </filter>
            </filters>
        </field>
        <field>
            <id>code</id>
            <domain>string</domain>
            <name>Код</name>
            <display/>
            <expression>jk.code</expression>
            <filters>
                <filter type="eq" filter-field="code">
                    trim(upper(:expression)) like trim(upper(:code||'%'))
                </filter>
            </filters>
            <sorting>jk.e_code</sorting>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <name>Наименование</name>
            <display/>
            <expression>jk.name</expression>
            <filters>
                <filter type="eq" filter-field="name">
                    trim(upper(:expression)) like trim(upper('%'||:name||'%'))
                </filter>
            </filters>
        </field>
        <field>
            <id>ecode</id>
            <domain>string</domain>
            <name>Дополнительный код</name>
            <display/>
            <expression>jk.e_code</expression>
            <filters>
                <filter type="eq" filter-field="">
                    trim(upper(:expression)) like trim(upper(:ecode||'%'))
                </filter>
            </filters>
        </field>
        <field>
            <id>is_used</id>
            <domain>boolean</domain>
            <display/>
            <expression>
                case when exists (select * from amb.sr_res_team where job_kind_id = jk.id)
                then true
                else false
                end
            </expression>
        </field>
        <field>
            <id>has_team_job</id>
            <domain>integer</domain>
            <display/>
            <expression>:has_team_job</expression>
            <filters>
                <filter type="eq" filter-field="has_team_job">
                    <![CDATA[
                            case when :has_team_job is not null and :has_team_job = 1 then jk.id <> 1 end
                        ]]>
                </filter>
            </filters>
        </field>
    </fields>
</query>