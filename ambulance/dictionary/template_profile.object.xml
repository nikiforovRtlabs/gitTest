<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>template_profile</id>-->
    <name>Шаблон вида бригады: медицинский профиль</name>
    <actions>
        <action id="create" name="Добавить">
            <invocation>
                <sql:sql>
                    insert into amb.sr_res_team_template_profile(team_template_id,profile_id)
                    values (:team_template,:profile);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="team_template.id" mapping="['team_template']" domain="integer"/>
                <param name="md_profile.id" mapping="['profile']" domain="integer"/>
            </in-parameters>
        </action>
        <action id="update" name="Изменить">
            <invocation>
                <sql:sql>
                    update amb.sr_res_team_template_profile set team_template_id=:team_template,profile_id = :profile where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="team_template.id" mapping="['team_template']" domain="integer"/>
                <param name="md_profile.id" mapping="['profile']" domain="integer"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    delete from amb.sr_res_team_template_profile where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>
    </actions>
    <validations>
        <constraint id="checkUniqueTemplateprof" level="error">
            <invocation>
                <sql:sql>
                    select count(*) from amb.sr_res_team_template_profile
                    where team_template_id = :team_template
                    and profile_id = :profile
                    and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="team_template.id" mapping="['team_template']" domain="integer"/>
                <param name="md_profile.id" mapping="['profile']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Такая запись уже существует в системе</message>
        </constraint>
    </validations>
</object>