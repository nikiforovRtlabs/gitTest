<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>station_category</id>-->
    <name>Категория станции скорой помощи</name>
    <actions>
        <action id="create" name="Добавить">
            <invocation>
                <sql:sql>
                    insert into amb.md_ambulance_station_category(name,code,e_code)
                        values (trim(:name),:code,trim(upper(:ecode)));
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="code" mapping="['code']" domain="integer"/>
                <param name="ecode" mapping="['ecode']" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_station_category set code = :code, name = trim(:name),e_code = trim(upper(:ecode)) where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="code" mapping="['code']" domain="integer"/>
                <param name="ecode" mapping="['ecode']" domain="string"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    delete from amb.md_ambulance_station_category where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>
    </actions>
    <validations>
        <constraint id="stationCategorynameUnique" level="error">
            <!--<message summary ="Категория с наименованием '%name%' уже существует ->
                Назовите категорию иначе!
            </message>-->
            <message>Категория с наименованием '{name}' уже существует ->
                Назовите категорию иначе!
            </message>
            <invocation>
                <sql:sql>
                    select count(*) from amb.md_ambulance_station_category where trim(upper(name)) = trim(upper(:name)) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
        <constraint id="stationCategorycodeUnique" level="error">
            <!--<message summary ="Код категории %code%' уже существует ->
                Укажите код категории иной!
            </message>-->
            <message>Код категории '{code}' уже существует ->
                Укажите код категории иной!
            </message>
            <invocation>
                <sql:sql>
                    select count (*) from amb.md_ambulance_station_category where code = cast(:code as varchar(50)) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name ="code" mapping = "['code']" domain="integer"/>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
        <constraint id="stationCategoryecodeUnique" level="error">
            <!--<message summary ="e_code категории %ecode%' уже существует ->
                Укажиите e_code категории иной!
            </message>-->
            <message>Доп.код категории '{ecode}' уже существует ->
                Укажиите доп.код категории иной!
            </message>
            <invocation>
                <sql:sql>
                    select count (*) from amb.md_ambulance_station_category where trim(upper(e_code)) = trim(upper(:ecode)) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name ="ecode" mapping = "['ecode']" domain="string"/>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
    </validations>
</object>