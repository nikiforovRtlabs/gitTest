<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>note</id>-->
    <name>Отметка на вызове</name>
    <actions>
        <action id="create" name="Создать">
            <invocation>
                <sql:sql>
                    insert into amb.md_ambulance_note (code,name,e_code, is_control)
                    values(trim(:code),trim(:name),trim(upper(:ecode)), :control)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name ="code" mapping = "['code']" domain="string"/>
                <param name ="name" mapping = "['name']" domain="string"/>
                <param name="control.code" mapping="['control']" domain="boolean"/>
                <param name="ecode" mapping="['ecode']" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_note set code = trim(:code), name = trim(:name),e_code = trim(upper(:ecode)),is_control = :control where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
                <param name ="code" mapping = "['code']" domain="string"/>
                <param name ="name" mapping = "['name']" domain="string"/>
                <param name="control.code" mapping="['control']" domain="boolean"/>
                <param name="ecode" mapping="['ecode']" domain="string"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    delete from amb.md_ambulance_note where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>
    </actions>
    <validations>
        <constraint id="notecodeUnique" level="error">
            <message>Отметка с кодом '{code}' уже существует ->
                Назовите код отметки иначе!
            </message>
            <invocation>
                <sql:sql>
                    select count (*) from amb.md_ambulance_note where trim(upper(code)) = trim(upper(:code)) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name ="code" mapping = "['code']" domain="string"/>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
        <constraint id="notenameUnique" level="error">
            <message>Отметка с наименованием '{name}' уже существует!
                     Назовите отметку иначе!</message>
            <!--<message summary ="Отметка с наименованием '%name%' уже существует ->
                Назовите отметку иначе!
            </message>-->
            <invocation>
                <sql:sql>
                    select count (*) from amb.md_ambulance_note where trim(upper(name)) = trim(upper(:name)) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name ="name" mapping = "['name']" domain="string"/>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
        <constraint id="noteecodeUnique" level="error">
            <message>Отметка с '{ecode}' уже существует!
                Выберите другой e_code!</message>
            <!--<message summary ="Отметка с e_code '%ecode%' уже существует -> </message>-->
            <invocation>
                <sql:sql>
                    select count (*) from amb.md_ambulance_note where trim(upper(e_code)) = trim(upper(:ecode)) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name ="ecode" mapping = "['ecode']" domain="string"/>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
    </validations>
</object>