<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>transport_type</id>-->
    <name>Тип ТС</name>
    <actions>
        <action id="create" name="Создать">
            <invocation>
                <sql:sql>
                    insert into amb.pim_transport_type (id,code,name,parent_id,category_id,e_code)
                    values(nextval('amb.pim_transport_type_id_seq'),:code,trim(:name),:parent,:categ,trim(upper(:ecode)))
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="code" mapping="['code']" domain="string"/>
                <param name ="name" mapping = "['name']" domain="string"/>
                <param name="parent.id" mapping="['parent']" domain="integer"/>
                <param name="transport_category.id" mapping="['categ']" domain="integer"/>
                <param name="ecode" mapping="['ecode']" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update amb.pim_transport_type set code = :code, name = trim(:name),parent_id = :parent,category_id = :categ,e_code = trim(upper(:ecode)) where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
                <param name ="code" mapping = "['code']" domain="string"/>
                <param name ="name" mapping = "['name']" domain="string"/>
                <param name="parent.id" mapping="['parent']" domain="integer"/>
                <param name="transport_category.id" mapping="['categ']" domain="integer"/>
                <param name="ecode" mapping="['ecode']" domain="string"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    delete from amb.pim_transport_type where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>
    </actions>
    <validations>
        <constraint id="transtypecodeUnique" level="error">
            <!--<message summary ="Тип транспорта с кодом '%code%' уже существует ->
                Укажите другой код!
            </message>-->
            <message>Тип транспорта с кодом '{code}' уже существует ->
                Укажите другой код!
            </message>
            <invocation>
                <sql:sql>
                    select count (*) from amb.pim_transport_type where trim(upper(code)) = trim(upper(cast(:code as varchar(50)))) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name ="code" mapping = "['code']" domain="string"/>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
        <constraint id="transtypenameUnique" level="error">
            <!--<message summary ="Тип транспорта с наименованием '%name%' уже существует ->
                Назовите тип иначе!
            </message>-->
            <message>Тип транспорта с наименованием '{name}' уже существует ->
                Назовите тип иначе!
            </message>
            <invocation>
                <sql:sql>
                    select count (*) from amb.pim_transport_type where trim(upper(name)) = trim(upper(:name)) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name ="name" mapping = "['name']" domain="string"/>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
        <constraint id="transtypeecodeUnique" level="error">
            <!--<message summary ="e_code типа транспорта %ecode%' уже существует ->
                Укажите e_code иной!
            </message>-->
            <message> Доп. код типа транспорта '{ecode}' уже существует ->
                Укажите иной доп. код!
            </message>
            <invocation>
                <sql:sql>
                    select count (*) from amb.pim_transport_type where trim(upper(e_code)) = trim(upper(:ecode)) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name ="ecode" mapping = "['ecode']" domain="string"/>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
    </validations>
</object>