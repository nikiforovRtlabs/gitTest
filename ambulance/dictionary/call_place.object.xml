<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>call_place</id>-->
    <name>Место вызова</name>
    <actions>
        <action id="create" name="Добавить">
            <invocation>
                <sql:sql>
                    insert into amb.md_ambulance_call_place(id,name,code,e_code,is_search,party_role_id,priority_id)
                        values (nextval('amb.md_ambulance_call_place_id_seq'),trim(:name),:code,trim(upper(:ecode)),:search,:role,:priority);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="ecode" mapping="['ecode']" domain="string"/>
                <param name="search" mapping="['search']" domain="boolean"/>
                <param name="party_role.id" mapping="['role']" domain="integer"/>
                <param name="priority.id" mapping="['priority']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_call_place set code = :code, name = trim(:name),e_code = trim(upper(:ecode)),is_search = :search, party_role_id = :role,priority_id = :priority where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="code" mapping="['code']" domain="string"/>
                <param name="ecode" mapping="['ecode']" domain="string"/>
                <param name="search" mapping="['search']" domain="boolean"/>
                <param name="party_role.id" mapping="['role']" domain="integer"/>
                <param name="priority.id" mapping="['priority']" domain="integer"/>
            </in-parameters>
        </action>
        <action id="delete" name="Удалить">
            <invocation>
                <sql:sql>
                    delete from amb.md_ambulance_call_place where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
        </action>
        <action id="changeSearch">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_call_place set is_search = :search where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="search" mapping="['search']" domain="boolean"/>
            </in-parameters>
        </action>
    </actions>
    <validations>
        <constraint id="placenameUnique" level="error">
            <!--<message summary ="Место вызова с наименованием '%name%' уже существует ->
                Назовите место вызова иначе!
            </message>-->
            <message>Место вызова с наименованием '{name}' уже существует ->
                Назовите место вызова иначе!
            </message>
            <invocation>
                <sql:sql>
                    select count(*) from amb.md_ambulance_call_place where trim(upper(name)) = trim(upper(:name)) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
        <constraint id="placecodeUnique" level="error">
            <!--<message summary ="Код статуса %code%' уже существует ->
                Укажиите код места вызова иной!
            </message>-->
            <message>Код статуса '{code}' уже существует ->
                Укажиите код места вызова иной!
            </message>
            <invocation>
                <sql:sql>
                    select count (*) from amb.md_ambulance_call_place where code = cast(:code as varchar(50)) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name ="code" mapping = "['code']" domain="string"/>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
        <constraint id="placeecodeUnique" level="error">
            <!--<message summary ="e_code статуса %ecode%' уже существует ->
                Укажиите e_code места вызова иной!
            </message>-->
            <message>Доп.код статуса '{ecode}' уже существует ->
                Укажиите доп.код места вызова иной!
            </message>
            <invocation>
                <sql:sql>
                    select count (*) from amb.md_ambulance_call_place where trim(upper(e_code)) = trim(upper(:ecode)) and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name ="ecode" mapping = "['ecode']" domain="string"/>
                <param name = "id" mapping = "['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
    </validations>
</object>