<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>call_double</id>-->
    <name>Повторность/задвоенность вызова</name>
    <actions>
        <!--<action id="create" name="Создать">-->
            <!--<invocation>-->
                <!--<sql:sql>-->
                    <!--select amb.add_amb_call_double(:call,:note,true,:reg,:pcall);-->
                <!--</sql:sql>-->
            <!--</invocation>-->
            <!--<in-parameters>-->
                <!--<param name="call_note.call_id" mapping="['call']"/>-->
                <!--<param name="note.id" mapping="['note']"/>-->
                <!--&lt;!&ndash;<param name ="call_note.type" mapping = "['type']"/>&ndash;&gt;-->
                <!--<param name="employee.id" mapping="['reg']"/>-->
                <!--<param name="call.id" mapping="['pcall']"/>-->
            <!--</in-parameters>-->
            <!--<out-parameters>-->
                <!--<param name="id" mapping="[0][0]"/>-->
            <!--</out-parameters>-->
        <!--</action>-->
        <action id="createRepeat" name="Повторный">
            <invocation>
                <sql:sql>
                    select amb.add_amb_call_double(:call,9,true,:reg,coalesce(:pcall,:pc));
                    update amb.md_ambulance_call set call_mark  = 2 where id = :call;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call_id" mapping="['call']" domain="integer"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
                <param name="id" mapping="['pcall']" domain="integer"/>
                <param name="search.id" mapping="['pc']" domain="integer"/>
            </in-parameters>
        </action>
        <action id="createDouble" name="Задвоен">
            <invocation>
                <sql:sql>
                    select amb.add_amb_call_double(:call,8,true,:reg,coalesce(:pcall,:pc));
                    update amb.md_ambulance_call set call_mark  = 3 where id = :call;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call_id" mapping="['call']" domain="integer"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
                <param name="id" mapping="['pcall']" domain="integer"/>
                <param name="search.id" mapping="['pc']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>
        </action>
        <action id="createPrimary" name="Первичный">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_call set call_mark  = 1 where id = :call;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call_id" mapping="['call']" domain="integer"/>
            </in-parameters>
        </action>
        <action id="createPrimarynote" name="Первичный">
            <invocation>
                <sql:sql>
                    select amb.add_amb_call_double(:call,:note,false,:reg,:pcall);
                    update amb.md_ambulance_call set call_mark  = 1 where id = :call;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call_id" mapping="['call']" domain="integer"/>
                <param name="note.id" mapping="['note']" domain="integer"/>
                <!--<param name ="call_note.type" mapping = "['type']" domain="integer"/>-->
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
                <param name="id" mapping="['pcall']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>
        </action>
    </actions>
</object>