<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <!--<id>brg</id>-->
    <name>Бригады</name>
    <actions>
        <action id="free" name="Свободна">
            <invocation>
                <sql:sql>
                    select amb.add_team_job_status_hist (:id,cast(now() as timestamp without time zone),1,:reg,null,:user);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="brg.id" mapping="['id']" domain="integer"/>
                <!--<param name="emp_hist_reg.id" mapping="['histreg']" domain="integer" value="#{emplPos.id?}"/>-->
                <param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
                <param name="user" mapping="['user']" domain="integer" value="#{user.id}"/>
            </in-parameters>
        </action>
        <action id="repair" name="На ремонте">
            <invocation>
                <sql:sql>
                    select amb.add_team_job_status_hist (:id,cast(now() as timestamp without time zone),3,:reg,null,:user)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="brg.id" mapping="['id']" domain="integer"/>
                <!--<param name="emp_hist_reg.id" mapping="['histreg']" domain="integer" value="#{emplPos.id?}"/>-->
                <param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
                <param name="user" mapping="['user']" domain="integer" value="#{user.id}"/>
            </in-parameters>
        </action>
        <action id="lunch" name="На обеде">
            <invocation>
                <sql:sql>
                    select amb.add_team_job_status_hist (:id,cast(now() as timestamp without time zone),4,:reg,null,:user)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="brg.id" mapping="['id']" domain="integer"/>
                <!--<param name="emp_hist_reg.id" mapping="['histreg']" domain="integer" value="#{emplPos.id?}"/>-->
                <param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
                <param name="user" mapping="['user']" domain="integer" value="#{user.id}"/>
            </in-parameters>
        </action>
        <action id="refueling" name="Заправка">
            <invocation>
                <sql:sql>
                    select amb.add_team_job_status_hist (:id,cast(now() as timestamp without time zone),5,:reg,null,:user)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="brg.id" mapping="['id']" domain="integer"/>
                <!--<param name="emp_hist_reg.id" mapping="['histreg']" domain="integer" value="#{emplPos.id?}"/>-->
                <param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
                <param name="user" mapping="['user']" domain="integer" value="#{user.id}"/>
            </in-parameters>
        </action>
        <!--если бригада на вызове-->
        <action id="close_call" name="Завершить">
            <invocation>
                <sql:sql>
                    select amb.close_brg_to_call(:brg_id,:emp_id,:reg,:user);
                </sql:sql>
            </invocation>
            <in-parameters>
                <!--<param name="call.id" mapping="['call']" domain="integer"/>-->
                <param name="brg.id" mapping="['brg_id']" domain="integer"/>
                <param name="emp.id" mapping="['emp_id']" domain="integer"/>
                <param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id}"/>
                <param name="user" mapping="['user']" domain="integer" value="#{user.id}"/>
                <param name="orgId" mapping="['orgId']" domain="integer" value="#{org.id}"/>
            </in-parameters>
            <confirmation-text>Завершить вызов бригаде?</confirmation-text>
            <validations activate="whiteList">
                <validation ref-id="checkSNMPCode"/>
            </validations>
        </action>
        <action id="exitfromsubstation" name="Выезд">
            <invocation>
                <sql:sql>
                    select amb.add_ambcall_state_hist (:call,cast(now() as timestamp without time zone),6,2,:reg);
                    <!--select add_team_job_status_hist (:id,cast(now() as timestamp without time zone),5,:histreg,:user)-->
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
                <param name="user" mapping="['user']" domain="integer" value="#{user.id}"/>
            </in-parameters>
        </action>
        <action id="arrival" name="Доезд">
            <invocation>
                <sql:sql>
                    <!--select amb.add_ambcall_state_hist (:call,cast(now() as timestamp without time zone),7,2,:reg);-->
                    select amb.add_arrival_to_call_state_hist (:call,cast(now() as timestamp without time zone),2,:reg,:user);
                    <!--select add_team_job_status_hist (:id,cast(now() as timestamp without time zone),5,:histreg,:user)-->
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
                <param name="user" mapping="['user']" domain="integer" value="#{user.id}"/>
            </in-parameters>
        </action>
        <!--когда бригада на вызове-->
        <action id="returntosubstation" name="Возврат на п/ст">
            <invocation>
                <sql:sql>
                    <!--завершение вызова, статус бригаде свободна-->
                    select amb.close_brg_to_call(:brg_id,:emp_id,:reg,:user);
                    select amb.add_ambcall_state_hist (:call,cast(now() as timestamp without time zone),11,2,:reg);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="brg.id" mapping="['brg_id']" domain="integer"/>
                <param name="emp.id" mapping="['emp_id']" domain="integer"/>
                <param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
                <param name="user" mapping="['user']" domain="integer" value="#{user.id}"/>
            </in-parameters>
        </action>
        <!-- смена статуса на "начало транспортировки" -->
        <action id="beginTransport" name="Начало транспортировки">
            <invocation>
                <sql:sql>
                    select amb.add_ambcall_state_hist (:call,cast(now() as timestamp without time zone),8,2,:reg);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
            </in-parameters>
        </action>
        <!-- смена статуса на "прибытие в МО" -->
        <action id="comingToMO" name="прибытие в МО">
            <invocation>
                <sql:sql>
                    select amb.add_ambcall_state_hist (:call,cast(now() as timestamp without time zone),9,2,:reg);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
            </in-parameters>
        </action>
        <!--когда бригада свободна-->
        <!--<action id="returntosubstation_free" name="Возврат на п/ст">-->
            <!--<invocation>-->
                <!--<sql:sql>-->
                    <!--завершение вызова, статус бригаде свободна-->
                    <!--select amb.add_ambcall_state_hist (:call,cast(now() as timestamp without time zone),11,2,:reg);-->
                <!--</sql:sql>-->
            <!--</invocation>-->
            <!--<in-parameters>-->
                <!--<param name="call.id" mapping="['call']" domain="integer"/>-->
                <!--<param name="brg.id" mapping="['id']" domain="integer"/>-->
                <!--<param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>-->
            <!--</in-parameters>-->
        <!--</action>-->
        <!--не использовала ещё-->
        <action id="annul" name="Снять">
            <invocation>
                <sql:sql>
                    update amb.md_ambulance_call set brg_id = null, emp_id = null, to_time = null where id = :call;
                    select amb.add_team_job_status_hist (:id,cast(now() as timestamp without time zone),6,:reg,'снят вызов №'||cast(:call as varchar(6)),:user);
                    select amb.add_team_job_status_hist (:id,cast(now()+'1 second' as timestamp without time zone),1,:reg,null,:user);
                    select amb.add_ambcall_state_hist (:call,cast(now() as timestamp without time zone),13,2,:reg); <!-- направлен на отказ-->
                    select amb.add_ambcall_state_hist (:call,cast(now() as timestamp without time zone),1,2,:reg);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="brg.id" mapping="['id']" domain="integer"/>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
                <param name="user" mapping="['user']" domain="integer" value="#{user.id}"/>
            </in-parameters>
        </action>

        <!--<action id="close" name="Закончить смену">-->
            <!--<invocation>-->
                <!--<sql:sql>-->
                    <!--select amb.team_job_close(-->
                    <!--(select cast(string_to_array(trim(both '[]' from :id),',') as integer[]))-->
                    <!--,:reg,:user);-->
                <!--</sql:sql>-->
            <!--</invocation>-->
            <!--<in-parameters>-->
                <!--<param name="brg.id" mapping="['id']" domain="integer"/>-->
                <!--<param name="statreg.id" mapping="['reg']" domain="integer" value="#{emplPos.id}"/>-->
                <!--<param name="user" mapping="['user']" domain="integer" value="#{user.id}"/>-->
            <!--</in-parameters>-->
        <!--</action>-->
        <action id="alcohol" name="Алкоголь">
            <invocation>
                <sql:sql>
                    select amb.add_call_note(:call, (select id from amb.md_ambulance_note where code='А'), true, null, 'р/у', :reg, null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id}"/>
            </in-parameters>
        </action>

        <action id="road_acc">
            <invocation>
                <sql:sql>
                    select amb.add_call_note(:call,3,true,null,'р/у',:reg,null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
        </action>

        <action id="fire">
            <invocation>
                <sql:sql>
                    select amb.add_call_note(:call,5,true,null,'р/у',:reg,null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
        </action>

        <action id="crime">
            <invocation>
                <sql:sql>
                    select amb.add_call_note(:call,6,true,null,'р/у',:reg,null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
        </action>

        <action id="danger">
            <invocation>

                <sql:sql>
                    select amb.add_call_note(:call,12,true,null,'р/у',:reg,null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
        </action>

        <action id="psycho">
            <invocation>
                <sql:sql>
                    select amb.add_call_note(:call,15,true,null,'р/у',:reg,null);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="call.id" mapping="['call']" domain="integer"/>
                <param name="employee.id" mapping="['reg']" domain="integer" value="#{emplPos.id?}"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
        </action>

    </actions>
    <validations>
        <constraint id="checkSNMPCode" level="error">
            <message>В картотеке услуг содержится более 1 услуги с кодом SNMP. Обратитесь к администратору системы.</message>
            <invocation>
                <sql:sql>
                    select count(*) &lt;= 1 from sr_service where org_id = :orgId and lower(code) = 'snmp';
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="orgId" mapping="['orgId']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == true"/>
        </constraint>
    </validations>
</object>