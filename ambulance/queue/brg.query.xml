<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>brg_mit_amb</id>-->
    <name>Бригады</name>
    <object-id>brg</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from
                (select
                srtj.id as id
                , srtj.id as brg_id
                , cast(null as integer) as emp_id
                , srg.name as name
                , srg.org_id as org
                , pd.id as dep
                , mac.id as change
                , to_char(cast(mac.from_data + mac.from_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as chb
                , to_char(cast(mac.to_data + mac.to_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as che
                , case when srtj.edate is null then false else true end as is_edate
                , srtjs.color as color
                , srtjr.id as resId
                , respep.id||': '||respi.surname||' '||left(initcap(respi.name),1)||'.
                '||left(initcap(respi.patr_name),1)||'.' as resName
                , respep.id||': '||respi.surname||' '||left(initcap(respi.name),1)||'.
                '||left(initcap(respi.patr_name),1)||'.'||'('||resppos.name||')' as resNamepos
                , cal.id as call_id
                , cal.call_kind_id as call_kind
                , cal.call_number as call_num
                <!--, cal.address_id as addr-->
                <!--, case when cal.address_id is not null then adr__get_element_as_text(cal.address_id,'(6,s,0)(7,s,0)(8,s,0)')||cal.description||cal.call_place_note-->
                <!--else cal.description||cal.call_place_note end as addr-->
                ,
                <!--case when cal.id-->
                concat (adr__get_element_as_text(cal.address_id, '(6,s,1)(7,s,1)(8,s,1)'),',
                ',adr__get_element_as_text(cal.address_id, '(4,s,0)'),' ',cal.description,' ' ||cal.call_place_note) as
                addr
                <!--, to_char(srjsh.date_time,'hh24:mi') as starttime-->
                , srjsh.date_time as starttime
                , srtjs.id as statId
                , case when macs.name is null
                then srtjs.name
                else concat (srtjs.name,'/',macs.name)
                end as statName
                , to_char(case when srtjs.id in (2,3,4,5) then cast(srjsh.date_time + tcontr.control_time as timestamp
                WITHOUT TIME ZONE) end,'hh24:mi') as control_time
                ,
                <!--case when srtjs.id in (2,4,5) then-->
                case when now() > cast(srjsh.date_time + tcontr.control_time as timestamp WITHOUT TIME ZONE)
                then true
                else false
                <!--end-->
                end as is_contrTime
                , case when now() > srtj.planned_edate then 'Смена работы бригады закончилась' else '' end as end_text
                , case when case when amb.team_job_is_created(srtj.id) in (1,2) then '+' else '' end ='' then 'Бригада
                без врача' else '' end as onedoc_text
                , (select count(*) from amb.md_ambulance_call where brg_id = srtj.id) as call_count
                , mp.id as prof_id
                , mp.name as prof_name
                , ap.id as amb_prof_id
                , ap.name as amb_prof_name
                <!--, amb.search_call_state_state(cal.id) as state_id-->
                , (select state_id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id
                desc limit 1) as state_id
                , false as is_amb
                , case when (select count(*) from amb.md_ambulance_call_note where call_id =cal.id and note_type = true
                and note_active = true and note_id in (11)) > 0
                then true
                else false
                end as has_note_city
                , case when amb.search_call_note(cal.id) like ('А') then true
                when amb.search_call_note(cal.id) like ('А,%') then true
                when amb.search_call_note(cal.id) like ('%, А,%') then true
                when amb.search_call_note(cal.id) like ('%, А') then true
                else false
                end as has_alcohol
                , case when amb.search_call_note(cal.id) like ('%ДТП%') then true else false end as has_road_acc
                , case when amb.search_call_note(cal.id) like ('%ПОЖ%') then true else false end as has_fire
                , case when amb.search_call_note(cal.id) like ('%К%') then true else false end as has_crime
                , case when amb.search_call_note(cal.id) like ('%ОПАС%') then true else false end as has_danger
                , case when amb.search_call_note(cal.id) like ('П') then true
                when amb.search_call_note(cal.id) like ('П,%') then true
                when amb.search_call_note(cal.id) like ('%, П,%') then true
                when amb.search_call_note(cal.id) like ('%, П') then true
                else false end as has_psycho
                , case when (select count(cn.id) from amb.md_ambulance_call_note cn where cn.call_id = cal.id) >0 then true else false end as has_note
                from amb.sr_res_team_job srtj
                join amb.sr_res_team srt on srt.id = srtj.team_id
                join sr_res_group srg on srt.resource_id = srg.id

                join pim_department pd on srg.department_id = pd.id
                left join amb.sr_res_team_template srtt on srt.team_template_id = srtt.id
                join amb.md_ambulance_team_kind tk on srt.team_kind_id = tk.id

                left join amb.sr_res_team_template_profile ttp on srtt.id = ttp.team_template_id
                <!--left join md_profile mp on ttp.profile_id = mp.id-->
                left join public.sr_res_group_profile srgp on srgp.res_group_id = srg.id
                left join public.md_profile mp on mp.id = srgp.profile_id
                left join public.md_resgroup_amb_profile rap on srt.resource_id = rap.id
                left join public.md_ambulance_profile ap on rap.profile_id = ap.id

                join amb.md_ambulance_change mac on srtj.change_id = mac.id

                join amb.sr_res_team_job_status_history srjsh on srjsh.id = (select id from
                amb.sr_res_team_job_status_history where team_job_id = srtj.id order by date_time DESC, id desc limit 1)
                <!--amb.search_team_job_status(srtj.id)-->
                join amb.sr_res_team_job_status srtjs on srtjs.id = srjsh.job_status_id
                left join amb.md_ambulance_call_time_control tcontr on srtjs.id = tcontr.job_status_id and
                tcontr.clinic_id = srg.org_id

                join amb.sr_res_team_job_resourse srtjr on srtjr.team_job_id = srtj.id and srtjr.is_head is true and
                srtjr.deviation_id is null
                join sr_resource sr on srtjr.resource_id = sr.id

                join pim_employee_position_resource pepr on sr.id = pepr.id
                join pim_employee_position respep on pepr.employee_position_id = respep.id
                join pim_employee respe on respep.employee_id = respe.id
                join pim_individual respi on respe.individual_id = respi.id
                join pim_position resppos on respep.position_id = resppos.id
                left join amb.md_ambulance_call cal on cal.brg_id = srtj.id and cal.to_time is null
                left join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history
                where call_id = cal.id order by date_time DESC, id desc limit 1) and mash.state_id in (4,5,6,7,8,9)
                left join amb.md_ambulance_call_state macs on macs.id = mash.state_id

                where tk.code = '1' and (srtj.edate is null or srtj.edate > now()) and (cal.call_type_id not in (4) or
                cal.call_type_id is NULL)

                union

                select
                srtj.id + 1000 as id
                , srtj.id as brg_id
                , cast(null as integer) as emp_id
                , srg.name as name
                , srg.org_id as org
                , pd.id as dep
                , mac.id as change
                , to_char(cast(mac.from_data + mac.from_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as chb
                , to_char(cast(mac.to_data + mac.to_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as che
                , case when srtj.edate is null then false else true end as is_edate
                , srtjs.color as color
                , srtjr.id as resId
                , respep.id||': '||respi.surname||' '||left(initcap(respi.name),1)||'.
                '||left(initcap(respi.patr_name),1)||'.' as resName
                , respep.id||': '||respi.surname||' '||left(initcap(respi.name),1)||'.
                '||left(initcap(respi.patr_name),1)||'.'||'('||resppos.name||')' as resNamepos
                , cal.id as call_id
                , cal.call_kind_id as call_kind
                , cal.call_number as call_num
                <!--, cal.address_id as addr-->
                <!--, case when cal.address_id is not null then adr__get_element_as_text(cal.address_id,'(6,s,0)(7,s,0)(8,s,0)')||cal.description||cal.call_place_note-->
                <!--else cal.description||cal.call_place_note end as addr-->
                ,concat (adr__get_element_as_text(cal.address_id, '(6,s,1)(7,s,1)(8,s,1)'),',
                ',adr__get_element_as_text(cal.address_id, '(4,s,0)'),' ',cal.description,' ' ||cal.call_place_note) as
                addr
                <!--, to_char(srjsh.date_time,'hh24:mi') as starttime-->
                , srjsh.date_time as starttime
                , srtjs.id as statId
                , case when macs.name is null
                then srtjs.name
                else concat (srtjs.name,'/',macs.name)
                end as statName
                , to_char(case when srtjs.id in (2,3,4,5) then cast(srjsh.date_time + tcontr.control_time as timestamp
                WITHOUT TIME ZONE) end,'hh24:mi') as control_time
                ,
                <!--case when srtjs.id in (2,4,5) then-->
                case when now() > cast(srjsh.date_time + tcontr.control_time as timestamp WITHOUT TIME ZONE)
                then true
                else false
                <!--end-->
                end as is_contrTime
                ,case when now() > srtj.planned_edate then 'Смена работы бригады закончилась' else '' end as end_text
                , case when case when amb.team_job_is_created(srtj.id) in (1,2) then '+' else '' end ='' then 'Бригада
                без врача' else '' end as onedoc_text
                ,(select count(*) from amb.md_ambulance_call where brg_id = srtj.id) as call_count
                , mp.id as prof_id
                , mp.name as prof_name
                , ap.id as amb_prof_id
                , ap.name as amb_prof_name
                <!--, amb.search_call_state_state(cal.id) as state_id-->
                ,(select state_id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id
                desc limit 1) as state_id
                , false as is_amb
                , case when (select count(*) from amb.md_ambulance_call_note where call_id =cal.id and note_type = true
                and note_active = true and note_id in (11)) > 0
                then true
                else false
                end as has_note_city
                , case when amb.search_call_note(cal.id) like ('А') then true
                when amb.search_call_note(cal.id) like ('А,%') then true
                when amb.search_call_note(cal.id) like ('%, А,%') then true
                when amb.search_call_note(cal.id) like ('%, А') then true
                else false
                end as has_alcohol
                , case when amb.search_call_note(cal.id) like ('%ДТП%') then true else false end as has_road_acc
                , case when amb.search_call_note(cal.id) like ('%ПОЖ%') then true else false end as has_fire
                , case when amb.search_call_note(cal.id) like ('%К%') then true else false end as has_crime
                , case when amb.search_call_note(cal.id) like ('%ОПАС%') then true else false end as has_danger
                , case when amb.search_call_note(cal.id) like ('П') then true
                when amb.search_call_note(cal.id) like ('П,%') then true
                when amb.search_call_note(cal.id) like ('%, П,%') then true
                when amb.search_call_note(cal.id) like ('%, П') then true
                else false end as has_psycho
                , case when (select count(cn.id) from amb.md_ambulance_call_note cn where cn.call_id = cal.id) >0 then true else false end as has_note
                from amb.sr_res_team_job srtj
                join amb.sr_res_team srt on srt.id = srtj.team_id
                join sr_res_group srg on srt.resource_id = srg.id

                join pim_department pd on srg.department_id = pd.id
                left join amb.sr_res_team_template srtt on srt.team_template_id = srtt.id
                join amb.md_ambulance_team_kind tk on srt.team_kind_id = tk.id

                left join amb.sr_res_team_template_profile ttp on srtt.id = ttp.team_template_id
                <!--left join md_profile mp on ttp.profile_id = mp.id-->
                left join public.sr_res_group_profile srgp on srgp.res_group_id = srg.id
                left join public.md_profile mp on mp.id = srgp.profile_id
                left join public.md_resgroup_amb_profile rap on srt.resource_id = rap.id
                left join public.md_ambulance_profile ap on rap.profile_id = ap.id

                join amb.md_ambulance_change mac on srtj.change_id = mac.id

                join amb.sr_res_team_job_status_history srjsh on srjsh.id = (select id from
                amb.sr_res_team_job_status_history where team_job_id = srtj.id order by date_time DESC, id desc limit 1)
                <!--amb.search_team_job_status(srtj.id)-->
                join amb.sr_res_team_job_status srtjs on srtjs.id = srjsh.job_status_id
                left join amb.md_ambulance_call_time_control tcontr on srtjs.id = tcontr.job_status_id and
                tcontr.clinic_id = srg.org_id

                join amb.sr_res_team_job_resourse srtjr on srtjr.team_job_id = srtj.id and srtjr.is_head is true and
                srtjr.deviation_id is null
                join sr_resource sr on srtjr.resource_id = sr.id

                join pim_employee_position_resource pepr on sr.id = pepr.id
                join pim_employee_position respep on pepr.employee_position_id = respep.id
                join pim_employee respe on respep.employee_id = respe.id
                join pim_individual respi on respe.individual_id = respi.id
                join pim_position resppos on respep.position_id = resppos.id
                left join amb.md_ambulance_call cal on cal.brg_id = srtj.id and cal.to_time is null
                left join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history
                where call_id = cal.id order by date_time DESC, id desc limit 1) and mash.state_id in (4,5,6,7,8,9)
                left join amb.md_ambulance_call_state macs on macs.id = mash.state_id

                where tk.code = '1' and (srtj.edate is null or srtj.edate > now()) and cal.call_type_id in (4)

                union

                select
                srtj.id as id
                , cast(null as integer) as brg_id
                , srtj.id as emp_id
                , 'АМБ' as name
                ,ppos.organization_id as org
                , ppos.department_id as dep
                , mac.id as change
                , to_char(cast(mac.from_data + mac.from_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as chb
                , to_char(cast(mac.to_data + mac.to_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as che
                , case when srtj.edate is null then false else true end as is_edate

                , 'text-error' as color
                , srtj.id as resId
                , pep.id||': '||pi.surname||' '||left(initcap(pi.name),1)||'. '||left(initcap(pi.patr_name),1)||'.' as
                resName
                , pep.id||': '||pi.surname||' '||left(initcap(pi.name),1)||'.
                '||left(initcap(pi.patr_name),1)||'.'||'('||ppos.name||')' as resNamepos
                , cal.id as call_id
                , cal.call_kind_id as call_kind
                , cal.call_number as call_num
                <!--, cal.address_id as addr-->
                <!--, case when cal.address_id is not null then adr__get_element_as_text(cal.address_id,'(6,s,0)(7,s,0)(8,s,0)')||cal.description||cal.call_place_note-->
                <!--else cal.description||cal.call_place_note end as addr-->
                ,concat (adr__get_element_as_text(cal.address_id, '(6,s,1)(7,s,1)(8,s,1)'),',
                ',adr__get_element_as_text(cal.address_id, '(4,s,0)'),' ',cal.description,' ' ||cal.call_place_note) as
                addr
                <!--, to_char(mash.date_time,'hh24:mi') as starttime-->
                , mash.date_time as starttime
                , macs.id as statId
                , macs.name as statName
                ,to_char(cast(mash.date_time + (select control_time from amb.md_ambulance_call_time_control where
                job_status_id = 2 and clinic_id = ppos.organization_id) as timestamp WITHOUT TIME ZONE),'hh24:mi') as
                control_time
                ,case when now() > cast(mash.date_time + (select control_time from amb.md_ambulance_call_time_control
                where job_status_id = 2 and clinic_id = ppos.organization_id) as timestamp WITHOUT TIME ZONE)
                then true
                else false
                end as is_contrTime
                ,case when now() > srtj.planned_edate then 'Смена работы бригады закончилась' else '' end as end_text

                ,'' as onedoc_text

                ,(select count(*) from amb.md_ambulance_call where emp_id = srtj.id) as call_count

                , (select id from md_profile where e_code = '97') as prof_id
                , (select name from md_profile where e_code = '97') as prof_name
                , 1 as amb_prof_id
                , 'Терапия' as amb_prof_name

                <!--, amb.search_call_state_state(cal.id) as state_id-->
                ,(select state_id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id
                desc limit 1) as state_id
                , true as is_amb
                , case when (select count(*) from amb.md_ambulance_call_note where call_id =cal.id and note_type = true
                and note_active = true and note_id in (11)) > 0
                then true
                else false
                end as has_note_city
                , case when amb.search_call_note(cal.id) like ('А') then true
                when amb.search_call_note(cal.id) like ('А,%') then true
                when amb.search_call_note(cal.id) like ('%, А,%') then true
                when amb.search_call_note(cal.id) like ('%, А') then true
                else false
                end as has_alcohol
                , case when amb.search_call_note(cal.id) like ('%ДТП%') then true else false end as has_road_acc
                , case when amb.search_call_note(cal.id) like ('%ПОЖ%') then true else false end as has_fire
                , case when amb.search_call_note(cal.id) like ('%К%') then true else false end as has_crime
                , case when amb.search_call_note(cal.id) like ('%ОПАС%') then true else false end as has_danger
                , case when amb.search_call_note(cal.id) like ('П') then true
                when amb.search_call_note(cal.id) like ('П,%') then true
                when amb.search_call_note(cal.id) like ('%, П,%') then true
                when amb.search_call_note(cal.id) like ('%, П') then true
                else false end as has_psycho
                , case when (select count(cn.id) from amb.md_ambulance_call_note cn where cn.call_id = cal.id) >0 then true else false end as has_note
                from amb.sr_res_team_job_resourse srtj
                join pim_employee_position_resource pepr on pepr.id = srtj.resource_id
                join pim_employee_position pep on pep.id = pepr.employee_position_id
                join pim_employee pe on pe.id = pep.employee_id
                join pim_individual pi on pi.id = pe.individual_id
                join pim_position ppos on ppos.id = pep.position_id

                join amb.md_ambulance_change mac on mac.id = srtj.change_id

                join amb.md_ambulance_call cal on cal.emp_id = srtj.id and cal.to_time is null
                join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history where
                call_id = cal.id order by date_time DESC, id desc limit 1) and mash.state_id = 7
                <!--amb.search_call_state_hist(cal.id)-->
                left join amb.md_ambulance_call_state macs on macs.id = mash.state_id
                where cal.brg_id is null
                ) as brg

                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from
                (select
                srtj.id as id
                ,srtj.id as brg_id
                ,cast(null as integer) as emp_id
                , srg.name as name
                , srg.org_id as org
                , pd.id as dep
                , mac.id as change
                , to_char(cast(mac.from_data + mac.from_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as chb
                , to_char(cast(mac.to_data + mac.to_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as che
                , case when srtj.edate is null then false else true end as is_edate
                , srtjs.color as color
                , srtjr.id as resId
                , respep.id||': '||respi.surname||' '||left(initcap(respi.name),1)||'.
                '||left(initcap(respi.patr_name),1)||'.' as resName
                , respep.id||': '||respi.surname||' '||left(initcap(respi.name),1)||'.
                '||left(initcap(respi.patr_name),1)||'.'||'('||resppos.name||')' as resNamepos
                , cal.id as call_id
                , cal.call_kind_id as call_kind
                , cal.call_number as call_num
                <!--, cal.address_id as addr-->
                <!--, case when cal.address_id is not null then adr__get_element_as_text(cal.address_id,'(6,s,0)(7,s,0)(8,s,0)')||cal.description||cal.call_place_note-->
                <!--else cal.description||cal.call_place_note end as addr-->
                ,concat (adr__get_element_as_text(cal.address_id, '(6,s,1)(7,s,1)(8,s,1)'),',
                ',adr__get_element_as_text(cal.address_id, '(4,s,0)'),' ',cal.description,' ' ||cal.call_place_note) as
                addr
                <!--, to_char(srjsh.date_time,'hh24:mi') as starttime-->
                , srjsh.date_time as starttime
                , srtjs.id as statId
                , srtjs.name as statName
                ,to_char(case when srtjs.id in (2,4,5) then cast(srjsh.date_time + tcontr.control_time as timestamp
                WITHOUT TIME ZONE) end,'hh24:mi') as control_time
                ,case when srtjs.id in (4,5) then
                case when now() > cast(srjsh.date_time + tcontr.control_time as timestamp WITHOUT TIME ZONE)
                then true
                else false end
                end as is_contrTime
                ,case when now() > srtj.planned_edate then 'Смена работы бригады закончилась' else '' end as end_text
                , case when case when amb.team_job_is_created(srtj.id) in (1,2) then '+' else '' end ='' then 'Бригада
                без врача' else '' end as onedoc_text
                ,(select count(*) from amb.md_ambulance_call where brg_id = srtj.id) as call_count
                , mp.id as prof_id
                , mp.name as prof_name
                , ap.id as amb_prof_id
                , ap.name as amb_prof_name
                <!--, amb.search_call_state_state(cal.id) as state_id-->
                ,(select state_id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id
                desc limit 1) as state_id
                , false as is_amb
                from amb.sr_res_team_job srtj
                join amb.sr_res_team srt on srt.id = srtj.team_id
                join sr_res_group srg on srt.resource_id = srg.id

                join pim_department pd on srg.department_id = pd.id
                left join amb.sr_res_team_template srtt on srt.team_template_id = srtt.id
                join amb.md_ambulance_team_kind tk on srt.team_kind_id = tk.id

                left join amb.sr_res_team_template_profile ttp on srtt.id = ttp.team_template_id
                <!--left join md_profile mp on ttp.profile_id = mp.id-->
                left join public.sr_res_group_profile srgp on srgp.res_group_id = srg.id
                left join public.md_profile mp on mp.id = srgp.profile_id
                left join public.md_resgroup_amb_profile rap on srt.resource_id = rap.id
                left join public.md_ambulance_profile ap on rap.profile_id = ap.id

                join amb.md_ambulance_change mac on srtj.change_id = mac.id

                join amb.sr_res_team_job_status_history srjsh on srjsh.id = (select id from
                amb.sr_res_team_job_status_history where team_job_id = srtj.id order by date_time DESC, id desc limit 1)
                <!--amb.search_team_job_status(srtj.id)-->
                join amb.sr_res_team_job_status srtjs on srtjs.id = srjsh.job_status_id
                left join amb.md_ambulance_call_time_control tcontr on srtjs.id = tcontr.job_status_id and
                tcontr.clinic_id = srg.org_id

                join amb.sr_res_team_job_resourse srtjr on srtjr.team_job_id = srtj.id and srtjr.is_head is true and
                srtjr.deviation_id is null
                join sr_resource sr on srtjr.resource_id = sr.id

                join pim_employee_position_resource pepr on sr.id = pepr.id
                join pim_employee_position respep on pepr.employee_position_id = respep.id
                join pim_employee respe on respep.employee_id = respe.id
                join pim_individual respi on respe.individual_id = respi.id
                join pim_position resppos on respep.position_id = resppos.id
                left join amb.md_ambulance_call cal on cal.brg_id = srtj.id and cal.to_time is null and cal.call_type_id in (4)
                left join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history
                where call_id = cal.id order by date_time DESC, id desc limit 1) and mash.state_id in (4,5,6,7,8,9)
                left join amb.md_ambulance_call_state macs on macs.id = mash.state_id

                where tk.code = '1' and (srtj.edate is null or srtj.edate > now())

                union

                select
                srtj.id + 1000 as id
                ,srtj.id as brg_id
                ,cast(null as integer) as emp_id
                , srg.name as name
                , srg.org_id as org
                , pd.id as dep
                , mac.id as change
                , to_char(cast(mac.from_data + mac.from_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as chb
                , to_char(cast(mac.to_data + mac.to_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as che
                , case when srtj.edate is null then false else true end as is_edate
                , srtjs.color as color
                , srtjr.id as resId
                , respep.id||': '||respi.surname||' '||left(initcap(respi.name),1)||'.
                '||left(initcap(respi.patr_name),1)||'.' as resName
                , respep.id||': '||respi.surname||' '||left(initcap(respi.name),1)||'.
                '||left(initcap(respi.patr_name),1)||'.'||'('||resppos.name||')' as resNamepos
                , cal.id as call_id
                , cal.call_kind_id as call_kind
                , cal.call_number as call_num
                <!--, cal.address_id as addr-->
                <!--, case when cal.address_id is not null then adr__get_element_as_text(cal.address_id,'(6,s,0)(7,s,0)(8,s,0)')||cal.description||cal.call_place_note-->
                <!--else cal.description||cal.call_place_note end as addr-->
                ,concat (adr__get_element_as_text(cal.address_id, '(6,s,1)(7,s,1)(8,s,1)'),',
                ',adr__get_element_as_text(cal.address_id, '(4,s,0)'),' ',cal.description,' ' ||cal.call_place_note) as
                addr
                <!--, to_char(srjsh.date_time,'hh24:mi') as starttime-->
                , srjsh.date_time as starttime
                , srtjs.id as statId
                , srtjs.name as statName
                ,to_char(case when srtjs.id in (2,4,5) then cast(srjsh.date_time + tcontr.control_time as timestamp
                WITHOUT TIME ZONE) end,'hh24:mi') as control_time
                ,case when srtjs.id in (4,5) then
                case when now() > cast(srjsh.date_time + tcontr.control_time as timestamp WITHOUT TIME ZONE)
                then true
                else false end
                end as is_contrTime
                ,case when now() > srtj.planned_edate then 'Смена работы бригады закончилась' else '' end as end_text
                , case when case when amb.team_job_is_created(srtj.id) in (1,2) then '+' else '' end ='' then 'Бригада
                без врача' else '' end as onedoc_text
                ,(select count(*) from amb.md_ambulance_call where brg_id = srtj.id) as call_count
                , mp.id as prof_id
                , mp.name as prof_name
                , ap.id as amb_prof_id
                , ap.name as amb_prof_name
                <!--, amb.search_call_state_state(cal.id) as state_id-->
                ,(select state_id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id
                desc limit 1) as state_id
                , false as is_amb
                from amb.sr_res_team_job srtj
                join amb.sr_res_team srt on srt.id = srtj.team_id
                join sr_res_group srg on srt.resource_id = srg.id

                join pim_department pd on srg.department_id = pd.id
                left join amb.sr_res_team_template srtt on srt.team_template_id = srtt.id
                join amb.md_ambulance_team_kind tk on srt.team_kind_id = tk.id

                left join amb.sr_res_team_template_profile ttp on srtt.id = ttp.team_template_id
                <!--left join md_profile mp on ttp.profile_id = mp.id-->
                left join public.sr_res_group_profile srgp on srgp.res_group_id = srg.id
                left join public.md_profile mp on mp.id = srgp.profile_id
                left join public.md_resgroup_amb_profile rap on srt.resource_id = rap.id
                left join public.md_ambulance_profile ap on rap.profile_id = ap.id

                join amb.md_ambulance_change mac on srtj.change_id = mac.id

                join amb.sr_res_team_job_status_history srjsh on srjsh.id = (select id from
                amb.sr_res_team_job_status_history where team_job_id = srtj.id order by date_time DESC, id desc limit 1)
                <!--amb.search_team_job_status(srtj.id)-->
                join amb.sr_res_team_job_status srtjs on srtjs.id = srjsh.job_status_id
                left join amb.md_ambulance_call_time_control tcontr on srtjs.id = tcontr.job_status_id and
                tcontr.clinic_id = srg.org_id

                join amb.sr_res_team_job_resourse srtjr on srtjr.team_job_id = srtj.id and srtjr.is_head is true and
                srtjr.deviation_id is null
                join sr_resource sr on srtjr.resource_id = sr.id

                join pim_employee_position_resource pepr on sr.id = pepr.id
                join pim_employee_position respep on pepr.employee_position_id = respep.id
                join pim_employee respe on respep.employee_id = respe.id
                join pim_individual respi on respe.individual_id = respi.id
                join pim_position resppos on respep.position_id = resppos.id
                left join amb.md_ambulance_call cal on cal.brg_id = srtj.id and cal.to_time is null and cal.call_type_id in (4)
                left join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history
                where call_id = cal.id order by date_time DESC, id desc limit 1) and mash.state_id in (4,5,6,7,8,9)
                left join amb.md_ambulance_call_state macs on macs.id = mash.state_id

                where tk.code = '1' and (srtj.edate is null or srtj.edate > now())

                union

                select
                srtj.id as id
                , cast(null as integer) as brg_id
                , srtj.id as emp_id
                , 'АМБ' as name
                ,ppos.organization_id as org
                , ppos.department_id as dep
                , mac.id as change
                , to_char(cast(mac.from_data + mac.from_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as chb
                , to_char(cast(mac.to_data + mac.to_time as TIMESTAMP),'dd.mm.yyyy hh24:mi') as che
                , case when srtj.edate is null then false else true end as is_edate

                , 'text-error' as color
                , srtj.id as resId
                , pep.id||': '||pi.surname||' '||left(initcap(pi.name),1)||'. '||left(initcap(pi.patr_name),1)||'.' as
                resName
                , pep.id||': '||pi.surname||' '||left(initcap(pi.name),1)||'.
                '||left(initcap(pi.patr_name),1)||'.'||'('||ppos.name||')' as resNamepos
                , cal.id as call_id
                , cal.call_kind_id as call_kind
                , cal.call_number as call_num
                <!--, cal.address_id as addr-->
                <!--, case when cal.address_id is not null then adr__get_element_as_text(cal.address_id,'(6,s,0)(7,s,0)(8,s,0)')||cal.description||cal.call_place_note-->
                <!--else cal.description||cal.call_place_note end as addr-->
                ,concat (adr__get_element_as_text(cal.address_id, '(6,s,1)(7,s,1)(8,s,1)'),',
                ',adr__get_element_as_text(cal.address_id, '(4,s,0)'),' ',cal.description,' ' ||cal.call_place_note) as
                addr
                <!--, to_char(mash.date_time,'hh24:mi') as starttime-->
                , mash.date_time as starttime
                , macs.id as statId
                , macs.name as statName
                ,to_char(cast(mash.date_time + (select control_time from amb.md_ambulance_call_time_control where
                job_status_id = 2 and clinic_id = ppos.organization_id) as timestamp WITHOUT TIME ZONE),'hh24:mi') as
                control_time
                ,case when now() > cast(mash.date_time + (select control_time from amb.md_ambulance_call_time_control
                where job_status_id = 2 and clinic_id = ppos.organization_id) as timestamp WITHOUT TIME ZONE)
                then true
                else false
                end as is_contrTime
                ,case when now() > srtj.planned_edate then 'Смена работы бригады закончилась' else '' end as end_text

                ,'' as onedoc_text

                ,(select count(*) from amb.md_ambulance_call where emp_id = srtj.id) as call_count

                , (select id from md_profile where e_code = '97') as prof_id
                , (select name from md_profile where e_code = '97') as prof_name
                , 1 as amb_prof_id
                , 'Терапия' as amb_prof_name

                <!--, amb.search_call_state_state(cal.id) as state_id-->
                ,(select state_id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id
                desc limit 1) as state_id
                , true as is_amb
                from amb.sr_res_team_job_resourse srtj
                join pim_employee_position_resource pepr on pepr.id = srtj.resource_id
                join pim_employee_position pep on pep.id = pepr.employee_position_id
                join pim_employee pe on pe.id = pep.employee_id
                join pim_individual pi on pi.id = pe.individual_id
                join pim_position ppos on ppos.id = pep.position_id

                join amb.md_ambulance_change mac on mac.id = srtj.change_id

                join amb.md_ambulance_call cal on cal.emp_id = srtj.id and cal.to_time is null
                join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history where
                call_id = cal.id order by date_time DESC, id desc limit 1) and mash.state_id = 7
                <!--amb.search_call_state_hist(cal.id)-->
                left join amb.md_ambulance_call_state macs on macs.id = mash.state_id ) as brg

                where :where
            </n2o:count-query>
            <n2o:alias>brg</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <expression>id</expression>
        </field>
        <field>
            <id>brg.id</id>
            <domain>integer</domain>
            <name>Бригада</name>
            <expression>brg_id</expression>
        </field>
        <field>
            <id>emp.id</id>
            <domain>integer</domain>
            <name>Сотрудник</name>
            <expression>emp_id</expression>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <name>Бригада</name>
            <expression>name</expression>
            <search>upper(name) like upper('%'||:name||'%')</search>
            <!--<search unavailable="true"/>-->
        </field>
        <field>
            <id>station.id</id>
            <domain>integer</domain>
            <expression>org</expression>
            <search value="#{org.id?}"/>
        </field>
        <field>
            <id>substation.id</id>
            <domain>integer</domain>
            <expression>dep</expression>
        </field>
        <!--График бригады-->
        <field>
            <id>change.id</id>
            <domain>integer</domain>
            <name>Смена</name>
            <expression>change</expression>
        </field>
        <field>
            <id>change.data</id>
            <domain>date</domain>
            <name>Смена</name>
            <expression>chb</expression>
        </field>
        <field>
            <id>change.from_dt</id>
            <domain>date</domain>
            <name>Начало</name>
            <expression>chb</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>change.to_dt</id>
            <domain>date</domain>
            <name>Окончание</name>
            <expression>che</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>is_edate</id>
            <domain>boolean</domain>
            <expression>is_edate</expression>
            <!--<search unavailable="true"/>-->
        </field>

        <field>
            <id>jscolor.id</id>
            <domain>string</domain>
            <name>Цвет</name>
            <expression>color</expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>team_job_resource.id</id>
            <domain>integer</domain>
            <expression>resId</expression>
        </field>
        <field>
            <id>team_job_resource.name</id>
            <domain>string</domain>
            <name>Старший</name>
            <expression>resName</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>team_job_resource.res_name</id>
            <domain>string</domain>
            <name>Старший</name>
            <expression>resNamepos</expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>call.id</id>
            <domain>integer</domain>
            <expression>call_id</expression>
        </field>
        <field>
            <id>call_kind.id</id>
            <domain>integer</domain>
            <expression>call_kind</expression>
        </field>
        <field>
            <id>call.number</id>
            <domain>integer</domain>
            <name>Вызов</name>
            <expression>call_num</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>subst_addr</id>
            <domain>string</domain>
            <expression>
                case when exists (select pda.addr_id
                from md_department_address pda
                left join address_element_data aed on aed.id = pda.addr_id
                where pda.dep_id = dep and pda.is_display = true limit 1)
                then (select pda.addr_id
                from md_department_address pda
                left join address_element_data aed on aed.id = pda.addr_id
                where pda.dep_id = dep and pda.is_display = true limit 1)
                else
                (select ppa.addr_id
                from pim_party_address ppa
                join pim_party_addr_to_addr_type ppatat on ppa.id = ppatat.party_address_id and ppatat.address_type_id =
                6
                join address_element_data aed on ppa.addr_id = aed.id
                where ppa.party_id = org and ppa.is_valid = true)
                end
            </expression>
        </field>
        <field>
            <id>address</id>
            <domain>string</domain>
            <name>Адрес</name>
            <!--<expression>adr__get_element_as_text(addr,'(6,s,0)(7,s,0)(8,s,0)')</expression>-->
            <expression>
                case when statId = 7
                then :subst_addr
                else addr
                end
            </expression>
            <search unavailable="true"/>
        </field>


        <field>
            <id>stat_time</id>
            <domain>time</domain>
            <!--<name>Время назначения последнего состояния</name>-->
            <name>Время</name>
            <expression>starttime</expression>
            <display>to_char(starttime,'hh24:mi')</display>
            <search unavailable="true"/>
        </field>
        <field>
            <id>job_status.id</id>
            <domain>integer</domain>
            <expression>statId</expression>
        </field>
        <field>
            <id>job_status.name</id>
            <domain>string</domain>
            <name>Состояние</name>
            <expression>statName</expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>control_time</id>
            <domain>time</domain>
            <name>Контр.</name>
            <expression>
                control_time
            </expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>is_control_time</id>
            <domain>boolean</domain>
            <!--<name>Контр.</name>-->
            <expression>is_contrTime</expression>
            <search unavailable="true"/>
        </field>


        <field>
            <id>endmes</id>
            <domain>string</domain>
            <expression>end_text</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>readymes</id>
            <domain>string</domain>
            <expression>onedoc_text</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>brg_call</id>
            <domain>integer</domain>
            <name>Кол-во вызовов</name>
            <display>
                call_count
            </display>
            <search unavailable="true"/>
        </field>

        <field>
            <id>md_profile.id</id>
            <domain>integer</domain>
            <expression>prof_id</expression>
        </field>
        <field>
            <id>md_profile.name</id>
            <domain>string</domain>
            <name>Мед. профиль</name>
            <expression>prof_name</expression>
        </field>
        <field>
            <id>amb_profile.id</id>
            <domain>integer</domain>
            <expression>amb_prof_id</expression>
        </field>
        <field>
            <id>amb_profile.name</id>
            <domain>string</domain>
            <name>Профиль бригады</name>
            <expression>amb_prof_name</expression>
        </field>
        <field>
            <id>last_state</id>
            <domain>integer</domain>
            <name>Крайнее состояние</name>
            <expression>state_id</expression>
        </field>
        <field>
            <id>is_amb</id>
            <domain>boolean</domain>
            <expression>is_amb</expression>
        </field>

        <field>
            <id>par_id</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search unavailable="true"/>
            <sorting unavailable="true"/>
        </field>

        <field>
            <id>has_note_city</id>
            <domain>boolean</domain>
            <expression>has_note_city</expression>
        </field>

        <field>
            <id>has_alcohol</id>
            <domain>boolean</domain>
            <expression>has_alcohol</expression>
        </field>

        <field>
            <id>alco_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '22')
            </expression>
        </field>

        <field>
            <id>alco_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '22')
            </expression>
        </field>

        <field>
            <id>has_road_acc</id>
            <domain>boolean</domain>
            <expression>has_road_acc</expression>
        </field>

        <field>
            <id>road_acc_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '3')
            </expression>
        </field>

        <field>
            <id>road_acc_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '3')
            </expression>
        </field>

        <field>
            <id>has_fire</id>
            <domain>boolean</domain>
            <expression>has_fire</expression>
        </field>

        <field>
            <id>fire_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '5')
            </expression>
        </field>

        <field>
            <id>fire_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '5')
            </expression>
        </field>

        <field>
            <id>has_crime</id>
            <domain>boolean</domain>
            <expression>has_crime</expression>
        </field>

        <field>
            <id>crime_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '6')
            </expression>
        </field>

        <field>
            <id>crime_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '6')
            </expression>
        </field>

        <field>
            <id>has_danger</id>
            <domain>boolean</domain>
            <expression>has_danger</expression>
        </field>

        <field>
            <id>danger_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '12')
            </expression>
        </field>

        <field>
            <id>danger_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '12')
            </expression>
        </field>

        <field>
            <id>has_psycho</id>
            <domain>boolean</domain>
            <expression>has_psycho</expression>
        </field>

        <field>
            <id>psycho_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '15')
            </expression>
        </field>

        <field>
            <id>psycho_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '15')
            </expression>
        </field>

        <field>
            <id>has_note</id>
            <domain>boolean</domain>
            <expression>has_note</expression>
        </field>

    </fields>
</query>