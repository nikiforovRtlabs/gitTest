<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>callqueue</id>-->
    <name>Очередь</name>
    <object-id>callqueue</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from amb.md_ambulance_call cal
                join amb.md_ambulance_change mac on mac.id = cal.call_dt
                join amb.md_ambulance_call_kind ck on ck.id = cal.call_kind_id
                left join amb.md_ambulance_caller_reason cr on cr.id = cal.caller_reason_id
                left join public.md_profile reaprof on reaprof.id = cr.profile_id
                left join public.md_diagnosis dia on dia.id = cal.reason_diag
                left join public.md_diagnosis_profile mdp on mdp.diagnosis_id = dia.id
                left join public.md_profile diaprof on diaprof.id = mdp.profile_id

                left join address_element ael on ael.id = cal.address_id
                left join address_element_type aet on aet.id = ael.type_id

                left join pim_individual pip on pip.id = cal.patient_id
                left join pim_gender pg on pg.id = pip.gender_id

                left join amb.md_ambulance_priority ap on ap.id = cal.priority_id
                join pim_employee_position pep on pep.id = cal.registrator_id
                join pim_employee pe on pe.id = pep.employee_id
                join pim_individual pi on pi.id = pe.individual_id
                join pim_position ppos on ppos.id = pep.position_id
                join pim_organization po on po.id = cal.station_id
                left join amb.md_ambulance_route rou on cal.route_id = rou.id
                join pim_department pd on pd.id = cal.substation_id
                join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id desc limit 1)
                join amb.md_ambulance_call_state macs on macs.id = mash.state_id
                <!--left join amb.md_ambulance_call_note macn on cal.id = macn.call_id-->

                left join amb.md_ambulance_call_result calres on cal.id = calres.id
                <!--left join sr_srv_rendered ssr on calres.srv_rendered_id = ssr.id-->

                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from amb.md_ambulance_call cal
                join amb.md_ambulance_change mac on mac.id = cal.call_dt
                join amb.md_ambulance_call_kind ck on ck.id = cal.call_kind_id
                left join amb.md_ambulance_caller_reason cr on cr.id = cal.caller_reason_id
                left join public.md_profile reaprof on reaprof.id = cr.profile_id
                left join public.md_diagnosis dia on dia.id = cal.reason_diag
                left join public.md_diagnosis_profile mdp on mdp.diagnosis_id = dia.id
                left join public.md_profile diaprof on diaprof.id = mdp.profile_id

                left join address_element ael on ael.id = cal.address_id
                left join address_element_type aet on aet.id = ael.type_id

                left join pim_individual pip on pip.id = cal.patient_id
                left join pim_gender pg on pg.id = pip.gender_id

                left join amb.md_ambulance_priority ap on ap.id = cal.priority_id
                join pim_employee_position pep on pep.id = cal.registrator_id
                join pim_employee pe on pe.id = pep.employee_id
                join pim_individual pi on pi.id = pe.individual_id
                join pim_position ppos on ppos.id = pep.position_id
                join pim_organization po on po.id = cal.station_id
                left join amb.md_ambulance_route rou on cal.route_id = rou.id
                join pim_department pd on pd.id = cal.substation_id
                join amb.md_ambcall_state_history mash on mash.id = (select id from amb.md_ambcall_state_history where call_id = cal.id order by date_time DESC, id desc limit 1)
                join amb.md_ambulance_call_state macs on macs.id = mash.state_id
                <!--left join amb.md_ambulance_call_note macn on cal.id = macn.call_id-->

                left join amb.md_ambulance_call_result calres on cal.id = calres.id
                <!--left join sr_srv_rendered ssr on calres.srv_rendered_id = ssr.id-->

                where :where
            </n2o:count-query>
            <n2o:alias>cal</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <expression>cal.id</expression>
            <search>cal.id = :id</search>
        </field>

        <field>
            <id>number</id>
            <domain>integer</domain>
            <name>№</name>
            <expression>cal.call_number</expression>
        </field>
        <field>
            <id>change.id</id>
            <domain>integer</domain>
            <expression>mac.id</expression>
        </field>
        <field>
            <id>change.date</id>
            <domain>date</domain>
            <name>Смена</name>
            <expression>mac.from_data</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>change_date</id>
            <domain>string</domain>
            <name>Смена</name>
            <expression>to_char(mac.from_data,'DD.MM.YYYY')</expression>
        </field>
        <field>
            <id>call_kind.id</id>
            <domain>integer</domain>
            <expression>ck.id</expression>
        </field>
        <field>
            <id>call_kind.name</id>
            <domain>string</domain>
            <name>Вид вызова</name>
            <expression>ck.name</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>call_kind.code</id>
            <domain>string</domain>
            <name>Вид</name>
            <expression>ck.code</expression>
            <search unavailable="true"/>
        </field>
        <!--<field>-->
            <!--<id>call_type.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>act.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>call_type.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Тип вызова</name>-->
            <!--<expression>act.name</expression>-->
        <!--</field>-->
        <field>
            <id>from_time</id>
            <domain>time</domain>
            <name>Время приема вызова</name>
            <!--<expression>to_char(cal.from_time,'dd.mm.yyyy hh24:mi:ss')</expression>-->
            <expression>cal.from_time</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>ftime</id>
            <domain>string</domain>
            <name>Принят</name>
            <expression>to_char(cal.from_time,'hh24:mi')</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>from_dt</id>
            <domain>string</domain>
            <name>Принят</name>
            <expression>to_char(cal.from_time,'dd.mm.yyyy')</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>ffrom_dt</id>
            <domain>date</domain>
            <name>Принят с</name>
            <expression>to_char(cal.from_time,'dd.mm.yyyy')</expression>
            <search><![CDATA[
                cast(cal.from_time as date) >= :ffrom_dt
                ]]>
            </search>
            <search unavailable="true"/>
        </field>
        <field>
            <id>tfrom_dt</id>
            <domain>date</domain>
            <name>Принят по</name>
            <expression>to_char(cal.from_time,'dd.mm.yyyy')</expression>
            <search><![CDATA[
                cast(cal.from_time as date) <= :tfrom_dt
                ]]>
            </search>
            <search unavailable="true"/>
        </field>
        <field>
            <id>to_time</id>
            <domain>time</domain>
            <name>Время окончания вызова</name>
            <expression>to_char(cal.to_time,'hh24:mi')</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>time</id>
            <!--<domain>time</domain>-->
            <domain>string</domain>
            <name>Дл-ть</name>
            <!--<expression>case when cal.to_time is null then cast((now() - mash.date_time) as time) else null end</expression>-->
            <!--<expression>case when cal.to_time is null then to_char(cast((now() - mash.date_time) as time),"HH24:mi") else null end</expression>-->
            <expression>
                <![CDATA[
                case when (cal.call_type_id = 3)
                    then
                        case when (cal.from_time + cast(cast(calres.need_exit_through as varchar (2))||' hour' as INTERVAL) - now() > '00:00:00')
                            then
                                '-'||to_char(cal.from_time + cast(cast(calres.need_exit_through as varchar (2))||' hour' as INTERVAL) - now(),'hh24:mi')
                            else
                                to_char(now() - (cal.from_time + cast(cast(calres.need_exit_through as varchar (2))||' hour' as INTERVAL)),'HH24:mi')
                        end
                    else
                        case when cal.to_time is null then to_char(now() - mash.date_time,'HH24:mi') else null end
                end
                ]]>
            </expression>
            <!--<expression>case when cal.to_time is null then to_timestamp(now() - mash.date_time,'HH24:mi') else null end</expression>-->
            <search unavailable="true"/>
        </field>
        <field>
            <id>time_color</id>
            <domain>boolean</domain>
            <!--<domain>string</domain>-->
            <expression>
                case when (cal.call_type_id = 3) and (cal.from_time + cast(cast(calres.need_exit_through as varchar (2))||' hour' as INTERVAL) - now() > '00:00:00')
                    then
                        true
                    else
                        false
                end
            </expression>
            <!--<expression>-->
                <!--case when cal.call_type_id = 3-->
                    <!--then-->
                        <!--'muted'-->
                    <!--else-->
                        <!--'text'-->
                <!--end-->
            <!--</expression>-->
            <search unavailable="true"/>
            <sorting unavailable="true"/>
        </field>
        <field>
            <id>calltime</id>
            <domain>time</domain>
            <name>Время обслуживания</name>
            <expression>case when cal.to_time is not null then cast((cal.to_time - cal.from_time) as time) else null end</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>caller_reason.id</id>
            <domain>integer</domain>
            <expression>cr.id</expression>
        </field>
        <field>
            <id>caller_reason.name</id>
            <domain>string</domain>
            <name>Повод</name>
            <expression>cr.name</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>diagnosis.id</id>
            <domain>integer</domain>
            <expression>dia.id</expression>
        </field>
        <field>
            <id>diagnosis.name</id>
            <domain>string</domain>
            <name>Диагноз</name>
            <expression>dia.name</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>reason</id>
            <domain>string</domain>
            <name>Повод</name>
            <expression>coalesce(dia.name,cr.name)</expression>
        </field>
        <field>
            <id>reason_note</id>
            <domain>string</domain>
            <name>Дополнительный повод</name>
            <expression>cal.reason_note</expression>
        </field>
        <field>
            <id>is_group</id>
            <domain>boolean</domain>
            <name>К группе пострадавших</name>
            <expression>cal.is_group_sufferer</expression>
        </field>
        <field>
            <id>sum_sufferer</id>
            <domain>integer</domain>
            <name>Количество пострадавших</name>
            <expression>cal.sum_sufferer</expression>
        </field>
        <!--<field>-->
            <!--<id>call_place.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>pl.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>call_place.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Место вызова</name>-->
            <!--<expression>pl.name</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>place_note</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Место вызова: примечания</name>-->
            <!--<expression>cal.call_place_note</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>org.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>plorg.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>org.full_name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Организация места вызова</name>-->
            <!--<expression>plorg.full_name</expression>-->
            <!--<search unavailable="true"/>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>department.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>pldep.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>department.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Подразделение места вызова</name>-->
            <!--<expression>pldep.name</expression>-->
        <!--</field>-->

                <!--<field>-->
                    <!--<id>myAddress.id</id>-->
                    <!--<domain>integer</domain>-->
                    <!--<expression>ael.id</expression>-->
                <!--</field>-->

        <field>
            <id>adressId</id>
            <domain>integer</domain>
            <expression>cal.address_id</expression>
        </field>
        <field>
            <id>address</id>
            <domain>string</domain>
            <name>Адрес вызова</name>
            <!--<expression>concat (adr__get_element_as_text(cal.address_id, '(4,s,0)(6,s,1)(7,s,1)(8,s,1)'),adr__get_element_as_text(cal.address_id, '(2,s,0)'))</expression>-->
            <!--<search>upper(:expression) like upper('%'||:address||'%')</search>-->
            <!--<expression>coalesce(adr__get_element_as_text(cal.address_id,'(2,s,0)(4,s,0)(6,s,0)(7,s,0)(8,s,0)'),cal.description)</expression>-->
            <expression>coalesce(adr__get_element_as_text(cal.address_id,'(6,s,0)(7,s,0)(8,s,0)'),cal.description)</expression>
        </field>


        <field>
            <id>house</id>
            <domain>string</domain>
            <name>Дом</name>
        </field>
        <field>
            <id>housing</id>
            <domain>string</domain>
            <name>Корпус</name>
        </field>
        <field>
            <id>apartment</id>
            <domain>string</domain>
            <name>Квартира</name>
        </field>
        <field>
            <id>porch</id>
            <domain>string\</domain>
            <name>Подъезд</name>
        </field>
        <field>
            <id>floor</id>
            <domain>string</domain>
            <name>Этаж</name>
        </field>
        <field>
            <id>door_code</id>
            <domain>string</domain>
            <name>Код подъезда</name>
        </field>
        <field>
            <id>addr_descr</id>
            <domain>string</domain>
            <name>Адрес коментарии</name>
            <expression>cal.description</expression>
        </field>

        <!--<field>-->
            <!--<id>to_org.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>tplorg.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_org.full_name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Организация адреса доставки</name>-->
            <!--<expression>tplorg.full_name</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_department.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>tpldep.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_department.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Подразделение адреса доставки</name>-->
            <!--<expression>tpldep.name</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>to_address</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Адрес доставки</name>-->
            <!--<expression>adr__get_element_as_text(cal.to_address_id,'(1,s,0)(2,s,0)(3,s,0)(4,s,0)(5,s,0)(6,s,0)(7,s,0)(8,s,0)(9,s,0)')</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_house</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Дом</name>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_housing</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Корпус</name>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_apartment</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Квартира</name>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_porch</id>-->
            <!--<domain>string\</domain>-->
            <!--<name>Подъезд</name>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>to_addr_descr</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Адрес коментарии</name>-->
            <!--<expression>cal.to_description</expression>-->
        <!--</field>-->
        <field>
            <id>individual.id</id>
            <domain>integer</domain>
            <expression>pip.id</expression>
        </field>
        <field>
            <id>individual.indiv</id>
            <domain>string</domain>
            <name>Пациент</name>
            <expression>pip.surname||' '||pip.name||' '||pip.patr_name</expression>
            <!--<search>upper(:expression) like upper ('%'||:individual.indiv||'%')</search>-->
            <search unavailable="true"/>
        </field>
        <field>
            <id>individual.surname</id>
            <domain>string</domain>
            <name>Фамилия</name>
            <expression>pip.surname</expression>
            <search>upper(pip.surname) like upper('%'||:individual.surname||'%')</search>
            <search unavailable="true"/>
        </field>
        <field>
            <id>individual.name</id>
            <domain>string</domain>
            <name>Имя</name>
            <expression>pip.name</expression>
            <search>upper(pip.name) like upper('%'||:individual.name||'%')</search>
            <search unavailable="true"/>
        </field>
        <field>
            <id>individual.patrName</id>
            <domain>string</domain>
            <name>Отчество</name>
            <expression>pip.patr_name</expression>
            <search>upper(pip.patr_name) like upper('%'||:individual.patrName||'%')</search>
            <search unavailable="true"/>
        </field>
        <field>
            <id>individual.age</id>
            <domain>string</domain>
            <name>Возраст</name>
            <expression>case when get_age(cast (pip.birth_dt as date),cast(now() as date)) = -1 then '' else CAST(get_age(cast (pip.birth_dt as date),cast(now() as date)) as varchar(3))||' лет' end</expression>
            <!--<expression>get_age(cast (pip.birth_dt as date),cast(now() as date))</expression>-->
            <search unavailable="true"/>
        </field>
        <field>
            <id>individual.birth_dt</id>
            <domain>date</domain>
            <name>ДР</name>
            <expression>pip.birth_dt</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>patFIO</id>
            <domain>string</domain>
            <name>Пациент</name>
            <expression>pip.surname||' '||pip.name||' '||pip.patr_name||case when pip.birth_dt is not null then ' '||to_char(pip.birth_dt,'dd.mm.yyyy') else '' end</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>gender.id</id>
            <domain>integer</domain>
            <expression>pg.id</expression>
        </field>
        <field>
            <id>gender.name</id>
            <domain>string</domain>
            <name>Пол</name>
            <expression>pg.name</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>gender.names</id>
            <domain>string</domain>
            <name>Пол</name>
            <expression>
                left(lower(pg.name),1)
            </expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>chronic</id>
            <domain>boolean</domain>
            <name>Хронический</name>
            <expression>cal.is_chronic</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>age_years</id>
            <domain>integer</domain>
            <name>Возраст: лет</name>
            <expression>cal.age_years</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>age_months</id>
            <domain>integer</domain>
            <name>Возраст: мес</name>
            <expression>cal.age_months</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>age_days</id>
            <domain>integer</domain>
            <name>Возраст: дн</name>
            <expression>cal.age_days</expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>age</id>
            <domain>string</domain>
            <name>Возраст</name>
            <expression>coalesce(
                case when get_age(cast (pip.birth_dt as date),cast(now() as date)) = -1 then null else CAST(get_age(cast (pip.birth_dt as date),cast(now() as date)) as varchar(3))end
                ,cast(cal.age_years as varchar(3))
                ,cast(cal.age_months as varchar(3))
                ,cast(cal.age_days as varchar(3)))
            </expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>phone</id>
            <domain>string</domain>
            <name>Телефон</name>
            <expression>cal.phone_caller</expression>
            <search unavailable="true"/>
        </field>
        <!--<field>-->
            <!--<id>caller.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>ac.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>caller.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Вызывающий</name>-->
            <!--<expression>ac.name</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>employee_med.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>caleremp.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>employee_med.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>ФИО сотрудника</name>-->
            <!--<expression>calerind.surname||' '||left(initcap(calerind.name),1)||'. '||left(initcap(calerind.patr_name),1)||'.'</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>caller_note</id>-->
            <!--<domain>string</domain>-->
            <!--<expression>cal.caller_note</expression>-->
        <!--</field>-->
        <field>
            <id>priority.id</id>
            <domain>integer</domain>
            <expression>ap.id</expression>
        </field>
        <field>
            <id>priority.code</id>
            <domain>String</domain>
            <name>Приоритет</name>
            <expression>ap.code</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>priority.color</id>
            <domain>string</domain>
            <expression>ap.color</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>priority.name</id>
            <domain>string</domain>
            <name>Приоритет</name>
            <expression>ap.name</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>priority.number</id>
            <domain>integer</domain>
            <name>Число</name>
            <expression>ap.number</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>priorNum</id>
            <domain>integer</domain>
            <expression>COALESCE(cal.priority,ap.number)</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>priorityNum</id>
            <domain>integer</domain>
            <name>Приоритет(число)</name>
            <expression>cal.priority</expression>
        </field>
        <field>
            <id>note</id>
            <domain>string</domain>
            <name>Примечание</name>
            <expression>cal.note</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>pim_employee_position</id>
            <domain>integer</domain>
            <expression>pep.id</expression>
        </field>
        <field>
            <id>employee.id</id>
            <domain>string</domain>
            <name>Принял</name>
            <expression>pep.id</expression>
            <!--<display></display>-->
        </field>
        <field>
            <id>employee.full_name</id>
            <domain>string</domain>
            <name>Принял</name>
            <expression>pi.surname||' '||pi.name||' '||pi.patr_name</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>employee.name</id>
            <domain>string</domain>
            <name>Принял</name>
            <expression>pi.surname||' '||left(initcap(pi.name),1)||'. '||left(initcap(pi.patr_name),1)||'.'</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>employee.namePos</id>
            <domain>string</domain>
            <name>Принял</name>
            <expression>pi.surname||' '||left(initcap(pi.name),1)||'. '||left(initcap(pi.patr_name),1)||'.'||'('||ppos.name||')'</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>position.id</id>
            <domain>integer</domain>
            <expression>ppos.id</expression>
        </field>
        <field>
            <id>position.name</id>
            <domain>string</domain>
            <name>Должность</name>
            <expression>ppos.name</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>station.orgId</id>
            <domain>integer</domain>
            <expression>po.id</expression>
            <search value="#{org.id?}"/>
        </field>
        <field>
            <id>station.name</id>
            <domain>string</domain>
            <name>Станция</name>
            <expression>coalesce(po.short_name,po.full_name)</expression>
            <!--<search unavailable="true"/>-->
        </field>
        <field>
            <id>route.id</id>
            <domain>integer</domain>
            <expression>rou.id</expression>
        </field>
        <field>
            <id>route.name</id>
            <domain>string</domain>
            <name>Направление</name>
            <expression>rou.name</expression>
            <search unavailable="true"/>
        </field>
        <field>
            <id>substation.id</id>
            <domain>integer</domain>
            <expression>pd.id</expression>
        </field>
        <field>
            <id>substation.name</id>
            <domain>string</domain>
            <name>Подстанция</name>
            <expression>pd.name</expression>
            <search unavailable="true"/>
        </field>
                <!--<field>-->
                    <!--<id>brg.id</id>-->
                    <!--<domain>integer</domain>-->
                    <!--<expression>srg.id</expression>-->
                <!--</field>-->
                <!--<field>-->
                    <!--<id>brg.name</id>-->
                    <!--<domain>string</domain>-->
                    <!--<name>Бригада</name>-->
                    <!--<expression>srg.name</expression>-->
                <!--</field>-->

        <!--поля для расшифровки инфы по вызову-->
        <field>
            <id>descr</id>
            <domain>string</domain>
            <name>Доп.</name>
            <expression>cal.description||','||cal.note</expression>
        </field>
        <!--не надо, функция находит сразу id в истории с информацией по крайнему состоянию-->
        <field>
            <id>state_history.id</id>
            <domain>integer</domain>
            <name>Состояние</name>
            <!--<expression>amb.search_call_state_hist(cal.id)</expression>-->
            <expression>mash.id</expression>
        </field>
        <field>
            <id>state_history.datetime</id>
            <domain>string</domain>
            <name>Время назначения состояния</name>
            <expression>to_char(mash.date_time,'dd.mm.yyyy hh24:mi:ss')</expression>
        </field>
        <!--<field>-->
        <!--<id>state_history.lastId</id>-->
        <!--<domain>integer</domain>-->
        <!--<name>Крайнее состояние</name>-->
        <!--<expression>amb.search_call_state_hist(cal.id)</expression>-->
        <!--</field>-->
        <field>
            <id>call_state.id</id>
            <domain>integer</domain>
            <expression>macs.id</expression>
        </field>
        <field>
            <id>call_state.name</id>
            <domain>string</domain>
            <name>Состояние</name>
            <expression>macs.name</expression>
        </field>
        <field>
            <id>notes</id>
            <domain>string</domain>
            <name>Отм</name>
            <expression>amb.search_call_note(cal.id)</expression>
        </field>
                <!--<field>-->
                    <!--<id>note.id</id>-->
                    <!--<domain>integer</domain>-->
                    <!--<name>Отметка</name>-->
                    <!--<expression>macn.id</expression>-->
                    <!--<search>macn.id = :note.id</search>-->
                <!--</field>-->

        <!--поля фильров-->
        <!--<field>-->
            <!--<id>call_reason.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>macr.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>call_reason.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Причина вызова</name>-->
            <!--<expression>macr.name</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>reason_accident.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>mara.id</expression>-->
        <!--</field>-->
        <!--<field>-->
            <!--<id>reason_accident.name</id>-->
            <!--<domain>string</domain>-->
            <!--<name>Причина НС</name>-->
            <!--<expression>mara.name</expression>-->
        <!--</field>-->

        <!--<field>-->
            <!--<id>rendered.id</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>ssr.id</expression>-->
        <!--</field>-->

                <!--<field>-->
                    <!--<id>has_note_city</id>-->
                    <!--<domain>boolean</domain>-->
                    <!--<expression>case when ((amb.search_call_note(cal.id) like ('%01%')) or (amb.search_call_note(cal.id) like ('%02%')) or (amb.search_call_note(cal.id) like ('%03%')) or (amb.search_call_note(cal.id) like ('%04%')) or (amb.search_call_note(cal.id) like ('%В/КАНАЛ%')) or (amb.search_call_note(cal.id) like ('%ЛЕЧ/УЧ%')) or (amb.search_call_note(cal.id) like ('%МЧС%')) or (amb.search_call_note(cal.id) like ('%ПОЛИК%')) or (amb.search_call_note(cal.id) like ('%ЭПИД/СТ%')) ) then true else false end</expression>-->
                <!--</field>-->

        <field>
            <id>has_note</id>
            <domain>boolean</domain>
            <expression>
                case when (select count(cn.id) from amb.md_ambulance_call_note cn where cn.call_id = cal.id) >0 then true else false end
            </expression>
        </field>

        <field>
            <id>has_note_city</id>
            <domain>boolean</domain>
            <expression>
                case when (select count(*) from amb.md_ambulance_call_note where call_id =cal.id and note_type = true and note_active = true and note_id in (11)) > 0
                then true else false end
            </expression>
        </field>

        <field>
            <id>has_selfrefused</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%со%') then true else false end</expression>
        </field>
        <field>
            <id>has_docrefused</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%ов%') then true else false end</expression>
        </field>
        <field>
            <id>has_hosp</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%госп%') then true else false end</expression>
        </field>
        <field>
            <id>has_speedUp</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%У%') then true else false end</expression>
        </field>

        <field>
            <id>is_opened</id>
            <domain>boolean</domain>
            <!--<expression>case when (cal.to_time is null) and (cal.brg_id is null) and (cal.emp_id is null) and ((cal.call_mark is null) or (cal.call_mark = 1)) then true else false end</expression>-->
            <!--todo SNMP-130 подредактировать условие, с учетом рекомендации-->
            <expression>case when (cal.to_time is null) and (cal.brg_id is null) and (cal.emp_id is null) then true else false end</expression>
        </field>

        <field>
            <id>profile.id</id>
            <domain>integer</domain>
            <name>Профильность</name>
            <expression>coalesce(reaprof.id,diaprof.id)</expression>
        </field>
        <field>
            <id>profile.name</id>
            <domain>integer</domain>
            <name>Профильность</name>
            <expression>trim(upper(coalesce(reaprof.name,diaprof.name)))</expression>
        </field>

        <field>
            <id>processing_profile.id</id>
            <domain>integer</domain>
            <display/>
            <expression>
                <![CDATA[
                case when pip.birth_dt is not null and cast(amb.get_age_full(pip.birth_dt,cast(now() as date)) as varchar(9)) like '%day%' or cal.age_days is not null
                    then
                        (select id from md_profile where code = '55')
                    else
                        case when pip.birth_dt is not null and amb.get_age_full(pip.birth_dt,cast(now() as date))< '18 year'  or cal.age_months is not null or cal.age_years < 18
                            then
                                (select id from md_profile where code = '68')
                            else
                                coalesce(reaprof.id,diaprof.id)
                        end
                end
                ]]>
            </expression>
        </field>
        <field>
            <id>processing_profile.name</id>
            <domain>string</domain>
            <expression>
                <![CDATA[
                (select name from md_profile where id =
                    (select case when pip.birth_dt is not null and cast(amb.get_age_full(pip.birth_dt,cast(now() as date)) as varchar(9)) like '%day%' or cal.age_days is not null
                                then
                                    (select id from md_profile where code = '55')
                                else
                                    case when pip.birth_dt is not null and amb.get_age_full(pip.birth_dt,cast(now() as date))< '18 year'  or cal.age_months is not null or cal.age_years < 18
                                        then
                                            (select id from md_profile where code = '68')
                                        else
                                            coalesce(reaprof.id,diaprof.id)
                                    end
                            end)
                )
                ]]>
                <!---(select name from md_profile where id =:processing_profile.id)-->
            </expression>
        </field>

        <field>
            <id>road_acc_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '3')
            </expression>
        </field>

        <field>
            <id>road_acc_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '3')
            </expression>
        </field>

        <field>
            <id>fire_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '5')
            </expression>
        </field>

        <field>
            <id>fire_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '5')
            </expression>
        </field>

        <field>
            <id>crime_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '6')
            </expression>
        </field>

        <field>
            <id>crime_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '6')
            </expression>
        </field>

        <field>
            <id>danger_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '12')
            </expression>
        </field>

        <field>
            <id>danger_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '12')
            </expression>
        </field>

        <!--<field>-->
        <!--<id>chronic_id</id>-->
        <!--<domain>integer</domain>-->
        <!--<expression>-->
        <!--(select id from amb.md_ambulance_note where e_code = '14')-->
        <!--</expression>-->
        <!--</field>-->

        <!--<field>-->
        <!--<id>chronic_name</id>-->
        <!--<domain>string</domain>-->
        <!--<expression>-->
        <!--(select name from amb.md_ambulance_note where e_code = '14')-->
        <!--</expression>-->
        <!--</field>-->

        <field>
            <id>psycho_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '15')
            </expression>
        </field>

        <field>
            <id>psycho_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '15')
            </expression>
        </field>

        <field>
            <id>speedUp_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '7')
            </expression>
        </field>

        <field>
            <id>speedUp_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '7')
            </expression>
        </field>

        <field>
            <id>has_road_acc</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%ДТП%') then true else false end</expression>
        </field>
        <field>
            <id>has_fire</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%ПОЖ%') then true else false end</expression>
        </field>
        <field>
            <id>has_crime</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%К%') then true else false end</expression>
        </field>
        <field>
            <id>has_danger</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('%ОПАС%') then true else false end</expression>
        </field>
        <!--<field>-->
        <!--<id>has_chronic</id>-->
        <!--<domain>boolean</domain>-->
        <!--<expression>case when amb.search_call_note(cal.id) like ('%хрон%') then true else false end</expression>-->
        <!--</field>-->
        <field>
            <id>has_psycho</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('П') then true
                when amb.search_call_note(cal.id) like ('П,%') then true
                when amb.search_call_note(cal.id) like ('%, П,%') then true
                when amb.search_call_note(cal.id) like ('%, П') then true
                else false end</expression>
        </field>

        <field>
            <id>has_alcohol</id>
            <domain>boolean</domain>
            <expression>case when amb.search_call_note(cal.id) like ('А') then true
                when amb.search_call_note(cal.id) like ('А,%') then true
                when amb.search_call_note(cal.id) like ('%, А,%') then true
                when amb.search_call_note(cal.id) like ('%, А') then true
                else false end</expression>
        </field>

        <field>
            <id>is_alco</id>
            <domain>boolean</domain>
            <expression>
                case when (select count(*) from amb.md_ambulance_call_note where call_id = cal.id and note_type = true and note_active = true and note_id = 22) > 0
                then true else false end
            </expression>
        </field>

        <field>
            <id>alco_id</id>
            <domain>integer</domain>
            <expression>
                (select id from amb.md_ambulance_note where e_code = '22')
            </expression>
        </field>

        <field>
            <id>alco_name</id>
            <domain>string</domain>
            <expression>
                (select name from amb.md_ambulance_note where e_code = '22')
            </expression>
        </field>

        <field>
            <id>par_id</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search unavailable="true"/>
            <sorting unavailable="true"/>
        </field>

        <field>
            <id>actual_change.id</id>
            <domain>integer</domain>
            <name>Текущая смена</name>
            <!--<display unavailable="true"/>-->
            <expression>
                (select mac.id from amb.md_ambulance_change mac
                where mac.clinic_id = cal.station_id  and (mac.department_id is null or mac.department_id = cal.substation_id)
                and mac.state = 1
                order by mac.department_id
                limit 1)
            </expression>
        </field>
        <field>
            <id>actual_change.data</id>
            <domain>date</domain>
            <name>Cмена</name>
            <!--<display unavailable="true"/>-->
            <expression>
                (select to_char(mac.from_data,'dd.mm.yyyy') from amb.md_ambulance_change mac
                where mac.clinic_id = cal.station_id and (mac.department_id is null or mac.department_id = cal.substation_id)
                and mac.state = 1
                order by mac.department_id
                limit 1)
            </expression>
            <search unavailable="true"/>
        </field>

        <field>
            <id>last_time</id>
            <domain>string</domain>
            <expression>
                (select to_char(max(from_time),'dd.mm.yyyy HH24:mi:ss')
                    from (select from_time
                            from amb.md_ambulance_call
                            where station_id=6053897 and case when (to_time is null) and (brg_id is null) and (emp_id is null) then true else false end=true
                            group by from_time) as times
                )
            </expression>
        </field>

    </fields>
</query>