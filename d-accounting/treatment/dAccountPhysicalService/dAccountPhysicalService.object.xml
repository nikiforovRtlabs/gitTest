<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-1.0">
    <name>Услуги</name>

    <actions>
        <action id="create" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/d-accounting/dAccountService
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="account.activeCaseId" mapping="['caseId']"/>
                <param name="patientId" mapping="['patientId']"/>
                <param name="bdate" mapping="['bdate']"/>
                <param name="account.activeStepId" mapping="['stepId']"/>
                <param name="resGroupId" mapping="['resourceGroupId']"/>
                <param name="vrach.employeePositionResourceId" mapping="['doctorId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="financialType.id" mapping="['financialTypeId']"/>
                <param name="clinicId" mapping="['clinicId']"/>
                <param name="account.activePlanId" mapping="['treatmentPlanId']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="all"/>
        </action>

        <action id="update" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="PUT" >
                    ${n2o.backend.path}/d-accounting/dAccountService/{id}
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="account.activeCaseId" mapping="['caseId']"/>
                <param name="patientId" mapping="['patientId']"/>
                <param name="bdate" mapping="['bdate']"/>
                <param name="account.activeStepId" mapping="['stepId']"/>
                <param name="resGroupId" mapping="['resourceGroupId']"/>
                <param name="vrach.employeePositionResourceId" mapping="['doctorId']"/>
                <param name="service.id" mapping="['serviceId']"/>
                <param name="financialType.id" mapping="['financialTypeId']"/>
                <param name="clinicId" mapping="['clinicId']"/>
                <param name="account.activePlanId" mapping="['treatmentPlanId']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <validations activate="all"/>
        </action>

        <action id="delete" form-submit-label="Удалить" name="Удаление услуги">
            <invocation>
                <rest:rest method="DELETE">
                    ${n2o.backend.path}/hospital/medical-service?id={id}
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="nothing"/>
            <confirmation-text>Вы уверены, что хотите удалить осмотр ?</confirmation-text>
        </action>

        <action id="cancelRendered" form-submit-label="Отменить результат">
            <invocation>
                <rest:rest method="POST">
                    ${n2o.backend.path}/hospital/medical-service/cancelRendered?id={id}&amp;employeePositionUserId={employeePositionUserId}
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="employeePositionUserId" mapping="['employeePositionUserId']" value="#{emplPos.id?}"/>
            </in-parameters>
            <validations activate="nothing"/>
            <confirmation-text>Вы уверены, что хотите отменить результат ?</confirmation-text>
        </action>

    </actions>

    <validations>
        <condition id="checkBeginDateAndCurrentDate" level="error" check-before-submit="false">
            <expression on="bdate">
                moment(bdate, 'DD.MM.YYYY HH:mm').isBefore(new Date(), 'DD.MM.YYYY HH:mm') ||
                moment(bdate, 'DD.MM.YYYY HH:mm').isSame(new Date(), 'DD.MM.YYYY HH:mm')
            </expression>
            <message>Дата/время оказания не может быть больше текущей даты/времени.</message>
        </condition>

    </validations>

</object>