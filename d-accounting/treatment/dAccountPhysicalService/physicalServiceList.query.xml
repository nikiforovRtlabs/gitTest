<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-2.0">
    <object-id>dAccountPhysicalService</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from d_accounting.treatment_plan plan
                join d_accounting.treatment_plan_service ser on plan.id=ser.treatment_plan_id
                join md_srv_rendered msr on msr.id=ser.srv_rendered_id
                join sr_srv_rendered ssr on ssr.id = msr.id
                join sr_service s on s.id = ssr.service_id
                left join mc_step step on step.id = msr.step_id
                join sr_srv_type st on st.id = s.type_id
                left join sr_res_group res_group on res_group.id = ssr.res_group_id
                left join pim_employee_position empl_posit on empl_posit.id = res_group.responsible_id
                left join pim_employee empl on empl.id = empl_posit.employee_id
                left join pim_individual render_doctor_ind on render_doctor_ind.id = empl.individual_id
                where st.is_physical is true and :where
                order by :order, msr.id
            </n2o:items-query>

            <n2o:count-query>
                select count(msr)
                from d_accounting.treatment_plan plan
                join d_accounting.treatment_plan_service ser on plan.id=ser.treatment_plan_id
                join md_srv_rendered msr on msr.id=ser.srv_rendered_id
                join sr_srv_rendered ssr on ssr.id = msr.id
                join sr_service s on s.id = ssr.service_id
                left join mc_step step on step.id = msr.step_id
                join sr_srv_type st on st.id = s.type_id
                left join sr_res_group res_group on res_group.id = ssr.res_group_id
                left join pim_employee_position empl_posit on empl_posit.id = res_group.responsible_id
                left join pim_employee empl on empl.id = empl_posit.employee_id
                left join pim_individual render_doctor_ind on render_doctor_ind.id = empl.individual_id
                where st.is_physical is true and :where
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>

        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>id</name>
            <expression>msr.id</expression>
        </field>

        <field>
            <id>department.id</id>
            <domain>integer</domain>
            <display unavailable="true"/>
            <search>d.id = :department.id</search>
        </field>

        <field>
            <id>service</id>
            <domain>string</domain>
            <name>Услуга</name>
            <expression>s.name</expression>
            <sorting>:expression</sorting>
        </field>

        <field>
            <id>case.id</id>
            <domain>integer</domain>
            <expression>msr.case_id</expression>
            <search>:expression = :case.id</search>
        </field>

        <field>
            <id>renderedDate</id>
            <domain>date</domain>
            <name>Дата</name>
            <expression>ssr.bdate + coalesce(ssr.begin_time, '00:00:00')</expression>
            <sorting>:expression</sorting>
        </field>

        <field>
            <id>renderedDoctor</id>
            <domain>string</domain>
            <name>Врач</name>
            <expression>coalesce(render_doctor_ind.surname, '') || ' ' || coalesce(render_doctor_ind.name, '') || ' ' ||
                coalesce(render_doctor_ind.patr_name, '')
            </expression>
            <sorting>:expression</sorting>
        </field>

        <field>
            <id>status</id>
            <domain>string</domain>
            <name>Статус</name>
            <expression>(case when ssr.is_rendered is true then 'Оказана' else 'Запланирована' end)</expression>
            <sorting>:expression</sorting>
        </field>

        <field>
            <id>protocolId</id>
            <domain>integer</domain>
            <expression>(select id from md_srv_protocol where srv_rendered_id = ssr.id)</expression>
        </field>

        <field>
            <id>user.id</id>
            <domain>integer</domain>
            <display value="#{user.id}" unavailable="true"/>
            <search unavailable="true"/>
        </field>

        <field>
            <id>printForm</id>
            <domain>string</domain>
            <expression>
                (case when
                (select report_path from sr_srv_ehr_opt where service_id = s.id limit 1) = ''
                then 'by_default_A5.rptdesign'
                else coalesce((select report_path from sr_srv_ehr_opt where service_id = s.id limit 1),
                'by_default_A5.rptdesign')
                end)
            </expression>
        </field>

        <field>
            <id>plan.id</id>
            <domain>integer</domain>
            <expression>plan.id</expression>
        </field>

        <field>
            <id>plan.num</id>
            <name>Номер карты лечения</name>
            <domain>string</domain>
            <expression>plan.num</expression>
            <search>lower(plan.num) like '%'||lower(:num)||'%'</search>
        </field>

        <field>
            <id>account.id</id>
            <domain>integer</domain>
            <expression>plan.account_id</expression>
        </field>

    </fields>


</query>