<?xml version='1.0' encoding='UTF-8'?>
<query  xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
        xmlns="http://n2oapp.net/framework/config/schema/query-2.0">
    <object-id>treatmentServices</object-id>
    <name>treatmentServices</name>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from d_accounting.treatment_plan_service ser
                join md_srv_rendered msr on msr.id=ser.srv_rendered_id
                join sr_srv_rendered ssr on ssr.id = msr.id
                join sr_service s on s.id = ssr.service_id
                join sr_srv_type st on st.id = s.type_id
                where (st.is_physical is false or st.is_physical is null) and ssr.bdate is not null and :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(ser)
                from d_accounting.treatment_plan_service ser
                join md_srv_rendered msr on msr.id=ser.srv_rendered_id
                join sr_srv_rendered ssr on ssr.id = msr.id
                join sr_service s on s.id = ssr.service_id
                join sr_srv_type st on st.id = s.type_id
                where (st.is_physical is false or st.is_physical is null) and ssr.bdate is not null and :where
            </n2o:count-query>
            <n2o:alias>ser</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>msr.id</expression>
        </field>
        <field>
            <id>tp.id</id>
            <domain>integer</domain>
            <expression>ser.treatment_plan_id</expression>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <expression> concat(s.code, ' ', s.name, ' (', ssr.bdate, ')') </expression>
            <search>lower(concat(s.code, ' ', s.name, ' (', ssr.bdate, ')')) like '%'||lower(:name)||'%'</search>
        </field>
    </fields>
</query>