<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns:n2o="http://n2oapp.net/framework/config/schema/action-invocation-1.0">
    <name>Этап схемы вакцинации</name>

    <actions>
        <action id="create" name="Создать этап схемы вакцинации">
            <invocation>
                <rest:rest method="POST">
                    ${n2o.backend.path}/vaccine/schema-stages/
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="schemaId" mapping="['schemaId']" domain="integer"/>
                <param name="number" mapping="['number']" domain="object"/>
                <param name="disease" mapping="['disease']" domain="object"/>
                <param name="prevStage" mapping="['prevStage']" domain="object"/>
                <param name="age" mapping="['age']" domain="object"/>
                <param name="periodAfterPrevStage" mapping="['periodAfterPrevStage']" domain="object"/>
                <param name="periodical" mapping="['periodical']" domain="object"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </out-parameters>
            <validations activate="whiteList">
                <validation ref-id="hasRule"/>
            </validations>
        </action>
        <action id="update" name="Редактировать этап схемы вакцинации">
            <invocation>
                <rest:rest method="POST">
                    ${n2o.backend.path}/vaccine/schema-stages/{id}
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="schemaId" mapping="['schemaId']" domain="integer"/>
                <param name="number" mapping="['number']" domain="object"/>
                <param name="disease" mapping="['disease']" domain="object"/>
                <param name="prevStage" mapping="['prevStage']" domain="object"/>
                <param name="age" mapping="['age']" domain="object"/>
                <param name="periodAfterPrevStage" mapping="['periodAfterPrevStage']" domain="object"/>
                <param name="periodical" mapping="['periodical']" domain="object"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="hasRule"/>
            </validations>
        </action>
        <action id="delete" name="Удалить этап схемы вакцинации">
            <invocation>
                <rest:rest method="DELETE">
                    ${n2o.backend.path}/vaccine/schema-stages/{id}
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <!--<confirmation-text>Удаление этапа схемы повлечет за собой удаление цепочки зависимых этапов в схеме. Вы уверены, что хотите выполнить действие?</confirmation-text>-->
        </action>
    </actions>
    <validations>
        <constraint id="hasRule" level="error">
            <invocation>
                <n2o:rest method="POST">
                    <n2o:query>${n2o.backend.path}/vaccine/schema-stages/checkHasRule</n2o:query>
                </n2o:rest>
                <!--<sql:sql>-->
                    <!--<![CDATA[-->
                    <!--SELECT exists-->
                      <!--(SELECT *-->
                       <!--FROM-->
                         <!--( SELECT value-->
                          <!--FROM json_each(:age::json)-->
                          <!--WHERE json_typeof(value)!='null'-->
                            <!--UNION ALL-->
                            <!--SELECT value-->
                            <!--FROM json_each(:periodAfterPrevStage::json)-->
                            <!--WHERE json_typeof(value)!='null' ) v1-->
                       <!--LEFT JOIN json_each(v1.value) v2 ON json_typeof(v2.value)!='null'-->
                       <!--LEFT JOIN json_each(:periodical::json) vv ON json_typeof(vv.value)!='null'-->
                       <!--WHERE json_typeof(vv.value)!='null')-->
                    <!--]]>-->
                <!--</sql:sql>-->
                <!--<rest:rest method="POST">-->
                    <!--${n2o.backend.path}/vaccine/schema-stages/checkHasRule-->
                <!--</rest:rest>-->

            </invocation>
            <in-parameters>
                <param name="schemaId" mapping="['schemaId']" domain="integer"/>
                <param name="number" mapping="['number']" domain="object"/>
                <param name="disease" mapping="['disease']" domain="object"/>
                <param name="prevStage" mapping="['prevStage']" domain="object"/>
                <param name="age" mapping="['age']" domain="object"/>
                <param name="periodAfterPrevStage" mapping="['periodAfterPrevStage']" domain="object"/>
                <param name="periodical" mapping="['periodical']" domain="object"/>
            </in-parameters>
            <out-parameters>
                <param name="message" mapping="['message']"/>
            </out-parameters>
            <result expression="['success']"/>
            <message>{message}</message>
        </constraint>
    </validations>
</object>
