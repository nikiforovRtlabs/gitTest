<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-2.0">
    <object-id>vac_schema_stage_vaccine</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from vac.schema_stage_vaccine_relevance r
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(1)
                from vac.schema_stage_vaccine_relevance r
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>r.id</expression>
        </field>
        <field>
            <id>schemaStageId</id>
            <domain>integer</domain>
            <expression>r.schema_stage_id</expression>
        </field>
        <field>
            <id>vaccineLabel</id>
            <name>Вакцины</name>
            <domain>string</domain>
            <expression>(select array_to_string(array_agg(v.label), '; ') FROM vac_vaccine v
                join vac.schema_stage_vaccine sv on sv.vaccine_id = v.id
                where sv.relevance_id = r.id)
            </expression>
            <search unavailable="true"/>
            <sorting unavailable="true"/>
        </field>
        <field>
            <id>isDefault</id>
            <domain>boolean</domain>
            <name>По умолчанию</name>
            <expression>r.org_id is null</expression>
        </field>
        <field>
            <id>isCommonDefault</id>
            <domain>boolean</domain>
            <expression>r.org_id is null and r.from_dt is null and r.to_dt is null</expression>
        </field>
        <field>
            <id>rowsCount</id>
            <domain>integer</domain>
            <expression>(select count(r1) from vac.schema_stage_vaccine_relevance r1 where r1.schema_stage_id=r.schema_stage_id)</expression>
        </field>
        <field>
            <id>org.id</id>
            <domain>integer</domain>
            <expression>r.org_id</expression>
        </field>
        <field>
            <id>org.name</id>
            <name>Организация</name>
            <domain>string</domain>
            <expression>(select coalesce(po.short_name, po.full_name) from pim_organization po where po.id=r.org_id)</expression>
        </field>
        <field>
            <id>period.begin</id>
            <domain>date</domain>
            <expression>r.from_dt</expression>
        </field>
        <field>
            <id>period.end</id>
            <domain>date</domain>
            <expression>r.to_dt</expression>
        </field>
        <field>
            <id>period.label</id>
            <domain>string</domain>
            <name>Период действия</name>
            <display>
                case when r.from_dt is null and r.to_dt is null then ''
                when r.from_dt notnull and r.to_dt notnull then concat(to_char(r.from_dt, 'DD.MM.YYYY'), ' - ', to_char(r.to_dt, 'DD.MM.YYYY'))
                when r.from_dt is null and r.to_dt notnull then concat('до ', to_char(r.to_dt, 'DD.MM.YYYY'))
                when r.from_dt notnull and r.to_dt is null then concat('от ', to_char(r.from_dt, 'DD.MM.YYYY'))
                end
            </display>
            <sorting unavailable="true"/>
        </field>
    </fields>
</query>
