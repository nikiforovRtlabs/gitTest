<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-1.0">
    <name>applicationDocProd</name>
    <actions>
        <action id="save" name="Добавить" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/inventory/application-doc/prod
                </rest:rest>
            </invocation>

            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="org.id" mapping="['orgId']"/>
                <param name="docType.id" mapping="['docTypeId']"/>
                <param name="department.id" mapping="['departmentId']"/>
                <param name="fundSource.id" mapping="['fundSourceId']"/>
                <param name="docNumber" mapping="['docNumber']" domain="string"/>
                <param name="docDate" mapping="['docDate']"/>
                <param name="store.id" mapping="['storeId']"/>
                <param name="formulaDoc.id" mapping="['formulaDocId']"/>
                <param name="formulaDocName" mapping="['formulaDocName']" domain="string"/>
                <param name="quantity" mapping="['quantity']" domain="numeric"/>
                <param name="measure.id" mapping="['measureId']"/>
                <param name="note" mapping="['note']" domain="string"/>
                <param name="status.id"  mapping="['statusId']"/>
                <param name="year"  mapping="['year']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
                <param name="docNumber" mapping="['displayedValue']"/>
            </out-parameters>
            <success-text>Заявка на изготовление № {docNumber} сохранена</success-text>

            <validations activate="blackList">
                <validation ref-id="checkIsExistsSpecForAppDoc"/>
            </validations>
        </action>

        <action id="delete" name="Удалить" form-submit-label="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    ${n2o.backend.path}/inventory/application-doc/prod
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="status.id"/>
            </in-parameters>
            <confirmation-text>Вы уверены, что хотите удалить Заявку на изготовление № {docNumber}?
            </confirmation-text>
            <success-text>Документ удален</success-text>

            <validations activate="whiteList">
                <validation ref-id="checkIsApproved"/>
                <validation ref-id="checkIsExistsSpecForSumAppDoc"/>
                <validation ref-id="checkIsExistsSpecForAppDoc"/>
                <validation ref-id="checkIsExistsProductionDoc"/>
            </validations>
        </action>

        <action id="approve" name="Утвердить">
            <invocation>
                <sql:sql>
                    update inventory.application_doc_prod
                    set status_id=7
                    where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="docNumber" mapping="['docNumber']"  domain="string"/>
            </in-parameters>
            <confirmation-text>Вы действительно хотите утвердить документ № {docNumber}?</confirmation-text>
            <success-text>Статус документа № {docNumber}  изменён на "утверждён"</success-text>
            <validations activate="nothing"/>
        </action>

        <action id="not_approve" name="Отменить утверждение">
            <invocation>
                <sql:sql>
                    update inventory.application_doc_prod
                    set status_id=8
                    where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="docNumber" mapping="['docNumber']"  domain="string"/>
            </in-parameters>
            <confirmation-text>Вы действительно хотите отменить утверждение документа № {docNumber}?</confirmation-text>
            <success-text>Статус документа № {docNumber} изменён на "не утверждён"</success-text>

            <validations activate="whiteList">
                <validation ref-id="checkIsExistsProductionDoc"/>
                <validation ref-id="checkIsExistsSpecForSumAppDoc"/>
            </validations>

        </action>

    </actions>

    <validations>
        <constraint id="applicationProdCheckUnique" level="error">
            <invocation>
                <sql:sql>
                    select count(1) from inventory.application_doc_prod
                    where number = :docNumber
                    and doc_type_id = :docTypeId
                    and org_id = :orgId
                    and (year= :year or (:year is null and year is null))
                    and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="docNumber" mapping="['docNumber']"  domain="string"/>
                <param name="docType.id" mapping="['docTypeId']"/>
                <param name="year" mapping="['year']"/>
                <param name="org.id" mapping="['orgId']"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Заявка на изготовление с такими параметрами уже существует.</message>
        </constraint>

        <condition id="checkIsApproved" level="error">
            <message>Операция не может быть выполнена. Заявка на изготовление №{docNumber} утверждена.</message>
            <expression>(typeof status != 'undefined' &amp;&amp;  status != null &amp;&amp;
                typeof status.id != 'undefined' &amp;&amp; status.id!= null  &amp;&amp; status.id==8)
                ||(typeof status == 'undefined' ||  status == null || typeof status.id == 'undefined' || status.id== null )
            </expression>
        </condition>

        <condition id="checkIsFormulaDocExists" level="error">
            <message>Операция не может быть выполнена. Не заполнена пропись.</message>
            <expression> <![CDATA[
                (typeof formulaDocName != 'undefined' && formulaDocName != null) ||
                (typeof formulaDoc != 'undefined' && formulaDoc != null && formulaDoc.id != 'undefined' && formulaDoc.id != null)
            ]]> </expression>
        </condition>

        <constraint id="checkIsExistsSpecForSumAppDoc" level="error">
            <invocation>
                <sql:sql>
                    select count(1) from inventory.application_doc_prod doc
                    where doc.id = :id and doc.sum_app_spec_id is not null
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Невозможно завершить операцию. Существует спецификация Сводной заявки.</message>
        </constraint>

        <constraint id="checkIsExistsSpecForAppDoc" level="error">
            <invocation>
                <sql:sql>
                    select count(1) from inventory.application_prod_spec spec
                    where spec.document_id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Невозможно завершить операцию. Существует состав заявки.</message>
        </constraint>

        <constraint id="checkIsExistsProductionDoc" level="error">
            <invocation>
                <sql:sql>
                    select count(1) from inventory.production_doc doc
                    where doc.app_prod_doc_number_id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Невозможно завершить операцию. Существует документ производства для данной заявки.</message>
        </constraint>

        <condition id="checkQuantity" level="error">
            <message>Значение некорректное или превышает максимально допустимое</message>
            <expression on="quantity"><![CDATA[
                var regex = new RegExp('^\\d{1,9}\\.\\d+$|^\\d{1,9}$');
                regex.test(quantity);
                ]]>
            </expression>
        </condition>
    </validations>

</object>
