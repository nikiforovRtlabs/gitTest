<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-1.0">
    <name>applicationDoc</name>
    <actions>
        <action id="save" name="Добавить" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/inventory/application-doc
                </rest:rest>
            </invocation>

            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="org.id" mapping="['orgId']"/>
                <param name="department.id" mapping="['departmentId']"/>
                <param name="fundSource.id" mapping="['fundSourceId']"/>
                <param name="appType.id" mapping="['appTypeId']"/>
                <param name="docType.id" mapping="['docTypeId']"/>
                <param name="docNumber" mapping="['docNumber']"  domain="string"/>
                <param name="docDate" mapping="['docDate']"/>
                <param name="year" mapping="['year']"/>
                <param name="store.id" mapping="['storeId']"/>
                <param name="comGroup.id" mapping="['comGroupId']"/>
                <param name="note" mapping="['note']" domain="string"/>
                <param name="status.id"  mapping="['statusId']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
                <param name="docNumber" mapping="['displayedValue']"/>
            </out-parameters>
            <success-text>Заявка № {docNumber} сохранена</success-text>
            <validations activate="blackList">
                <validation ref-id="checkIsExistsSpecForSumAppDoc"/>
                <validation ref-id="couldNotConsolidate"/>
            </validations>
        </action>

        <action id="saveSumApplication" name="Добавить" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/inventory/application-doc/sumApplication
                </rest:rest>
            </invocation>

            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="org.id" mapping="['orgId']"/>
                <param name="departments*.id" mapping="['departments']" domain="integer[]"/>
                <param name="fundSource.id" mapping="['fundSourceId']"/>
                <param name="appType.id" mapping="['appTypeId']"/>
                <param name="docType.id" mapping="['docTypeId']"/>
                <param name="docNumber" mapping="['docNumber']"  domain="string"/>
                <param name="docDate" mapping="['docDate']"/>
                <param name="year" mapping="['year']"/>
                <param name="store.id" mapping="['storeId']"/>
                <param name="comGroup.id" mapping="['comGroupId']"/>
                <param name="note" mapping="['note']" domain="string"/>
                <param name="status.id"  mapping="['statusId']"/>
            </in-parameters>

            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <success-text>Сводная заявка № {docNumber} сохранена</success-text>
        </action>

        <action id="consolidate" name="Консолидировать" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST" >
                    ${n2o.backend.path}/inventory/application-doc/consolidate
                </rest:rest>
            </invocation>

            <in-parameters>
                <param name="org.id" mapping="['orgId']"/>
                <param name="applicationIds" mapping="['applicationIds']" domain="integer[]"/>
                <param name="fundSource.id" mapping="['fundSourceId']"/>
                <param name="appType.id" mapping="['appTypeId']"/>
                <param name="docType.id" mapping="['docTypeId']"/>
                <param name="docNumber" mapping="['docNumber']"  domain="string"/>
                <param name="docDate" mapping="['docDate']"/>
                <param name="year" mapping="['year']"/>
                <param name="store.id" mapping="['storeId']"/>
                <param name="comGroup.id" mapping="['comGroupId']"/>
                <param name="note" mapping="['note']"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="['id']"/>
            </out-parameters>
            <success-text>Консолидация завершена. Сводная заявка № {docNumber} сохранена</success-text>
            <validations activate="whiteList">
                <validation ref-id="couldNotConsolidate"/>
            </validations>
        </action>

        <action id="delete" name="Удалить" form-submit-label="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    ${n2o.backend.path}/inventory/application-doc
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="status.id"/>
            </in-parameters>
            <confirmation-text>При удалении Заявки будут удалены все её спецификации. Вы уверены, что хотите удалить Заявку № {docNumber}?
            </confirmation-text>
            <success-text>Документ и спецификации удалены</success-text>
            <validations activate="whiteList">
                <validation ref-id="checkIsApproved"/>
                <validation ref-id="checkIsExistsSpecForSumAppDoc"/>
            </validations>
        </action>

        <action id="approve" name="Утвердить">
            <invocation>
                <sql:sql>
                    update inventory.application_doc
                    set status_id=7
                    where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="docNumber" mapping="['docNumber']"  domain="string"/>
            </in-parameters>
            <confirmation-text>Вы действительно хотите утвердить документ № {docNumber}?</confirmation-text>
            <success-text>Статус документа № {docNumber}  изменён на "утверждён"</success-text>
            <validations activate="nothing"/>
        </action>

        <action id="not_approve" name="Отменить утверждение">
            <invocation>
                <sql:sql>
                    update inventory.application_doc
                    set status_id=8
                    where id = :id
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="docNumber" mapping="['docNumber']"  domain="string"/>
            </in-parameters>
            <confirmation-text>Вы действительно хотите отменить утверждение документа № {docNumber}?</confirmation-text>
            <success-text>Статус документа № {docNumber} изменён на "не утверждён"</success-text>
            <validations activate="whiteList">
                <validation ref-id="checkIsExistsSpecForSumAppDoc"/>
            </validations>
        </action>
    </actions>

    <validations>
        <constraint id="applicationCheckUnique" level="error">
            <invocation>
                <sql:sql>
                    select count(1) from inventory.application_doc
                    where number = :docNumber
                    and doc_type_id = :docTypeId
                    and org_id = :orgId
                    and (year= :year or (:year is null and year is null))
                    and (:id is null or id != :id)
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="docNumber" mapping="['docNumber']"  domain="string"/>
                <param name="docType.id" mapping="['docTypeId']"/>
                <param name="year" mapping="['year']"/>
                <param name="org.id" mapping="['orgId']"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Заявка с такими параметрами уже существует.</message>
        </constraint>

        <condition id="checkIsApproved" level="error">
            <message>Операция не может быть выполнена. Заявка №{docNumber} утверждена.</message>
            <expression>(typeof status != 'undefined' &amp;&amp;  status != null &amp;&amp;
                typeof status.id != 'undefined' &amp;&amp; status.id!= null  &amp;&amp; status.id==8)
                ||(typeof status == 'undefined' ||  status == null || typeof status.id == 'undefined' || status.id== null )
            </expression>
        </condition>

        <constraint id="checkIsExistsSpecForSumAppDoc" level="error">
            <invocation>
                <sql:sql>
                    select count(1) from inventory.application_spec spec
                    where spec.document_id = :id and spec.sum_app_spec_id is not null
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
            <message>Невозможно завершить операцию. Существует спецификация Сводной заявки.</message>
        </constraint>

        <condition id="couldNotConsolidate" level="error" moment="before-action">
            <message></message>
            <expression>typeof errorMessage == 'undefined' || errorMessage == null || errorMessage == '' || errorMessage == '1'</expression>
        </condition>
    </validations>

</object>
