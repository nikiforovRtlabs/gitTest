<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-2.0">
    <object-id>auditSetting</object-id>
    <name>auditTablesViewHierarchy</name>

    <execution>
        <n2o:sql>
            <n2o:items-query>
                SELECT :select
                FROM (
                    SELECT
                        -h.id        AS id,
                        h.name       AS name,
                        -h.parent_id AS parent_id,
                        h.position   AS position,
                        TRUE         AS has_child
                    FROM audit.table_hierarchy h
                    UNION ALL
                    SELECT
                        s.id,
                        concat(coalesce((SELECT obj_description(concat(s.table_schema, '.', s.table_name) :: REGCLASS)),
                            'Не задано'), ' (', s.table_schema || '.' || s.table_name, ')') AS name,
                        -s.table_hierarchy_id                                               AS parent_id,
                        s.position                                                          AS position,
                        FALSE                                                               AS has_child
                    FROM audit.table_setting s
                    WHERE 1=1 --AND s.is_has_default_primary_key
                ) t
                ORDER BY t.has_child DESC, t.position, t.name
            </n2o:items-query>
            <n2o:count-query>
                SELECT  (SELECT count(*) FROM audit.table_hierarchy) +
                        (SELECT count(*) FROM audit.table_setting WHERE is_has_default_primary_key)
            </n2o:count-query>
            <n2o:alias>t</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>t.id</expression>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>t.name</expression>
        </field>
        <field>
            <id>parent_id</id>
            <domain>integer</domain>
            <expression>t.parent_id</expression>
        </field>
        <field>
            <id>has_child</id>
            <domain>boolean</domain>
            <expression>t.has_child</expression>
        </field>
    </fields>
</query>
