<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>baby_food_norm</id>-->
    <name>Нормы продуктов</name>
    <object-id>baby_food_norm</object-id>
    <execution>
        <n2o:sql>

            <n2o:items-query>
                select :select
                from ehr.baby_food_norm fn
                join public.md_baby_food_age_category ac on ac.id = fn.age_category_id
                join public.pci_benefit_definition bd on bd.id = fn.benefit_definition_id
                join ehr.baby_food_product fp on fp.id = fn.product_id
                left join public.cmn_measure cm on cm.id = fp.measure_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(*)
                from ehr.baby_food_norm fn
                join public.md_baby_food_age_category ac on ac.id = fn.age_category_id
                join public.pci_benefit_definition bd on bd.id = fn.benefit_definition_id
                join ehr.baby_food_product fp on fp.id = fn.product_id
                left join public.cmn_measure cm on cm.id = fp.measure_id
                where :where
            </n2o:count-query>
            <n2o:alias>fn</n2o:alias>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <name>Идентификатор</name>
            <display/>
            <expression>fn.id</expression>
            <filters>
                <filter type="eq" filter-field="id">
                    :expression = :id
                </filter>
            </filters>
        </field>

        <field>
            <id>ageCategory.id</id>
            <domain>integer</domain>
            <name>Возрастная категория</name>
            <display/>
            <expression>fn.age_category_id</expression>
            <filters>
                <filter type="eq" filter-field="ageCategory.id">
                    :expression = :ageCategory.id
                </filter>
            </filters>
        </field>
        <field>
            <id>ageCategory.name</id>
            <domain>string</domain>
            <name>Возрастная категория</name>
            <display/>
            <expression>ac.name||' ('||cast(ac.begin_age as varchar(2))||' - '||cast(ac.end_age as varchar(2))||' месяцев)'</expression>
        </field>

        <field>
            <id>benefit_definition.id</id>
            <domain>integer</domain>
            <name>Льгота</name>
            <display/>
            <expression>fn.benefit_definition_id</expression>
            <filters>
                <filter type="eq" filter-field="benefit_definition.id">
                    :expression = :benefit_definition.id
                </filter>
            </filters>
        </field>
        <field>
            <id>benefit_definition.name</id>
            <domain>string</domain>
            <name>Льгота</name>
            <display/>
            <expression>concat(bd.code,' ',bd.name)</expression>
        </field>

        <field>
            <id>product.id</id>
            <domain>integer</domain>
            <name>Продукт питания</name>
            <display/>
            <expression>fn.product_id</expression>
        </field>
        <field>
            <id>product.name</id>
            <domain>string</domain>
            <name>Продукт питания</name>
            <display/>
            <expression>fp.name||', '||cm.mnemocode</expression>
        </field>

        <field>
            <id>norm</id>
            <domain>integer</domain>
            <name>Норма</name>
            <display/>
            <expression>fn.rate</expression>
        </field>

       </fields>
</query>