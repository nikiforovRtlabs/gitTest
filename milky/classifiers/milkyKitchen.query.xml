<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>milkyKitchen</id>-->
    <object-id>receipt_journal</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from public.pim_department
                where kind_id = (select id from public.pim_department_kind where code = '10126')
                and :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>
                select count(1)
                from public.pim_department
                where kind_id = (select id from public.pim_department_kind where code = '10126')
                and :where
            </n2o:count-query>
        </n2o:sql>
    </execution>
    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <display/>
            <expression>id</expression>
            <filters>
                <filter type="eq" filter-field="id">
                    :expression = :id
                </filter>
            </filters>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <display/>
            <expression>name</expression>
            <filters>
                <filter type="eq" filter-field="name">
                    upper(:expression) like '%'||upper(:name)||'%'
                </filter>
            </filters>
        </field>
        <field>
            <id>organizationId</id>
            <domain>integer</domain>
            <display/>
            <expression>org_id</expression>
            <!--<search>:expression = :organizationId</search>-->
        </field>

        <!--<field>-->
            <!--<id>departmentTypeId</id>-->
            <!--<domain>integer</domain>-->
            <!--<display/>-->
            <!--<expression>type_id</expression>-->
        <!--</field>-->

        <field>
            <id>date</id>
            <domain>date</domain>
            <filters>
                <filter type="eq" filter-field="date">
                    <![CDATA[
                        ((from_dt is null or from_dt <= :date)
                         and
                         (to_dt is null or to_dt >= :date)
                        )
                    ]]>
                </filter>
            </filters>
        </field>
    </fields>
</query>