<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-3.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <!--<id>milkyClinic</id>-->
    <object-id>milky_dictionary</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from pim_organization po
                inner join md_clinic mc on mc.id = po.id
                where :where
                order by :order
            </n2o:items-query>

            <n2o:count-query>
                select count(*)
                from pim_organization po
                inner join md_clinic mc on mc.id = po.id
                where :where
            </n2o:count-query>
            <n2o:alias>po</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <display/>
            <expression>po.id</expression>
            <filters>
                <filter type="eq" filter-field="id">
                    :expression = :id
                </filter>
            </filters>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <display/>
            <!--coalesce(mc.code || ' ', '') ||-->
            <expression>coalesce(po.short_name, po.full_name)</expression>
            <filters>
                <filter type="eq" filter-field="name">
                    upper(:expression) like '%'||upper(:name)||'%'
                </filter>
            </filters>
        </field>
        <!--<field>-->
            <!--<id>exceptId</id>-->
            <!--<domain>integer</domain>-->
            <!--<expression>po.id</expression>-->
            <!--<search>:expression != :exceptId</search>-->
        <!--</field>-->

        <field>
            <id>date</id>
            <domain>date</domain>
            <display/>
            <expression>cast(:date as date)</expression>
            <filters>
                (po.from_dt is null or cast(:date as date) >= po.from_dt)
                    and
                (po.to_dt is null or po.to_dt >= cast(:date as date))
            </filters>
        </field>
    </fields>

</query>