<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0"
        xmlns:sp="http://n2oapp.net/framework/config/schema/action-stored-procedure-1.0">
    <!--<id>receipt_journal</id>-->
    <name>Рецепт на молочную кухню</name>
    <actions>
        <action id="create">
            <invocation>
                <sql:sql>
                    insert into ehr.receipt
                    (
                    id, clinic_id,
                    type_id,sign_id,validity_id,
                    series,num,issue_dt,
                    employee_position_id,
                    patient_id
                    )
                    values (
                    nextval('ehr.receipt_id_seq'),
                    :clinic_id,
                    :type_id,:sign_id,:validity_id,
                    :series,:num,:issue_dt,
                    :employee_position_id,
                    :patient_id
                    );
                    insert into ehr.baby_food_receipt
                    (
                    id,
                    benefit_definition_id,
                    kitchen_id,
                    begin_dt,
                    end_dt
                    )
                    VALUES (
                    currval('ehr.receipt_id_seq'),
                    :benefit_definition_id,
                    :kitchen_id,
                    :begin_dt,
                    :end_dt
                    );
                    <!--не делаем, так как список выписанных продуктов строго определяется возрастной и граждан категориями-->
                    <!--insert into ehr.baby_food_spec (id,food_receipt_id,product_id,value)-->
                        <!--select nextval('ehr.baby_food_spec_id_seq'),currval('ehr.receipt_id_seq'),-->
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="clinic.id" mapping="['clinic_id']" domain="integer"/>
                <param name="type.id" mapping="['type_id']" domain="integer"/>
                <param name="sign.id" mapping="['sign_id']" domain="integer"/>
                <param name="validity.id" mapping="['validity_id']" domain="integer"/>
                <param name="series" mapping="['series']" domain="string"/>
                <param name="num" mapping="['num']" domain="string"/>
                <param name="issue_dt" mapping="['issue_dt']" domain="date"/>
                <param name="employee.id" mapping="['employee_position_id']" domain="integer"/>
                <param name="patient.id" mapping="['patient_id']" domain="integer"/>
                <param name="benefit_definition.id" mapping="['benefit_definition_id']" domain="integer"/>
                <param name="kitchen.id" mapping="['kitchen_id']" domain="integer"/>
                <param name="begin_dt" mapping="['begin_dt']" domain="date"/>
                <param name="end_dt" mapping="['end_dt']" domain="date"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]" domain="integer"/>
            </out-parameters>
            <success-text>
                Рецепт сохранен в системе успешно
            </success-text>
        </action>
        <action id="update">
            <invocation>
                <sql:sql>
                    update ehr.receipt set patient_id = :patient_id where id = :id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="patient.id" mapping="['patient_id']" domain="integer"/>
            </in-parameters>
            <success-text>
                Изменение данных по пациенту в рецепте сохранено в системе успешно
            </success-text>
        </action>
    </actions>
        <!--<condition id="check_filling" level="error">-->
            <!--<expression>-->
                <!--((typeof addr_data != 'undefined') &amp;&amp; (source.addr_data != null) &amp;&amp; (source.addr_data.id != null)) ||((typeof source.addr_descr != 'undefined') &amp;&amp; (source.addr_descr != null)) -->
            <!--</expression>-->
            <!--<message></message>-->
        <!--</condition>-->

        <!--<condition id="checkAddr" level="error">-->
            <!--<expression>((typeof addr_data != 'undefined') &amp;&amp; (addr_data != null) &amp;&amp; (addr_data.id != null)) ||((typeof addr_descr != 'undefined') &amp;&amp; (addr_descr != null)) </expression>-->
            <!--<message>Одно из полей 'Адрес вызова'/'Дополнительные ориентиры' обязательно должно быть заполнено</message>-->
        <!--</condition>-->

        <!--<constraint id="certif_unique" level="error">-->
            <!--<message>Внимание! Серия и номер свидетельства совпадают с ранее выданным!</message>-->
            <!--<invocation>-->
                <!--<sql:sql>-->
                    <!--select count(*)-->
                    <!--from certificates.birth_certificate da-->
                    <!--where trim(da.code) = trim(:code) and trim(da.number) = trim(:number)-->
                    <!--and (:id is null or id != :id)-->
                <!--</sql:sql>-->
            <!--</invocation>-->
            <!--<in-parameters>-->
                <!--<param name="id" mapping="['id']" domain="integer"/>-->
                <!--<param name="code" mapping="['code']" domain="string"/>-->
                <!--<param name="number" mapping="['number']" domain="string"/>-->
            <!--</in-parameters>-->
            <!--<result expression="[0][0][0] == 0"/>-->
        <!--</constraint>-->
    <validations>
        <condition id="canCreateMilkyReceipt" level="error" moment="before-action">
            <message>У выбранного врача нет права на выписку рецепта на молочную кухню</message>
            <expression>!!canCreateBenefitReceipt == true</expression>
        </condition>
    </validations>
</object>