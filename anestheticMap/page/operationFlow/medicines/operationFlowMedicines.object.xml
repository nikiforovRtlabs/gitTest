<?xml version='1.0' encoding='UTF-8'?>
<object xmlns:rest="http://n2oapp.net/framework/config/schema/action-rest-2.0"
        xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <name>operationFlowMedicine</name>

    <actions>
        <action id="save" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="baseInfo.patientId" mapping="['patientId']"/>
                <param name="baseInfo.caseId" mapping="['caseId']"/>
                <param name="baseInfo.stepId" mapping="['stepId']"/>
                <param name="serviceId" mapping="['serviceId']"/>
                <param name="baseInfo.anesthesiologId" mapping="['doctorId']"/>
                <param name="createdDt" mapping="['createdDt']"/>
                <!--Препарат-->
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <!--Способ введения-->
                <param name="administrationRoute.id" mapping="['administrationRouteId']"/>
                <!--Условия-->
                <param name="visitTerm.id" mapping="['visitTermId']"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']"/>
                <param name="periodEndDt" mapping="['periodEndDt']"/>
                <param name="note" mapping="['note']"/>
                <param name="prescriptionPeriodicityId" mapping="['periodicityId']" value="7"/>
                <param name="statusId" mapping="['statusId']" value="2"/>
                <param name="isOperation" mapping="['isOperation']" value="true"/>
                <param name="usedTypeId" mapping="['usedTypeId']" value="1"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="hasPrescriptionCompatibilityWarning"/>
                <validation ref-id="hasPrescriptionCompatibilityError"/>
                <validation ref-id="hasPrescriptionNotExcessDoseWarning"/>
                <validation ref-id="hasPrescriptionNotExcessDoseError"/>
            </validations>
        </action>

        <action id="updateMedicines" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="baseInfo.patientId" mapping="['patientId']"/>
                <param name="baseInfo.caseId" mapping="['caseId']"/>
                <param name="baseInfo.stepId" mapping="['stepId']"/>
                <param name="serviceId" mapping="['serviceId']"/>
                <param name="baseInfo.anesthesiologId" mapping="['doctorId']"/>
                <param name="createdDt" mapping="['createdDt']"/>
                <!--Препарат-->
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <!--Способ введения-->
                <param name="administrationRoute.id" mapping="['administrationRouteId']"/>
                <!--Условия-->
                <param name="visitTerm.id" mapping="['visitTermId']"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']"/>
                <param name="periodEndDt" mapping="['periodEndDt']"/>
                <param name="note" mapping="['note']"/>
                <param name="prescriptionPeriodicityId" mapping="['periodicityId']" value="7"/>
                <param name="statusId" mapping="['statusId']" value="2"/>
                <param name="isOperation" mapping="['isOperation']" value="true"/>
                <param name="usedTypeId" mapping="['usedTypeId']" value="1"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="hasPrescriptionCompatibilityWarning"/>
                <validation ref-id="hasPrescriptionCompatibilityError"/>
                <validation ref-id="hasPrescriptionNotExcessDoseWarning"/>
                <validation ref-id="hasPrescriptionNotExcessDoseError"/>
                <validation ref-id="isWriteOffCheck"/>
                <validation ref-id="isExecutionOnceCheck"/>
            </validations>
        </action>

        <action id="saveInfusion" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="baseInfo.patientId" mapping="['patientId']"/>
                <param name="baseInfo.caseId" mapping="['caseId']"/>
                <param name="baseInfo.stepId" mapping="['stepId']"/>
                <param name="serviceId" mapping="['serviceId']"/>
                <param name="baseInfo.anesthesiologId" mapping="['doctorId']"/>
                <!--Препарат-->
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <!--Название трансфузионной среды-->
                <param name="transfusionName" mapping="['transfusionName']" domain="string"/>
                <!--Способ введения-->
                <param name="administrationRoute.id" mapping="['administrationRouteId']"/>
                <!--Условия-->
                <param name="visitTerm.id" mapping="['visitTermId']"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']"/>
                <param name="periodEndDt" mapping="['periodEndDt']"/>
                <param name="createdDt" mapping="['createdDt']"/>
                <param name="note" mapping="['note']"/>
                <param name="prescriptionPeriodicityId" mapping="['periodicityId']" value="7"/>
                <param name="statusId" mapping="['statusId']" value="2"/>
                <param name="isOperation" mapping="['isOperation']" value="true"/>
                <param name="usedType.id" mapping="['usedTypeId']"/>
                <param name="infusionHoldDoseValue" mapping="['transfusionDoseValue']"/>
                <param name="infusionIntroductionSpeed" mapping="['infusionIntroductionSpeed']"/>
                <param name="isInfusion" mapping="['isInfusion']" value="true"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="hasPrescriptionCompatibilityWarning"/>
                <validation ref-id="hasPrescriptionCompatibilityError"/>
                <validation ref-id="hasPrescriptionNotExcessDoseWarning"/>
                <validation ref-id="hasPrescriptionNotExcessDoseError"/>
            </validations>
        </action>

        <action id="updateInfusion" form-submit-label="Сохранить">
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']"/>
                <param name="baseInfo.patientId" mapping="['patientId']"/>
                <param name="baseInfo.caseId" mapping="['caseId']"/>
                <param name="baseInfo.stepId" mapping="['stepId']"/>
                <param name="serviceId" mapping="['serviceId']"/>
                <param name="baseInfo.anesthesiologId" mapping="['doctorId']"/>
                <!--Препарат-->
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <!--Название трансфузионной среды-->
                <param name="transfusionName" mapping="['transfusionName']" domain="string"/>
                <!--Способ введения-->
                <param name="administrationRoute.id" mapping="['administrationRouteId']"/>
                <!--Условия-->
                <param name="visitTerm.id" mapping="['visitTermId']"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']"/>
                <param name="periodEndDt" mapping="['periodEndDt']"/>
                <param name="createdDt" mapping="['createdDt']"/>
                <param name="note" mapping="['note']"/>
                <param name="prescriptionPeriodicityId" mapping="['periodicityId']" value="7"/>
                <param name="statusId" mapping="['statusId']" value="2"/>
                <param name="isOperation" mapping="['isOperation']" value="true"/>
                <param name="usedType.id" mapping="['usedTypeId']"/>
                <param name="infusionHoldDoseValue" mapping="['transfusionDoseValue']"/>
                <param name="infusionIntroductionSpeed" mapping="['infusionIntroductionSpeed']"/>
                <param name="isInfusion" mapping="['isInfusion']" value="true"/>
            </in-parameters>
            <validations activate="whiteList">
                <validation ref-id="hasPrescriptionCompatibilityWarning"/>
                <validation ref-id="hasPrescriptionCompatibilityError"/>
                <validation ref-id="hasPrescriptionNotExcessDoseWarning"/>
                <validation ref-id="hasPrescriptionNotExcessDoseError"/>
                <validation ref-id="isWriteOffCheck"/>
            </validations>
        </action>

        <action id="deleteMedicines" form-submit-label="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription?id={id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="whiteList" >
                <validation ref-id="isWriteOffCheck"/>
                <validation ref-id="isExecutionOnceCheck"/>
            </validations>
            <confirmation-text>Вы уверены, что хотите удалить медикамент?</confirmation-text>
        </action>

        <action id="deleteInfusion" form-submit-label="Удалить">
            <invocation>
                <rest:rest method="DELETE">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription?id={id}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <validations activate="whiteList" >
                <validation ref-id="isWriteOffCheck"/>
            </validations>
            <confirmation-text>Вы уверены, что хотите удалить медикамент?</confirmation-text>
        </action>

    </actions>

    <!--todo: copy from prescription_anesthetic.object.xml-->
    <validations>

        <constraint id="isWriteOffCheck" level="error">
            <invocation>
                <sql:sql><![CDATA[

                select ps.id from hospital.prescription_schedule ps
                where ps.prescription_id = :id and
                 ps.store_opr_id is not null
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <!--<param name="isWriteOff" mapping="['isWriteOff']" domain="boolean"/>-->
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0].length == 0 or [0][0][0] == true"/>
            <message>Удаление/изменение невозможно. Необходимо отменить списание</message>
        </constraint>


        <constraint id="isExecutionOnceCheck" level="error">
            <message>Удаление/изменение невозможно.
            </message>
            <invocation>
                <sql:sql><![CDATA[
                        select (p.is_execution_once) from hospital.prescription p where p.id=:id;
                    ]]>
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == false"/>
        </constraint>

        <condition id="prescriptionPeriodValidation" level="error">
            <expression on="periodBeginDt,periodEndDt"><![CDATA[
                    (periodEndDt == null) ||
                    (moment(periodBeginDt, 'DD.MM.YYYY HH:mm').isBefore(moment(periodEndDt, 'DD.MM.YYYY HH:mm')) ||
                    moment(periodBeginDt, 'DD.MM.YYYY HH:mm').isSame(moment(periodEndDt, 'DD.MM.YYYY HH:mm')) )]]>
            </expression>
            <message>Дата начала не должна быть больше даты окончания</message>
        </condition>

        <condition id="prolongDayValidation" level="error">
            <message>Введенное значение должно быть числом!</message>
            <expression><![CDATA[
                var regex = new RegExp('\^[0-9]+\$');
                regex.test(dayCount);
                ]]>
            </expression>
        </condition>

        <condition id="checkHolding0" level="error">
            <expression>
                typeof holdings != 'undefined' &amp;&amp; holdings != null &amp;&amp;
                typeof holdings[0] != 'undefined' &amp;&amp; holdings[0] != null &amp;&amp;
                typeof holdings[0].holding != 'undefined' &amp;&amp; holdings[0].holding != null &amp;&amp;
                typeof holdings[0].holding.id != 'undefined' &amp;&amp; holdings[0].holding.id != null
            </expression>
            <message>Заполните поле</message>
        </condition>

        <constraint id="hasPrescriptionCompatibilityWarning" level="warning">
            <message>Есть несовместимые по МНН лекарственные назначения в указанном периоде. {error} Вы уверены что
                хотите сохранить?
            </message>
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/check-prescription-compatibility-warning/{patientId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="baseInfo.patientId" mapping="['patientId']" domain="integer"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']" domain="date"/>
                <param name="periodEndDt" mapping="['periodEndDt']" domain="date"/>
                <param name="holdings*.holding.holding_id" mapping="['holdingIds']" domain="integer[]"
                       required="false"/>
            </in-parameters>
            <out-parameters>
                <param name="error" mapping="['error']" domain="string"/>
            </out-parameters>
            <result expression="['compatible'] == true"/>
        </constraint>

        <constraint id="hasPrescriptionCompatibilityError" level="error">
            <message>Есть несовместимые по МНН лекарственные назначения в указанном периоде. {error}</message>
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/check-prescription-compatibility-error/{patientId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="baseInfo.patientId" mapping="['patientId']" domain="integer"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']" domain="date"/>
                <param name="periodEndDt" mapping="['periodEndDt']" domain="date"/>
                <param name="holdings*.holding.holding_id" mapping="['holdingIds']" domain="integer[]"
                       required="false"/>
            </in-parameters>
            <out-parameters>
                <param name="error" mapping="['error']" domain="string"/>
            </out-parameters>
            <result expression="['compatible'] == true"/>
        </constraint>

        <constraint id="hasPrescriptionNotExcessDoseWarning" level="warning">
            <message>Имеются лекарственные назначения, у которых суммарная суточная/курсовая доза превышает максимально
                допустимое значение! {error} Вы уверены что хотите сохранить?
            </message>
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/check-prescription-excess-dose-warning/{patientId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="baseInfo.patientId" mapping="['patientId']" domain="integer"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']" domain="date"/>
                <param name="periodEndDt" mapping="['periodEndDt']" domain="date"/>
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <param name="prescriptionPeriodicityId" mapping="['periodicityId']"/>
            </in-parameters>
            <out-parameters>
                <param name="error" mapping="['error']" domain="string"/>
            </out-parameters>
            <result expression="['notExcessDose'] == true"/>
        </constraint>

        <constraint id="hasPrescriptionNotExcessDoseError" level="error">
            <message>Имеются лекарственные назначения, у которых суммарная суточная/курсовая доза превышает максимально
                допустимое значение! {error}
            </message>
            <invocation>
                <rest:rest method="POST">
                    <rest:query>
                        ${n2o.backend.path}/hospital/prescription/check-prescription-excess-dose-error/{patientId}
                    </rest:query>
                </rest:rest>
            </invocation>
            <in-parameters>
                <param name="baseInfo.patientId" mapping="['patientId']" domain="integer"/>
                <param name="periodBeginDt" mapping="['periodBeginDt']" domain="date"/>
                <param name="periodEndDt" mapping="['periodEndDt']" domain="date"/>
                <param name="holdings" mapping="['holdings']" domain="object[]"/>
                <param name="prescriptionPeriodicityId" mapping="['periodicityId']"/>
            </in-parameters>
            <out-parameters>
                <param name="error" mapping="['error']" domain="string"/>
            </out-parameters>
            <result expression="['notExcessDose'] == true"/>
        </constraint>

        <!--todo: add medication used condition-->
        <condition id="checkHoldDoseValueFormat" level="error">
            <message>Неверный формат</message>
            <expression on="infusionHoldDoseValue"><![CDATA[
                    var regex = new RegExp('\^([1-9][0-9]*?)\$');
                    if(infusionHoldDoseValue!=null && typeof infusionHoldDoseValue!= 'undefined' && infusionHoldDoseValue!=''){
                        regex.test(infusionHoldDoseValue)&& (infusionHoldDoseValue<1000000000);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkInfusionIntroductionSpeedFormat" level="error">
            <message>Неверный формат</message>
            <expression on="infusionIntroductionSpeed"><![CDATA[
                    var regex = new RegExp('\^([1-9][0-9]*?)\$');
                    if(infusionIntroductionSpeed!=null && typeof infusionIntroductionSpeed!= 'undefined' && infusionIntroductionSpeed!=''){
                        regex.test(infusionIntroductionSpeed)&&(infusionIntroductionSpeed<1000000000);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkDoseFormat" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[0].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[0].dose!=null && typeof holdings[0].dose!= 'undefined'){
                        regex.test(holdings[0].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[0].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[0].count!=null && typeof holdings[0].count!= 'undefined'){
                        regex.test(holdings[0].count);
                    }else true;
                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat2" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[1].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[1].dose!=null && typeof holdings[1].dose!= 'undefined'){
                        regex.test(holdings[1].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat2" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[1].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[1].count!=null && typeof holdings[1].count!= 'undefined'){
                        regex.test(holdings[1].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat3" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[2].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[2].dose!=null && typeof holdings[2].dose!= 'undefined'){
                        regex.test(holdings[2].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat3" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[2].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[2].count!=null && typeof holdings[2].count!= 'undefined'){
                        regex.test(holdings[2].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat4" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[3].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[3].dose!=null && typeof holdings[3].dose!= 'undefined'){
                        regex.test(holdings[3].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat4" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[3].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[3].count!=null && typeof holdings[3].count!= 'undefined'){
                        regex.test(holdings[3].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat5" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[4].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[4].dose!=null && typeof holdings[4].dose!= 'undefined'){
                        regex.test(holdings[4].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat5" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[4].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[4].count!=null && typeof holdings[4].count!= 'undefined'){
                        regex.test(holdings[4].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat6" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[5].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[5].dose!=null && typeof holdings[5].dose!= 'undefined'){
                        regex.test(holdings[5].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat6" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[5].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[5].count!=null && typeof holdings[5].count!= 'undefined'){
                        regex.test(holdings[5].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat7" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[6].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[6].dose!=null && typeof holdings[6].dose!= 'undefined'){
                        regex.test(holdings[6].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat7" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[6].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[6].count!=null && typeof holdings[6].count!= 'undefined'){
                        regex.test(holdings[6].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat8" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[7].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[7].dose!=null && typeof holdings[7].dose!= 'undefined'){
                        regex.test(holdings[7].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat8" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[7].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[7].count!=null && typeof holdings[7].count!= 'undefined'){
                        regex.test(holdings[7].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat9" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[8].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[8].dose!=null && typeof holdings[8].dose!= 'undefined'){
                        regex.test(holdings[8].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat9" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[8].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[8].count!=null && typeof holdings[8].count!= 'undefined'){
                        regex.test(holdings[8].count);
                    }else true;

                ]]>
            </expression>
        </condition>
        <condition id="checkDoseFormat10" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[9].dose"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[9].dose!=null && typeof holdings[9].dose!= 'undefined'){
                        regex.test(holdings[9].dose);
                    }else true;
                ]]>
            </expression>
        </condition>

        <condition id="checkCountFormat10" level="error">
            <message>Неверный формат</message>
            <expression on="holdings[9].count"><![CDATA[
                    var regex = new RegExp('(\^[1-9][0-9]{0,4}\$)|(\^[0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9](([.,])([0-9]{1,3}))\$)|(\^[1-9][0-9]{1,2}(([.,])([0-9]{1,2}))\$)|(\^[1-9][0-9]{1,3}(([.,])([0-9]{1}))\$)');
                    if(holdings[9].count!=null && typeof holdings[9].count!= 'undefined'){
                        regex.test(holdings[9].count);
                    }else true;

                ]]>
            </expression>
        </condition>

        <condition id="validateSizeNote" level="error">
            <expression on="note">
                <![CDATA[
                note.length<= 256 && (typeof note != 'undefined' || note!= null)
                ]]>
            </expression>
            <message>Установлено ограничение 256 символов</message>
        </condition>
        <condition id="checkTransfusionName" level="error">
            <expression on="transfusionName">
                <![CDATA[
                transfusionName.length<= 256 && (typeof transfusionName != 'undefined' || transfusionName!= null)
                ]]>
            </expression>
            <message>Установлено ограничение 256 символов</message>
        </condition>
    </validations>

</object>
