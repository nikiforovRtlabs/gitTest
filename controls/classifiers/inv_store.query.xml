<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">
    <object-id>inventory_classifier</object-id>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from inventory.store s
                left outer join inventory.funding_source fs on fs.id=s.funding_source_id
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(s)
                from inventory.store s
                left outer join inventory.funding_source fs on fs.id=s.funding_source_id
                where :where
            </n2o:count-query>
            <n2o:alias>s</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
        </field>
        <field>
            <id>name</id>
            <domain>string</domain>
            <search>upper(s.name) like '%'||upper(:name)||'%'</search>
        </field>
        <field>
            <id>fundSourceId</id>
            <domain>integer</domain>
            <expression>s.funding_source_id</expression>
        </field>
        <field>
            <id>fundSource</id>
            <domain>object</domain>
            <expression>
                (select row_to_json(fundSource_json)
                from (select id,name from inventory.funding_source fs where fs.id=s.funding_source_id) as fundSource_json)
            </expression>
        </field>
        <field>
            <id>orgId</id>
            <domain>integer</domain>
            <expression>s.org_id</expression>
            <search>:expression=:orgId</search>
        </field>
        <field>
            <id>isForRequestDoc</id>
            <domain>boolean</domain>
            <expression>s.is_for_request_doc</expression>
            <search>:expression=:isForRequestDoc</search>
        </field>
        <field>
            <id>departmentId</id>
            <domain>integer</domain>
            <expression>s.department_id</expression>
            <search>(:expression=:departmentId or :expression is null)</search>
        </field>
        <field>
            <id>depId</id>
            <domain>integer</domain>
            <expression>s.department_id</expression>
        </field>
        <field>
            <id>storeTypeId</id>
            <domain>integer</domain>
            <expression>s.store_type_id</expression>
        </field>
        <field>
            <id>sendStoreTypeId</id>
            <domain>integer</domain>
            <expression>
                (select
                 case when s.store_type_id=2 then 1
                 else
                    case when  s.store_type_id=3 then 2 end
                end)
            </expression>
        </field>
        <field>
            <id>centralStore</id>
            <domain>object</domain>
            <expression>(select row_to_json(central)
                from (select s1.id, s1.name, s1.is_for_request_doc from inventory.store s1 where s1.id=s.central_store_id) as central) </expression>
        </field>
        <field>
            <id>centralTypeId</id>
            <domain>integer</domain>
            <expression>s.store_type_id</expression>
            <search>(case when :centralTypeId=2 then s.store_type_id=1
                else
                case when :centralTypeId=3 then s.store_type_id=2
                else true end
                end)
            </search>
        </field>
    </fields>
</query>