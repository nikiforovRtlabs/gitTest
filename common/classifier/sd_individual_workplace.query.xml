<?xml version='1.0' encoding='UTF-8'?>
<query xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0"
       xmlns="http://n2oapp.net/framework/config/schema/query-3.0">
    <object-id>sd_classifier</object-id>
    <name>sd_individual_workplace</name>
    <execution>
        <n2o:sql>
            <n2o:items-query>select :select
                from pim_organization po
                inner join pci_patient_job ppj on (ppj.organization_id = po.id)
                where :where
                order by :order
            </n2o:items-query>
            <n2o:count-query>select count(a)
                from sd_individual_workplace a
                where :where
            </n2o:count-query>
            <n2o:alias>a</n2o:alias>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>po.id</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true"/>
        </field>

        <field>
            <id>name</id>
            <domain>string</domain>
            <expression>po.short_name</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true">
                <filter type="eq" filter-field="name">
                    ( (lower(po.short_name) like '%'||lower(:name)||'%') or
                      (lower(po.full_name)  like '%'||lower(:name)||'%') )
                </filter>
            </filters>
        </field>

        <field>
            <id>organization_type_id</id>
            <domain>integer</domain>
            <expression>ppj.organization_type_id</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true">
                <filter type="eq" filter-field="organization_type_id" default-value="1">
                    :expression = :organization_type_id::integer
                </filter>
            </filters>
        </field>

        <field>
            <id>individual_id</id>
            <domain>integer</domain>
            <expression>ppj.patient_id</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true">
                <filter type="eq" filter-field="individual_id">
                    :expression = :individual_id
                </filter>
            </filters>
        </field>

        <field>
            <id>is_main_job</id>
            <domain>boolean</domain>
            <expression>coalesce(ppj.is_main_job,false)</expression>
            <display/>
            <sorting/>
            <filters auto-generate="true">
                <filter type="eq" filter-field="is_main_job">
                    :expression = :is_main_job
                </filter>
            </filters>
        </field>

    </fields>
</query>
