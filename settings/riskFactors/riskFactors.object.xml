<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:n2o="http://n2oapp.net/framework/config/schema/action-invocation-1.0">
    <name>riskFactors</name>

    <actions>
        <action id="createGroupRF" form-submit-label="Сохранить">
            <invocation>
                <n2o:sql>
                    select motherhood.save_riskFactors(:id, :name, :bDate, :eDate, null, null, :fromLow,
                    :toLow, :fromMedium, :toMedium, :fromHigh, :toHigh, null, 'group');
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="from.low" mapping="['fromLow']" domain="integer"/>
                <param name="to.low" mapping="['toLow']" domain="integer"/>
                <param name="from.medium" mapping="['fromMedium']" domain="integer"/>
                <param name="to.medium" mapping="['toMedium']" domain="integer"/>
                <param name="from.high" mapping="['fromHigh']" domain="integer"/>
                <param name="to.high" mapping="['toHigh']" domain="integer"/>
                <param name="period.begin" mapping="['bDate']" domain="date"/>
                <param name="period.end" mapping="['eDate']" domain="date"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
        </action>

        <action id="createValueGroupRF" form-submit-label="Сохранить">
            <invocation>
                <n2o:sql>
                    select motherhood.save_riskFactors(:id, :name, null, null, :groupId, :isOnlyOneOption, null, null, null, null, null, null, null, 'values');
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="groupId" mapping="['groupId']" domain="integer"/>
                <param name="isOnlyOneOption" mapping="['isOnlyOneOption']" domain="boolean"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
        </action>

        <action id="createOptionGroupRF" form-submit-label="Сохранить">
            <invocation>
                <n2o:sql>
                    select motherhood.save_riskFactors(:id, :name, null, null, :valueId, null, null, null, null, null, null, null, :points, 'options');
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="valueId" mapping="['valueId']" domain="integer"/>
                <param name="points" mapping="['points']" domain="integer"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0][0]"/>
            </out-parameters>
        </action>

        <action id="deleteGroupRF"  name="Удалить">
            <invocation>
                <n2o:sql>
                    delete from motherhood.risk_factory_group where id = :id;
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <success-text>Группа удалена</success-text>
            <confirmation-text>Вы уверены, что хотите удалить группу риска?</confirmation-text>
        </action>

        <action id="deleteValueGroupRF" name="Удалить">
            <invocation>
                <n2o:sql>
                    delete from motherhood.risk_factory_value where id = :id;
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <success-text>Значение удалено</success-text>
            <confirmation-text>Вы уверены, что хотите удалить значение?</confirmation-text>
        </action>

        <action id="deleteOptionGroupRF" name="Удалить">
            <invocation>
                <n2o:sql>
                    delete from motherhood.risk_factory_options where id = :id;
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <success-text>Вариант удален</success-text>
            <confirmation-text>Вы уверены, что хотите удалить вариант?</confirmation-text>
        </action>
    </actions>
    <validations>
        <condition id="isLowFromPositive" level="error">
            <message>Значение не может быть отрицательным</message>
            <expression on="from.low">
                <![CDATA[from.low === undefined || from.low >= 0 || from.low == null]]></expression>
        </condition>
        <condition id="isLowToPositive" level="error">
            <message>Значение не может быть отрицательным</message>
            <expression on="to.low">
                <![CDATA[to.low >= 0]]></expression>
        </condition>
        <condition id="isMediumFromPositive" level="error">
            <message>Значение не может быть отрицательным</message>
            <expression on="from.medium">
                <![CDATA[from.medium >= 0]]></expression>
        </condition>
        <condition id="isMediumToPositive" level="error">
            <message>Значение не может быть отрицательным</message>
            <expression on="to.medium">
                <![CDATA[to.medium >= 0]]></expression>
        </condition>
        <condition id="isHighFromPositive" level="error">
            <message>Значение не может быть отрицательным</message>
            <expression on="from.high">
                <![CDATA[from.high >= 0]]></expression>
        </condition>
        <condition id="isHighToPositive" level="error">
            <message>Значение не может быть отрицательным</message>
            <expression on="to.high">
                <![CDATA[to.high === undefined || to.high >= 0]]></expression>
        </condition>
        <condition id="lowCheck" level="error">
            <message>Проверьте значения у нижней и верхней границ</message>
            <expression on="from.low"><![CDATA[from.low === undefined || +to.low >= +from.low]]></expression>
        </condition>
        <condition id="lowToCheck" level="error">
            <message>Проверьте правильность вводимых значений</message>
            <expression><![CDATA[+from.medium > +to.low && from.medium - 1 == to.low]]></expression>
        </condition>
        <condition id="mediumCheck" level="error">
            <message>Проверьте значения у нижней и верхней границ</message>
            <expression><![CDATA[
              +from.medium > +to.low && from.medium - 1 == to.low && +from.high > +to.medium && from.high - 1 == to.medium && +to.medium >= +from.medium
            ]]></expression>
        </condition>
        <condition id="highFromCheck" level="error">
            <message>Проверьте правильность вводимых значений</message>
            <expression><![CDATA[+from.high > +to.medium && from.high - 1 == to.medium]]></expression>
        </condition>
        <condition id="highCheck" level="error">
            <message>Проверьте значения у нижней и верхней границ</message>
            <expression on="to.high"><![CDATA[to.high === undefined || to.high == null || to.high == '' || +to.high >= +from.high]]></expression>
        </condition>
    </validations>
</object>
