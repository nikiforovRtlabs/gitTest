<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:n2o="http://n2oapp.net/framework/config/schema/action-invocation-1.0">
    <name>accessOrg</name>

    <actions>
        <action id="create" name="Добавление организаций">
            <invocation>
                <n2o:sql>
                    insert into monitoring.mn_journal_access
                    (clinic_id, journal_id)
                    (SELECT t.id, :journalId from (select unnest(array(select value::int from json_array_elements_text(cast(:clinicIds as json)))) as id ) t);
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="clinic*.id" mapping="['clinicIds']" domain="string"/>
                <param name="journal_id" mapping="['journalId']" domain="integer"/>
            </in-parameters>
            <success-text>Организации сохранены</success-text>
        </action>

        <action id="delete" name="''Удаление выбранных организаций''">
            <invocation>
                <n2o:sql>
                    delete from monitoring.mn_journal_access where id = :id
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
            <confirmation-text>Вы действительно хотите удалить выбранные организации?</confirmation-text>
            <success-text>Организация удалена</success-text>
        </action>
    </actions>
    
    <validations>
        <constraint id="unique_name_in_org" level="error">
            <message>Невозможно добавить организации, так как среди выбранных организаций, существует одноименный журнал</message>
            <invocation>
                <n2o:sql>
                    select count(1) from monitoring.mn_journal j
                    JOIN monitoring.mn_journal_access mja ON j.id = mja.journal_id
                    where mja.clinic_id in (SELECT t.id  from (select unnest(array(select value::int from json_array_elements_text(cast(:clinicIds as json)))) as id ) t)
                    and  Upper(trim(j.name)) = (select Upper(trim(name)) from monitoring.mn_journal WHERE id = :journalId)
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="clinic*.id" mapping="['clinicIds']" domain="string"/>
                <param name="journal_id" mapping="['journalId']" domain="integer"/>
            </in-parameters>
            <result expression="[0][0][0] == 0"/>
        </constraint>
    </validations>

</object>
