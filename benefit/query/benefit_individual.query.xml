<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-2.0"
       xmlns:n2o="http://n2oapp.net/framework/config/schema/n2o-query-executions-1.0">

    <object-id>benefit_individual</object-id>

    <execution>
        <n2o:sql>
            <n2o:items-query>
                select :select
                from pim_individual ind
                where :where
                order by :order
            </n2o:items-query>

            <n2o:count-query>
                select count(ind) from pim_individual ind
                where :where
            </n2o:count-query>
        </n2o:sql>
    </execution>

    <fields>
        <field>
            <id>id</id>
            <domain>integer</domain>
            <expression>ind.id</expression>
        </field>

        <field>
            <id>patient_id</id>
            <domain>integer</domain>
            <expression>ind.id</expression>
        </field>

        <field>
            <id>request.patient_id</id>
            <domain>integer</domain>
            <expression>ind.id</expression>
        </field>

        <field>
            <id>fio</id>
            <name>ФИО</name>
            <domain>string</domain>
            <expression>ind.surname||' '||initcap(ind.name)||' '||initcap(ind.patr_name)</expression>
        </field>

        <field>
            <id>name</id>
            <name>Имя пациента</name>
            <domain>string</domain>
            <expression>ind.name</expression>
        </field>

        <field>
            <id>surname</id>
            <name>Фамилия пациента</name>
            <domain>string</domain>
            <expression>ind.surname</expression>
        </field>

        <field>
            <id>patr_name</id>
            <name>Отчество пациента</name>
            <domain>string</domain>
            <expression>ind.patr_name</expression>
        </field>

        <field>
            <id>gender.id</id>
            <name>Пол</name>
            <domain>integer</domain>
            <expression>ind.gender_id</expression>
        </field>

        <field>
            <id>gender.name</id>
            <name>Пол</name>
            <domain>integer</domain>
            <expression>(select gen.name from pim_gender gen where gen.id = ind.gender_id)</expression>
        </field>

        <field>
            <id>birth_dt</id>
            <name>Дата рождения</name>
            <domain>string</domain>
            <expression>to_char(ind.birth_dt, 'DD.MM.YYYY')</expression>
        </field>

        <field>
            <id>snils</id>
            <name>СНИЛС</name>
            <domain>string</domain>
            <expression>
                (select indc.code from pim_indiv_code indc where indc.indiv_id = ind.id and indc.type_id = 1
                limit 1)
            </expression>
        </field>

        <field>
            <id>age_three_year</id>
            <domain>boolean</domain>
            <expression>
                <![CDATA[
                (age(ind.birth_dt) < interval '3 year')
                ]]>
            </expression>
        </field>

        <field>
            <id>address</id>
            <domain>string</domain>
            <name>Адрес</name>
            <expression>
                <![CDATA[
                    (select
                    '(ОКАТО: ' || COALESCE(
                    address__get_nearest_okato(paddr.addr_id),'значение не определено') || ') ' ||
                    adr__get_element_as_text(paddr.addr_id, '(1,s,0)(2,s,0)(3,s,0)(4,s,0)(5,s,0)(6,s,0)(7,s,0)(8,s,0)(9,s,0)')
                    from pim_party_address paddr
                    join pim_party_addr_to_addr_type addr_to_type on addr_to_type.party_address_id = paddr.id
                    join pim_address_type addr_type on addr_type.id = addr_to_type.address_type_id AND addr_type.code = 'ACTUAL'
                    where paddr.party_id = ind.id and paddr.is_valid
                    limit 1 )
                ]]>
            </expression>
        </field>

        <field>
            <id>okato.value</id>
            <name>ОКАТО</name>
            <domain>string</domain>
            <expression>
                <![CDATA[
                  (select
                    address__get_nearest_okato(paddr.addr_id)
                    from pim_party_address paddr
                    join pim_party_addr_to_addr_type addr_to_type on addr_to_type.party_address_id = paddr.id
                    join pim_address_type addr_type on addr_type.id = addr_to_type.address_type_id AND addr_type.code = 'ACTUAL'
                    where paddr.party_id = ind.id and paddr.is_valid
                    limit 1 )
                ]]>
            </expression>
        </field>

        <field>
            <id>age_six_month</id>
            <domain>boolean</domain>
            <expression>
                <![CDATA[
                (age(ind.birth_dt) < interval '6 month')
                ]]>
            </expression>
        </field>

    </fields>
</query>