<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:n2o="http://n2oapp.net/framework/config/schema/action-sql-1.0">

    <name>Заявка на льготу</name>

    <actions>
        <action id="create">
            <invocation>
                <n2o:sql>
                    insert into pci_benefit_request (id, type_id, request_date, patient_id, name, patr_name, surname, gender_id, birth_dt,
                                                     snils, doc_type_id, doc_series, doc_number, address_code,org_id, reg_type_id, verification_date)
                    values (nextval('pci_benefit_request_id_seq'),:request_type_id, cast(now() as date), :patient_id, :name, :patr_name, :surname,
                            :gender_id, :birth_dt, :snils, :doc_type_id, :doc_series, :doc_number, :addr_code, :org_id, :reg_state_id, :verification_date);
                </n2o:sql>
            </invocation>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>

            <in-parameters>
                <param name="request_type.id" mapping="['request_type_id']" domain="integer"/>
                <param name="request_date" mapping="['request_date']" domain="date"/>
                <param name="patient.id" mapping="['patient_id']" domain="integer"/>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="surname" mapping="['surname']" domain="string"/>
                <param name="patr_name" mapping="['patr_name']" domain="string"/>
                <param name="gender.id" mapping="['gender_id']" domain="integer"/>
                <param name="birth_dt" mapping="['birth_dt']" domain="date"/>
                <param name="snils" mapping="['snils']" domain="string"/>
                <param name="doc_type.id" mapping="['doc_type_id']" domain="integer"/>
                <param name="doc_series" mapping="['doc_series']" domain="string"/>
                <param name="doc_number" mapping="['doc_number']" domain="string"/>
                <param name="patient.okato.value" mapping="['addr_code']" domain="string"/>
                <param name="org.id" mapping="['org_id']" domain="integer"/>
                <param name="reg_state.id" mapping="['reg_state_id']" domain="integer"/>
                <param name="doc_aud.date" mapping="['verification_date']" domain="date"/>
            </in-parameters>
        </action>

        <action id="update">
            <invocation>
                <n2o:sql>
                    update pci_benefit_request set
                    type_id=:request_type_id, request_date=:request_date,
                    name = :name, patr_name = :patr_name, surname = :surname, gender_id = :gender_id, birth_dt = :birth_dt,  snils = :snils, doc_type_id = :doc_type_id,
                    doc_series = :doc_series, doc_number =:doc_number, address_code = :addr_code, org_id = :org_id, reg_type_id = :reg_state_id
                    where id = :benefit_request_id and patient_id = :patient_id
                </n2o:sql>
            </invocation>

            <in-parameters>
                <param name="benefit_request_id" mapping="['benefit_request_id']" domain="integer"/>
                <param name="request_type.id" mapping="['request_type_id']" domain="integer"/>
                <param name="request_date" mapping="['request_date']" domain="date"/>
                <param name="patient.id" mapping="['patient_id']" domain="integer"/>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="surname" mapping="['surname']" domain="string"/>
                <param name="patr_name" mapping="['patr_name']" domain="string"/>
                <param name="gender.id" mapping="['gender_id']" domain="integer"/>
                <param name="birth_dt" mapping="['birth_dt']" domain="date"/>
                <param name="snils" mapping="['snils']" domain="string"/>
                <param name="doc_type.id" mapping="['doc_type_id']" domain="integer"/>
                <param name="doc_series" mapping="['doc_series']" domain="string"/>
                <param name="doc_number" mapping="['doc_number']" domain="string"/>
                <param name="okato.value" mapping="['addr_code']" domain="string"/>
                <param name="org.id" mapping="['org_id']" domain="integer"/>
                <param name="reg_state.id" mapping="['reg_state_id']" domain="integer"/>
            </in-parameters>
        </action>

        <action id="delete" name="Удаление заявки">
            <invocation>
                <n2o:sql>
                    DELETE FROM pci_benefit_request where id = :benefit_request_id and patient_id = :patient_id
                </n2o:sql>
            </invocation>

            <in-parameters>
                <param name="benefit_request_id" mapping="['benefit_request_id']" domain="integer"/>
                <param name="patient.id" mapping="['patient_id']" domain="integer"/>
            </in-parameters>
        </action>


        <action id="benefit_create">
            <invocation>
                <n2o:sql>
                    insert into pci_benefit_to_request (id, request_id, benefit_kind_id, category_id, diagnos_id, mental_symptom, doc_number)
                    values (nextval('pci_benefit_to_request_id_seq'), :request_id, :benefit_kind_id, :category_id, :diagnos_id, :mental_symptom, :doc_number);
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="request.id" mapping="['request_id']" domain="integer"/>
                <param name="benefit_kind.id" mapping="['benefit_kind_id']" domain="integer"/>
                <param name="benefit_definition.id" mapping="['category_id']" domain="integer"/>
                <param name="diagnosis.id" mapping="['diagnos_id']" domain="integer"/>
                <param name="diagnosis_mental.name" mapping="['mental_symptom']" domain="string"/>
                <param name="doc_number" mapping="['doc_number']" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param name="id" mapping="[0][0]"/>
            </out-parameters>
        </action>

        <action id="benefit_update">
            <invocation>
                <n2o:sql>
                    update pci_benefit_to_request set
                    request_id=:request_id, benefit_kind_id=:benefit_kind_id, category_id = :category_id, diagnos_id = :diagnos_id, mental_symptom = :diagnosis_mental, doc_number = :doc_number
                    where id = :id
                </n2o:sql>
            </invocation>

            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="request.id" mapping="['request_id']" domain="integer"/>
                <param name="benefit_kind.id" mapping="['benefit_kind_id']" domain="integer"/>
                <param name="benefit_definition.id" mapping="['category_id']" domain="integer"/>
                <param name="diagnosis.id" mapping="['diagnos_id']" domain="integer"/>
                <param name="diagnosis_mental.name" mapping="['diagnosis_mental']" domain="string"/>
                <param name="doc_number" mapping="['doc_number']" domain="string"/>
            </in-parameters>
        </action>

        <action id="benefit_delete" name="Удаление льготы">
            <invocation>
                <n2o:sql>
                    DELETE FROM pci_benefit_to_request where id = :id
                </n2o:sql>
            </invocation>

            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
        </action>

        <action id="benefit_create_first">
            <invocation>
                <n2o:sql>
                    insert into pci_benefit_to_request (id, request_id, benefit_kind_id, category_id, diagnos_id, mental_symptom, doc_number)
                    values (nextval('pci_benefit_to_request_id_seq'), :request_id, :benefit_kind_id, :category_id, :diagnos_id, :mental_symptom, :doc_number);
                </n2o:sql>
            </invocation>
            <in-parameters>
                <param name="request.id" mapping="['request_id']" domain="integer"/>
                <param name="benefit_kind.id" mapping="['benefit_kind_id']" domain="integer"/>
                <param name="benefit_definition.id" mapping="['category_id']" domain="integer"/>
                <param name="diagnosis.id" mapping="['diagnos_id']" domain="integer"/>
                <param name="diagnosis_mental.name" mapping="['mental_symptom']" domain="string"/>
                <param name="doc_number" mapping="['doc_number']" domain="string"/>
            </in-parameters>
        </action>

    </actions>

</object>